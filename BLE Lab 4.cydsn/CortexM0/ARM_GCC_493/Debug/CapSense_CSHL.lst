ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"CapSense_CSHL.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.comm	CapSense_rawFilterData1,10,4
  18              		.global	CapSense_sensorBaseline
  19              		.bss
  20              		.align	2
  21              		.type	CapSense_sensorBaseline, %object
  22              		.size	CapSense_sensorBaseline, 10
  23              	CapSense_sensorBaseline:
  24 0000 00000000 		.space	10
  24      00000000 
  24      0000
  25              		.global	CapSense_sensorBaselineLow
  26 000a 0000     		.align	2
  27              		.type	CapSense_sensorBaselineLow, %object
  28              		.size	CapSense_sensorBaselineLow, 5
  29              	CapSense_sensorBaselineLow:
  30 000c 00000000 		.space	5
  30      00
  31              		.global	CapSense_sensorSignal
  32 0011 000000   		.align	2
  33              		.type	CapSense_sensorSignal, %object
  34              		.size	CapSense_sensorSignal, 5
  35              	CapSense_sensorSignal:
  36 0014 00000000 		.space	5
  36      00
  37              		.global	CapSense_sensorOnMask
  38 0019 000000   		.align	2
  39              		.type	CapSense_sensorOnMask, %object
  40              		.size	CapSense_sensorOnMask, 1
  41              	CapSense_sensorOnMask:
  42 001c 00       		.space	1
  43              		.comm	CapSense_lowBaselineResetCnt,5,4
  44              		.global	CapSense_lowBaselineReset
  45              		.data
  46              		.align	2
  47              		.type	CapSense_lowBaselineReset, %object
  48              		.size	CapSense_lowBaselineReset, 5
  49              	CapSense_lowBaselineReset:
  50 0000 1E       		.byte	30
  51 0001 1E       		.byte	30
  52 0002 1E       		.byte	30
  53 0003 1E       		.byte	30
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 2


  54 0004 1E       		.byte	30
  55              		.global	CapSense_enableRawFilters
  56              		.type	CapSense_enableRawFilters, %object
  57              		.size	CapSense_enableRawFilters, 1
  58              	CapSense_enableRawFilters:
  59 0005 01       		.byte	1
  60              		.comm	CapSense_fingerThreshold,1,4
  61              		.comm	CapSense_noiseThreshold,1,4
  62              		.comm	CapSense_negativeNoiseThreshold,1,4
  63              		.comm	CapSense_hysteresis,1,4
  64              		.global	CapSense_debounce
  65 0006 0000     		.align	2
  66              		.type	CapSense_debounce, %object
  67              		.size	CapSense_debounce, 1
  68              	CapSense_debounce:
  69 0008 01       		.byte	1
  70              		.global	CapSense_rawDataIndex
  71              		.section	.rodata
  72              		.align	2
  73              		.type	CapSense_rawDataIndex, %object
  74              		.size	CapSense_rawDataIndex, 1
  75              	CapSense_rawDataIndex:
  76 0000 00       		.space	1
  77              		.global	CapSense_numberOfSensors
  78 0001 000000   		.align	2
  79              		.type	CapSense_numberOfSensors, %object
  80              		.size	CapSense_numberOfSensors, 1
  81              	CapSense_numberOfSensors:
  82 0004 05       		.byte	5
  83 0005 000000   		.align	2
  84              		.type	CapSense_centroidMult, %object
  85              		.size	CapSense_centroidMult, 2
  86              	CapSense_centroidMult:
  87 0008 0019     		.short	6400
  88 000a 0000     		.data
  89 0009 000000   		.align	2
  90              		.type	CapSense_posFiltersMask, %object
  91              		.size	CapSense_posFiltersMask, 1
  92              	CapSense_posFiltersMask:
  93 000c 02       		.byte	2
  94 000d 000000   		.align	2
  95              		.type	CapSense_posFiltersData, %object
  96              		.size	CapSense_posFiltersData, 4
  97              	CapSense_posFiltersData:
  98 0010 01       		.byte	1
  99 0011 00       		.byte	0
 100 0012 00       		.byte	0
 101 0013 00       		.byte	0
 102              		.section	.text.CapSense_BaseInit,"ax",%progbits
 103              		.align	2
 104              		.global	CapSense_BaseInit
 105              		.code	16
 106              		.thumb_func
 107              		.type	CapSense_BaseInit, %function
 108              	CapSense_BaseInit:
 109              	.LFB35:
 110              		.file 1 ".\\Generated_Source\\PSoC4\\CapSense_CSHL.c"
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 3


   1:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * File Name: CapSense_CSHL.c
   3:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Version 2.20
   4:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
   5:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Description:
   6:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This file provides the source code to the High Level APIs for the CapSesne
   7:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CSD component.
   8:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
   9:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Note:
  10:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
  11:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
  12:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Copyright 2014, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  18:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #include "CapSense_CSHL.h"
  19:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #include "CapSense_PVT.h"
  20:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  21:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /* SmartSense functions */
  22:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
  23:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     extern void CapSense_UpdateThresholds(uint32 sensor);
  24:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
  25:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  26:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /* Storage of filters data */
  27:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
  28:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)) )
  29:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  30:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData1[CapSense_TOTAL_SENSOR_COUNT];
  31:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData2[CapSense_TOTAL_SENSOR_COUNT];
  32:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  33:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #elif ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER))   || \
  34:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER))   || \
  35:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
  36:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER))   || \
  37:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER)) )
  38:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
  39:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData1[CapSense_TOTAL_SENSOR_COUNT];
  40:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* ( (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) || \
  41:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         *    (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) )
  42:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         */
  43:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  44:.\Generated_Source\PSoC4/CapSense_CSHL.c **** extern uint16 CapSense_sensorRaw[CapSense_TOTAL_SENSOR_COUNT];
  45:.\Generated_Source\PSoC4/CapSense_CSHL.c **** extern uint8 CapSense_sensorEnableMask[CapSense_TOTAL_SENSOR_MASK];
  46:.\Generated_Source\PSoC4/CapSense_CSHL.c **** extern const uint8 CapSense_widgetNumber[CapSense_TOTAL_SENSOR_COUNT];
  47:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  48:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
  49:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	extern uint32 CapSense_widgetResolution[CapSense_RESOLUTIONS_TBL_SIZE];	
  50:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
  51:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  52:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint16 CapSense_sensorBaseline[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  53:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorBaselineLow[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  54:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorSignal[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  55:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorOnMask[CapSense_TOTAL_SENSOR_MASK] = {0u};
  56:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  57:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_lowBaselineResetCnt[CapSense_TOTAL_SENSOR_COUNT];
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 4


  58:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_lowBaselineReset[CapSense_TOTAL_SENSOR_COUNT] = {
  59:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     30u, 30u, 30u, 30u, 30u, 
  60:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  61:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  62:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  63:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  64:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
  65:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	extern CapSense_CONFIG_TYPE_P4_v2_20 CapSense_config;
  66:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
  67:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  68:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_RAW_FILTER_MASK != 0u)
  69:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_enableRawFilters = CapSense_RAW_FILTERS_ENABLED;
  70:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* (CapSense_RAW_FILTER_MASK != 0u) */
  71:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  72:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /* Generated by Customizer */
  73:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_fingerThreshold[CapSense_THRESHOLD_TBL_SIZE];
  74:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  75:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_noiseThreshold[CapSense_THRESHOLD_TBL_SIZE];
  76:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  77:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_negativeNoiseThreshold[CapSense_THRESHOLD_TBL_SIZE];
  78:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  79:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_hysteresis[CapSense_WIDGET_PARAM_TBL_SIZE];
  80:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  81:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_debounce[] = {
  82:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, 
  83:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  84:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  85:.\Generated_Source\PSoC4/CapSense_CSHL.c **** const uint8 CapSense_rawDataIndex[] = {
  86:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     0u, /* LinearSlider0__LS */
  87:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  88:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  89:.\Generated_Source\PSoC4/CapSense_CSHL.c **** const uint8 CapSense_numberOfSensors[] = {
  90:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     5u, /* LinearSlider0__LS */
  91:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  92:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  93:.\Generated_Source\PSoC4/CapSense_CSHL.c **** static const uint16 CapSense_centroidMult[] = {
  94:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     6400u, 
  95:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  96:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  97:.\Generated_Source\PSoC4/CapSense_CSHL.c **** static uint8 CapSense_posFiltersMask[] = {
  98:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     0x2u, 
  99:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
 100:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 101:.\Generated_Source\PSoC4/CapSense_CSHL.c **** static uint8 CapSense_posFiltersData[] = {
 102:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, 0u, 0u, 0u, 
 103:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
 104:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 105:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 106:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 107:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 108:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 109:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_BaseInit
 110:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 111:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 112:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 113:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_sensorBaseline[sensor] array element with an 
 114:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value which is equal to the raw count value. 
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 5


 115:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Resets to zero CapSense_sensorBaselineLow[sensor] and 
 116:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[sensor] array element.
 117:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_rawFilterData2[sensor] and 
 118:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[sensor] array element with an 
 119:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value which is equal to the raw count value if the raw data filter is enabled.
 120:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 121:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 122:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 123:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 124:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 125:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 126:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 127:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 128:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[]    - used to store the baseline value.
 129:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaselineLow[] - used to store the fraction byte of 
 130:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the baseline value.
 131:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[]      - used to store a difference between 
 132:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the current value of raw data and the previous value of the baseline.
 133:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData1[]    - used to store a previous sample of 
 134:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  any enabled raw data filter.
 135:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[]    - used to store before a previous sample
 136:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  of the enabled raw data filter. Required only for median or average filters.
 137:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 138:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 139:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 140:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 141:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 142:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_BaseInit(uint32 sensor)
 143:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 111              		.loc 1 143 0
 112              		.cfi_startproc
 113 0000 80B5     		push	{r7, lr}
 114              		.cfi_def_cfa_offset 8
 115              		.cfi_offset 7, -8
 116              		.cfi_offset 14, -4
 117 0002 82B0     		sub	sp, sp, #8
 118              		.cfi_def_cfa_offset 16
 119 0004 00AF     		add	r7, sp, #0
 120              		.cfi_def_cfa_register 7
 121 0006 7860     		str	r0, [r7, #4]
 144:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if ((CapSense_TOTAL_BUTTONS_COUNT) || (CapSense_TOTAL_MATRIX_BUTTONS_COUNT) || \
 145:.\Generated_Source\PSoC4/CapSense_CSHL.c ****          (CapSense_TOTAL_GENERICS_COUNT))
 146:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 widget = CapSense_widgetNumber[sensor];
 147:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* ((CapSense_TOTAL_MATRIX_BUTTONS_COUNT) || (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)) */
 148:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 149:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)
 150:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 debounceIndex;
 151:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* (CapSense_TOTAL_MATRIX_BUTTONS_COUNT) */
 152:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 153:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 154:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 155:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 156:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 157:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 158:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 159:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Initialize Baseline */
 160:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorBaseline[sensor] = CapSense_sensorRaw[sensor];
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 6


 122              		.loc 1 160 0
 123 0008 0E4B     		ldr	r3, .L2
 124 000a 7A68     		ldr	r2, [r7, #4]
 125 000c 5200     		lsl	r2, r2, #1
 126 000e D15A     		ldrh	r1, [r2, r3]
 127 0010 0D4B     		ldr	r3, .L2+4
 128 0012 7A68     		ldr	r2, [r7, #4]
 129 0014 5200     		lsl	r2, r2, #1
 130 0016 D152     		strh	r1, [r2, r3]
 161:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorBaselineLow[sensor] = 0u;
 131              		.loc 1 161 0
 132 0018 0C4A     		ldr	r2, .L2+8
 133 001a 7B68     		ldr	r3, [r7, #4]
 134 001c D318     		add	r3, r2, r3
 135 001e 0022     		mov	r2, #0
 136 0020 1A70     		strb	r2, [r3]
 162:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorSignal[sensor] = 0u;
 137              		.loc 1 162 0
 138 0022 0B4A     		ldr	r2, .L2+12
 139 0024 7B68     		ldr	r3, [r7, #4]
 140 0026 D318     		add	r3, r2, r3
 141 0028 0022     		mov	r2, #0
 142 002a 1A70     		strb	r2, [r3]
 163:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
 164:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 165:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 166:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if ((0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) ||\
 167:.\Generated_Source\PSoC4/CapSense_CSHL.c ****          (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)))
 168:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 169:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = CapSense_sensorRaw[sensor];
 170:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData2[sensor] = CapSense_sensorRaw[sensor];
 171:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 172:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #elif ((CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER) ||\
 173:.\Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER) ||\
 174:.\Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER) ||\
 175:.\Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER) ||\
 176:.\Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER))
 177:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             
 178:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = CapSense_sensorRaw[sensor];
 143              		.loc 1 178 0
 144 002c 054B     		ldr	r3, .L2
 145 002e 7A68     		ldr	r2, [r7, #4]
 146 0030 5200     		lsl	r2, r2, #1
 147 0032 D15A     		ldrh	r1, [r2, r3]
 148 0034 074B     		ldr	r3, .L2+16
 149 0036 7A68     		ldr	r2, [r7, #4]
 150 0038 5200     		lsl	r2, r2, #1
 151 003a D152     		strh	r1, [r2, r3]
 179:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 180:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
 181:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* No Raw filters */
 182:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* ((CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) || \
 183:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             *   (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER))
 184:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             */
 185:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 186:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 187:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 7


 188:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 189:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 190:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 152              		.loc 1 190 0
 153 003c BD46     		mov	sp, r7
 154 003e 02B0     		add	sp, sp, #8
 155              		@ sp needed
 156 0040 80BD     		pop	{r7, pc}
 157              	.L3:
 158 0042 C046     		.align	2
 159              	.L2:
 160 0044 00000000 		.word	CapSense_sensorRaw
 161 0048 00000000 		.word	CapSense_sensorBaseline
 162 004c 00000000 		.word	CapSense_sensorBaselineLow
 163 0050 00000000 		.word	CapSense_sensorSignal
 164 0054 00000000 		.word	CapSense_rawFilterData1
 165              		.cfi_endproc
 166              	.LFE35:
 167              		.size	CapSense_BaseInit, .-CapSense_BaseInit
 168              		.section	.text.CapSense_InitializeSensorBaseline,"ax",%progbits
 169              		.align	2
 170              		.global	CapSense_InitializeSensorBaseline
 171              		.code	16
 172              		.thumb_func
 173              		.type	CapSense_InitializeSensorBaseline, %function
 174              	CapSense_InitializeSensorBaseline:
 175              	.LFB36:
 191:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 192:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 193:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 194:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeSensorBaseline
 195:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 196:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 197:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 198:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_sensorBaseline[sensor] array element with an 
 199:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value by scanning the selected sensor (one channel design) or a pair 
 200:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  of sensors (two channels designs). The raw count value is copied into the 
 201:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline array for each sensor. The raw data filters are initialized if 
 202:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  enabled.
 203:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 204:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 205:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 206:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 207:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 208:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 209:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 210:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 211:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 212:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 213:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 214:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 215:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 216:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 217:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeSensorBaseline(uint32 sensor)
 218:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 176              		.loc 1 218 0
 177              		.cfi_startproc
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 8


 178 0000 80B5     		push	{r7, lr}
 179              		.cfi_def_cfa_offset 8
 180              		.cfi_offset 7, -8
 181              		.cfi_offset 14, -4
 182 0002 82B0     		sub	sp, sp, #8
 183              		.cfi_def_cfa_offset 16
 184 0004 00AF     		add	r7, sp, #0
 185              		.cfi_def_cfa_register 7
 186 0006 7860     		str	r0, [r7, #4]
 219:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Scan sensor */
 220:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_ScanSensor(sensor);
 187              		.loc 1 220 0
 188 0008 7B68     		ldr	r3, [r7, #4]
 189 000a 181C     		mov	r0, r3
 190 000c FFF7FEFF 		bl	CapSense_ScanSensor
 221:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(CapSense_IsBusy() != 0u)
 191              		.loc 1 221 0
 192 0010 C046     		mov	r8, r8
 193              	.L5:
 194              		.loc 1 221 0 is_stmt 0 discriminator 1
 195 0012 FFF7FEFF 		bl	CapSense_IsBusy
 196 0016 031E     		sub	r3, r0, #0
 197 0018 FBD1     		bne	.L5
 222:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 223:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Wait while sensor is busy */
 224:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 225:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 226:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Initialize Baseline, Signal and debounce counters */       
 227:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_BaseInit(sensor);
 198              		.loc 1 227 0 is_stmt 1
 199 001a 7B68     		ldr	r3, [r7, #4]
 200 001c 181C     		mov	r0, r3
 201 001e FFF7FEFF 		bl	CapSense_BaseInit
 228:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 202              		.loc 1 228 0
 203 0022 BD46     		mov	sp, r7
 204 0024 02B0     		add	sp, sp, #8
 205              		@ sp needed
 206 0026 80BD     		pop	{r7, pc}
 207              		.cfi_endproc
 208              	.LFE36:
 209              		.size	CapSense_InitializeSensorBaseline, .-CapSense_InitializeSensorBaseline
 210              		.section	.text.CapSense_InitializeAllBaselines,"ax",%progbits
 211              		.align	2
 212              		.global	CapSense_InitializeAllBaselines
 213              		.code	16
 214              		.thumb_func
 215              		.type	CapSense_InitializeAllBaselines, %function
 216              	CapSense_InitializeAllBaselines:
 217              	.LFB37:
 229:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 230:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 231:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 232:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeAllBaselines
 233:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 234:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 235:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 9


 236:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Uses the CapSense_InitializeSensorBaseline function to load the 
 237:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] array with an initial values by scanning 
 238:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  all the sensors. The raw count values are copied into the baseline array for 
 239:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  all the sensors. The raw data filters are initialized if enabled.
 240:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 241:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 242:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 243:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 244:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 245:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 246:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 247:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 248:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 249:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 250:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 251:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 252:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 253:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 254:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeAllBaselines(void)
 255:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 218              		.loc 1 255 0
 219              		.cfi_startproc
 220 0000 80B5     		push	{r7, lr}
 221              		.cfi_def_cfa_offset 8
 222              		.cfi_offset 7, -8
 223              		.cfi_offset 14, -4
 224 0002 82B0     		sub	sp, sp, #8
 225              		.cfi_def_cfa_offset 16
 226 0004 00AF     		add	r7, sp, #0
 227              		.cfi_def_cfa_register 7
 256:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 257:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 258:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	for(i = 0u; i < CapSense_TOTAL_SCANSLOT_COUNT; i++)
 228              		.loc 1 258 0
 229 0006 0023     		mov	r3, #0
 230 0008 7B60     		str	r3, [r7, #4]
 231 000a 06E0     		b	.L7
 232              	.L8:
 259:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 260:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     	CapSense_InitializeSensorBaseline(i);
 233              		.loc 1 260 0 discriminator 3
 234 000c 7B68     		ldr	r3, [r7, #4]
 235 000e 181C     		mov	r0, r3
 236 0010 FFF7FEFF 		bl	CapSense_InitializeSensorBaseline
 258:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 237              		.loc 1 258 0 discriminator 3
 238 0014 7B68     		ldr	r3, [r7, #4]
 239 0016 0133     		add	r3, r3, #1
 240 0018 7B60     		str	r3, [r7, #4]
 241              	.L7:
 258:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 242              		.loc 1 258 0 is_stmt 0 discriminator 1
 243 001a 7B68     		ldr	r3, [r7, #4]
 244 001c 042B     		cmp	r3, #4
 245 001e F5D9     		bls	.L8
 261:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 262:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 10


 246              		.loc 1 262 0 is_stmt 1
 247 0020 BD46     		mov	sp, r7
 248 0022 02B0     		add	sp, sp, #8
 249              		@ sp needed
 250 0024 80BD     		pop	{r7, pc}
 251              		.cfi_endproc
 252              	.LFE37:
 253              		.size	CapSense_InitializeAllBaselines, .-CapSense_InitializeAllBaselines
 254 0026 C046     		.section	.text.CapSense_InitializeEnabledBaselines,"ax",%progbits
 255              		.align	2
 256              		.global	CapSense_InitializeEnabledBaselines
 257              		.code	16
 258              		.thumb_func
 259              		.type	CapSense_InitializeEnabledBaselines, %function
 260              	CapSense_InitializeEnabledBaselines:
 261              	.LFB38:
 263:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 264:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 265:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 266:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeEnabledBaselines
 267:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 268:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 269:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 270:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Scans all the enabled widgets and the raw count values are copied into the 
 271:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline array for all the sensors enabled in the scanning process. The baselines 
 272:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  are initialized with zero values for sensors disabled from the scanning process. 
 273:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  The raw data filters are initialized if enabled.
 274:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 275:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 276:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 277:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 278:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 279:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 280:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 281:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 282:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorRaw[] - used to store the sensors raw data.
 283:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[ ] - used to store bit masks of the enabled sensors.
 284:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 285:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 286:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 287:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 288:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 289:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeEnabledBaselines(void)
 290:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 262              		.loc 1 290 0
 263              		.cfi_startproc
 264 0000 80B5     		push	{r7, lr}
 265              		.cfi_def_cfa_offset 8
 266              		.cfi_offset 7, -8
 267              		.cfi_offset 14, -4
 268 0002 82B0     		sub	sp, sp, #8
 269              		.cfi_def_cfa_offset 16
 270 0004 00AF     		add	r7, sp, #0
 271              		.cfi_def_cfa_register 7
 291:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 292:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 293:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 11


 294:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_ScanEnabledWidgets();
 272              		.loc 1 294 0
 273 0006 FFF7FEFF 		bl	CapSense_ScanEnabledWidgets
 295:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(CapSense_IsBusy() != 0u)
 274              		.loc 1 295 0
 275 000a C046     		mov	r8, r8
 276              	.L10:
 277              		.loc 1 295 0 is_stmt 0 discriminator 1
 278 000c FFF7FEFF 		bl	CapSense_IsBusy
 279 0010 031E     		sub	r3, r0, #0
 280 0012 FBD1     		bne	.L10
 296:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 297:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Wait while sensor is busy */
 298:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 299:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 300:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 281              		.loc 1 300 0 is_stmt 1
 282 0014 0023     		mov	r3, #0
 283 0016 7B60     		str	r3, [r7, #4]
 284 0018 11E0     		b	.L11
 285              	.L13:
 301:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 302:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 286              		.loc 1 302 0
 287 001a 0C4A     		ldr	r2, .L14
 288 001c 7B68     		ldr	r3, [r7, #4]
 289 001e 101C     		mov	r0, r2
 290 0020 191C     		mov	r1, r3
 291 0022 FFF7FEFF 		bl	CapSense_GetBitValue
 292 0026 031C     		mov	r3, r0
 293 0028 3B60     		str	r3, [r7]
 303:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
 304:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Clear raw data if sensor is disabled from scanning process */
 305:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(isSensorEnabled != 0u)
 294              		.loc 1 305 0
 295 002a 3B68     		ldr	r3, [r7]
 296 002c 002B     		cmp	r3, #0
 297 002e 03D0     		beq	.L12
 306:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 307:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Initialize baselines */
 308:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_BaseInit(i);
 298              		.loc 1 308 0
 299 0030 7B68     		ldr	r3, [r7, #4]
 300 0032 181C     		mov	r0, r3
 301 0034 FFF7FEFF 		bl	CapSense_BaseInit
 302              	.L12:
 300:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 303              		.loc 1 300 0 discriminator 2
 304 0038 7B68     		ldr	r3, [r7, #4]
 305 003a 0133     		add	r3, r3, #1
 306 003c 7B60     		str	r3, [r7, #4]
 307              	.L11:
 300:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 308              		.loc 1 300 0 is_stmt 0 discriminator 1
 309 003e 7B68     		ldr	r3, [r7, #4]
 310 0040 042B     		cmp	r3, #4
 311 0042 EAD9     		bls	.L13
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 12


 309:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 310:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 311:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }  
 312              		.loc 1 311 0 is_stmt 1
 313 0044 BD46     		mov	sp, r7
 314 0046 02B0     		add	sp, sp, #8
 315              		@ sp needed
 316 0048 80BD     		pop	{r7, pc}
 317              	.L15:
 318 004a C046     		.align	2
 319              	.L14:
 320 004c 00000000 		.word	CapSense_sensorEnableMask
 321              		.cfi_endproc
 322              	.LFE38:
 323              		.size	CapSense_InitializeEnabledBaselines, .-CapSense_InitializeEnabledBaselines
 324              		.section	.text.CapSense_UpdateBaselineNoThreshold,"ax",%progbits
 325              		.align	2
 326              		.global	CapSense_UpdateBaselineNoThreshold
 327              		.code	16
 328              		.thumb_func
 329              		.type	CapSense_UpdateBaselineNoThreshold, %function
 330              	CapSense_UpdateBaselineNoThreshold:
 331              	.LFB39:
 312:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 313:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 314:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 315:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateBaselineNoThreshold
 316:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 317:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 318:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 319:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Updates the CapSense_sensorBaseline[sensor] array element using the 
 320:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by 
 321:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 322:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  it in CapSense_sensorSignal[sensor]. 
 323:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold. 
 324:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating; baseline is loaded 
 325:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  with a raw count value if a signal is greater than zero and if signal is less 
 326:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  than noise threshold.
 327:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline 
 328:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  calculation.
 329:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 330:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API does not update the thresholds in the Smartsense Mode.
 331:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 332:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 333:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 334:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 335:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 336:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 337:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 338:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 339:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
 340:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[]    - used to store baseline value.
 341:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaselineLow[] - used to store fraction byte of 
 342:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline value.
 343:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[]      - used to store difference between 
 344:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  current value of raw data and previous value of baseline.
 345:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData1[]    - used to store previous sample of 
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 13


 346:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  any enabled raw data filter.
 347:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[]    - used to store before previous sample
 348:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 349:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 350:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 351:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 352:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 353:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 354:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_UpdateBaselineNoThreshold(uint32 sensor)
 355:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 332              		.loc 1 355 0
 333              		.cfi_startproc
 334 0000 90B5     		push	{r4, r7, lr}
 335              		.cfi_def_cfa_offset 12
 336              		.cfi_offset 4, -12
 337              		.cfi_offset 7, -8
 338              		.cfi_offset 14, -4
 339 0002 87B0     		sub	sp, sp, #28
 340              		.cfi_def_cfa_offset 40
 341 0004 00AF     		add	r7, sp, #0
 342              		.cfi_def_cfa_register 7
 343 0006 7860     		str	r0, [r7, #4]
 356:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 calc;
 357:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	uint32 sign;
 358:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 tempRaw;
 359:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 filteredRawData;
 360:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 widget = CapSense_widgetNumber[sensor];
 344              		.loc 1 360 0
 345 0008 0F23     		mov	r3, #15
 346 000a FB18     		add	r3, r7, r3
 347 000c 7E49     		ldr	r1, .L29
 348 000e 7A68     		ldr	r2, [r7, #4]
 349 0010 8A18     		add	r2, r1, r2
 350 0012 1278     		ldrb	r2, [r2]
 351 0014 1A70     		strb	r2, [r3]
 361:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 noiseThreshold = CapSense_noiseThreshold[widget];
 352              		.loc 1 361 0
 353 0016 0F23     		mov	r3, #15
 354 0018 FB18     		add	r3, r7, r3
 355 001a 1A78     		ldrb	r2, [r3]
 356 001c 0E23     		mov	r3, #14
 357 001e FB18     		add	r3, r7, r3
 358 0020 7A49     		ldr	r1, .L29+4
 359 0022 8A5C     		ldrb	r2, [r1, r2]
 360 0024 1A70     		strb	r2, [r3]
 362:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 363:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 364:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 365:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 366:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 367:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 368:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 369:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     filteredRawData = CapSense_sensorRaw[sensor];
 361              		.loc 1 369 0
 362 0026 1023     		mov	r3, #16
 363 0028 FB18     		add	r3, r7, r3
 364 002a 794A     		ldr	r2, .L29+8
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 14


 365 002c 7968     		ldr	r1, [r7, #4]
 366 002e 4900     		lsl	r1, r1, #1
 367 0030 8A5A     		ldrh	r2, [r1, r2]
 368 0032 1A80     		strh	r2, [r3]
 370:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 371:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#if (CapSense_RAW_FILTER_MASK != 0u)
 372:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	if(CapSense_enableRawFilters != 0u)
 369              		.loc 1 372 0
 370 0034 774B     		ldr	r3, .L29+12
 371 0036 1B78     		ldrb	r3, [r3]
 372 0038 002B     		cmp	r3, #0
 373 003a 15D0     		beq	.L17
 373:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 374:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#if (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)
 375:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			tempRaw = filteredRawData;
 376:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			filteredRawData = CapSense_MedianFilter(filteredRawData, CapSense_rawFilterData1[sensor], 
 377:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 															CapSense_rawFilterData2[sensor]);
 378:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
 379:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData1[sensor] = tempRaw;
 380:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			
 381:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#elif (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)
 382:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			tempRaw = filteredRawData;
 383:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			filteredRawData = CapSense_AveragingFilter(filteredRawData, CapSense_rawFilterData1[sensor],
 384:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 															   CapSense_rawFilterData2[sensor]);
 385:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
 386:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData1[sensor] = tempRaw;
 387:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			
 388:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#elif (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)
 389:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			filteredRawData = CapSense_IIR2Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 390:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData1[sensor] = filteredRawData;
 391:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			
 392:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#elif (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)
 393:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			filteredRawData = CapSense_IIR4Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 374              		.loc 1 393 0
 375 003c 764B     		ldr	r3, .L29+16
 376 003e 7A68     		ldr	r2, [r7, #4]
 377 0040 5200     		lsl	r2, r2, #1
 378 0042 D25A     		ldrh	r2, [r2, r3]
 379 0044 1023     		mov	r3, #16
 380 0046 FC18     		add	r4, r7, r3
 381 0048 1023     		mov	r3, #16
 382 004a FB18     		add	r3, r7, r3
 383 004c 1B88     		ldrh	r3, [r3]
 384 004e 181C     		mov	r0, r3
 385 0050 111C     		mov	r1, r2
 386 0052 FFF7FEFF 		bl	CapSense_IIR4Filter
 387 0056 031C     		mov	r3, r0
 388 0058 2380     		strh	r3, [r4]
 394:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData1[sensor] = filteredRawData;
 389              		.loc 1 394 0
 390 005a 6F4B     		ldr	r3, .L29+16
 391 005c 7A68     		ldr	r2, [r7, #4]
 392 005e 5200     		lsl	r2, r2, #1
 393 0060 1021     		mov	r1, #16
 394 0062 7918     		add	r1, r7, r1
 395 0064 0988     		ldrh	r1, [r1]
 396 0066 D152     		strh	r1, [r2, r3]
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 15


 397              	.L17:
 395:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 				
 396:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#elif (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)
 397:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			filteredRawData = CapSense_JitterFilter(filteredRawData, CapSense_rawFilterData1[sensor]);
 398:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData1[sensor] = filteredRawData;
 399:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			
 400:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#elif (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)
 401:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			filteredRawData = CapSense_IIR8Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 402:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData1[sensor] = filteredRawData;
 403:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			
 404:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#elif (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER)
 405:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			filteredRawData = CapSense_IIR16Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 406:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData1[sensor] = filteredRawData;
 407:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			
 408:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#else
 409:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			/* No Raw filters */
 410:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#endif  /* (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) */
 411:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 412:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#endif  /* (CapSense_RAW_FILTER_MASK != 0u) */
 413:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
 414:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
 415:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	    MeasureNoiseEnvelope_P4_v2_20(&CapSense_config, (uint8)sensor, CapSense_sensorRaw);
 398              		.loc 1 415 0
 399 0068 7B68     		ldr	r3, [r7, #4]
 400 006a DAB2     		uxtb	r2, r3
 401 006c 6B49     		ldr	r1, .L29+20
 402 006e 684B     		ldr	r3, .L29+8
 403 0070 081C     		mov	r0, r1
 404 0072 111C     		mov	r1, r2
 405 0074 1A1C     		mov	r2, r3
 406 0076 FFF7FEFF 		bl	MeasureNoiseEnvelope_P4_v2_20
 416:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
 417:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 418:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Baseline calculation */
 419:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Calculate difference RawData[cur] - Baseline[prev] */
 420:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if(filteredRawData >= CapSense_sensorBaseline[sensor])
 407              		.loc 1 420 0
 408 007a 694B     		ldr	r3, .L29+24
 409 007c 7A68     		ldr	r2, [r7, #4]
 410 007e 5200     		lsl	r2, r2, #1
 411 0080 D35A     		ldrh	r3, [r2, r3]
 412 0082 1022     		mov	r2, #16
 413 0084 BA18     		add	r2, r7, r2
 414 0086 1288     		ldrh	r2, [r2]
 415 0088 9A42     		cmp	r2, r3
 416 008a 12D3     		bcc	.L18
 421:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 422:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_lowBaselineResetCnt[sensor] = 0u;	
 417              		.loc 1 422 0
 418 008c 654A     		ldr	r2, .L29+28
 419 008e 7B68     		ldr	r3, [r7, #4]
 420 0090 D318     		add	r3, r2, r3
 421 0092 0022     		mov	r2, #0
 422 0094 1A70     		strb	r2, [r3]
 423:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tempRaw = filteredRawData - CapSense_sensorBaseline[sensor];
 423              		.loc 1 423 0
 424 0096 624B     		ldr	r3, .L29+24
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 16


 425 0098 7A68     		ldr	r2, [r7, #4]
 426 009a 5200     		lsl	r2, r2, #1
 427 009c D25A     		ldrh	r2, [r2, r3]
 428 009e 1223     		mov	r3, #18
 429 00a0 FB18     		add	r3, r7, r3
 430 00a2 1021     		mov	r1, #16
 431 00a4 7918     		add	r1, r7, r1
 432 00a6 0988     		ldrh	r1, [r1]
 433 00a8 8A1A     		sub	r2, r1, r2
 434 00aa 1A80     		strh	r2, [r3]
 424:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 1u;    /* Positive difference - Calculate the Signal */
 435              		.loc 1 424 0
 436 00ac 0123     		mov	r3, #1
 437 00ae 7B61     		str	r3, [r7, #20]
 438 00b0 0CE0     		b	.L19
 439              	.L18:
 425:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 426:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 427:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 428:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tempRaw = CapSense_sensorBaseline[sensor] - filteredRawData;
 440              		.loc 1 428 0
 441 00b2 5B4B     		ldr	r3, .L29+24
 442 00b4 7A68     		ldr	r2, [r7, #4]
 443 00b6 5200     		lsl	r2, r2, #1
 444 00b8 D15A     		ldrh	r1, [r2, r3]
 445 00ba 1223     		mov	r3, #18
 446 00bc FB18     		add	r3, r7, r3
 447 00be 1022     		mov	r2, #16
 448 00c0 BA18     		add	r2, r7, r2
 449 00c2 1288     		ldrh	r2, [r2]
 450 00c4 8A1A     		sub	r2, r1, r2
 451 00c6 1A80     		strh	r2, [r3]
 429:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 0u;    /* Negative difference - Do NOT calculate the Signal */
 452              		.loc 1 429 0
 453 00c8 0023     		mov	r3, #0
 454 00ca 7B61     		str	r3, [r7, #20]
 455              	.L19:
 430:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 431:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 432:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 433:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	if((sign == 0u) && (tempRaw > (uint16) CapSense_negativeNoiseThreshold[widget]))
 456              		.loc 1 433 0
 457 00cc 7B69     		ldr	r3, [r7, #20]
 458 00ce 002B     		cmp	r3, #0
 459 00d0 2AD1     		bne	.L20
 460              		.loc 1 433 0 is_stmt 0 discriminator 1
 461 00d2 0F23     		mov	r3, #15
 462 00d4 FB18     		add	r3, r7, r3
 463 00d6 1B78     		ldrb	r3, [r3]
 464 00d8 534A     		ldr	r2, .L29+32
 465 00da D35C     		ldrb	r3, [r2, r3]
 466 00dc 9BB2     		uxth	r3, r3
 467 00de 1222     		mov	r2, #18
 468 00e0 BA18     		add	r2, r7, r2
 469 00e2 1288     		ldrh	r2, [r2]
 470 00e4 9A42     		cmp	r2, r3
 471 00e6 1FD9     		bls	.L20
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 17


 434:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#else
 435:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	if((sign == 0u) && (tempRaw > (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD))
 436:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */ 
 437:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 438:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_lowBaselineResetCnt[sensor] >= CapSense_lowBaselineReset[sensor])
 472              		.loc 1 438 0 is_stmt 1
 473 00e8 4E4A     		ldr	r2, .L29+28
 474 00ea 7B68     		ldr	r3, [r7, #4]
 475 00ec D318     		add	r3, r2, r3
 476 00ee 1A78     		ldrb	r2, [r3]
 477 00f0 4E49     		ldr	r1, .L29+36
 478 00f2 7B68     		ldr	r3, [r7, #4]
 479 00f4 CB18     		add	r3, r1, r3
 480 00f6 1B78     		ldrb	r3, [r3]
 481 00f8 9A42     		cmp	r2, r3
 482 00fa 09D3     		bcc	.L21
 439:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 440:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_BaseInit(sensor);
 483              		.loc 1 440 0
 484 00fc 7B68     		ldr	r3, [r7, #4]
 485 00fe 181C     		mov	r0, r3
 486 0100 FFF7FEFF 		bl	CapSense_BaseInit
 441:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor] = 0u;
 487              		.loc 1 441 0
 488 0104 474A     		ldr	r2, .L29+28
 489 0106 7B68     		ldr	r3, [r7, #4]
 490 0108 D318     		add	r3, r2, r3
 491 010a 0022     		mov	r2, #0
 492 010c 1A70     		strb	r2, [r3]
 438:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 493              		.loc 1 438 0
 494 010e 51E0     		b	.L23
 495              	.L21:
 442:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 443:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
 444:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 445:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor]++;
 496              		.loc 1 445 0
 497 0110 444A     		ldr	r2, .L29+28
 498 0112 7B68     		ldr	r3, [r7, #4]
 499 0114 D318     		add	r3, r2, r3
 500 0116 1B78     		ldrb	r3, [r3]
 501 0118 0133     		add	r3, r3, #1
 502 011a D9B2     		uxtb	r1, r3
 503 011c 414A     		ldr	r2, .L29+28
 504 011e 7B68     		ldr	r3, [r7, #4]
 505 0120 D318     		add	r3, r2, r3
 506 0122 0A1C     		add	r2, r1, #0
 507 0124 1A70     		strb	r2, [r3]
 438:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 508              		.loc 1 438 0
 509 0126 45E0     		b	.L23
 510              	.L20:
 446:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 447:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 448:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 449:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 18


 450:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 451:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)			
 452:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			/* Update Baseline if lower than noiseThreshold */
 453:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			if ( (tempRaw <= noiseThreshold) || 
 511              		.loc 1 453 0
 512 0128 0E23     		mov	r3, #14
 513 012a FB18     		add	r3, r7, r3
 514 012c 1B78     		ldrb	r3, [r3]
 515 012e 9BB2     		uxth	r3, r3
 516 0130 1222     		mov	r2, #18
 517 0132 BA18     		add	r2, r7, r2
 518 0134 1288     		ldrh	r2, [r2]
 519 0136 9A42     		cmp	r2, r3
 520 0138 0DD9     		bls	.L24
 454:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			 ((tempRaw < (uint16) CapSense_negativeNoiseThreshold[widget])
 521              		.loc 1 454 0 discriminator 1
 522 013a 0F23     		mov	r3, #15
 523 013c FB18     		add	r3, r7, r3
 524 013e 1B78     		ldrb	r3, [r3]
 525 0140 394A     		ldr	r2, .L29+32
 526 0142 D35C     		ldrb	r3, [r2, r3]
 527 0144 9BB2     		uxth	r3, r3
 453:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			 ((tempRaw < (uint16) CapSense_negativeNoiseThreshold[widget])
 528              		.loc 1 453 0 discriminator 1
 529 0146 1222     		mov	r2, #18
 530 0148 BA18     		add	r2, r7, r2
 531 014a 1288     		ldrh	r2, [r2]
 532 014c 9A42     		cmp	r2, r3
 533 014e 31D2     		bcs	.L23
 455:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			   && (sign == 0u)))
 534              		.loc 1 455 0
 535 0150 7B69     		ldr	r3, [r7, #20]
 536 0152 002B     		cmp	r3, #0
 537 0154 2ED1     		bne	.L23
 538              	.L24:
 456:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			{
 457:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#else
 458:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			/* Update Baseline if lower than noiseThreshold */
 459:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			if ( (tempRaw <= noiseThreshold) || 
 460:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 				 ((tempRaw < (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD)
 461:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 				   && (sign == 0u)))
 462:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			{
 463:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */ 
 464:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE) */
 465:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Make full Baseline 23 bits */
 466:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc = (uint32) CapSense_sensorBaseline[sensor] << 8u;
 539              		.loc 1 466 0
 540 0156 324B     		ldr	r3, .L29+24
 541 0158 7A68     		ldr	r2, [r7, #4]
 542 015a 5200     		lsl	r2, r2, #1
 543 015c D35A     		ldrh	r3, [r2, r3]
 544 015e 1B02     		lsl	r3, r3, #8
 545 0160 BB60     		str	r3, [r7, #8]
 467:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc |= (uint32) CapSense_sensorBaselineLow[sensor];
 546              		.loc 1 467 0
 547 0162 334A     		ldr	r2, .L29+40
 548 0164 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 19


 549 0166 D318     		add	r3, r2, r3
 550 0168 1B78     		ldrb	r3, [r3]
 551 016a 1A1C     		mov	r2, r3
 552 016c BB68     		ldr	r3, [r7, #8]
 553 016e 1343     		orr	r3, r2
 554 0170 BB60     		str	r3, [r7, #8]
 468:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 469:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Add Raw Data to Baseline */
 470:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc += filteredRawData;
 555              		.loc 1 470 0
 556 0172 1023     		mov	r3, #16
 557 0174 FB18     		add	r3, r7, r3
 558 0176 1B88     		ldrh	r3, [r3]
 559 0178 BA68     		ldr	r2, [r7, #8]
 560 017a D318     		add	r3, r2, r3
 561 017c BB60     		str	r3, [r7, #8]
 471:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 472:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Sub the high Baseline */
 473:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc -= CapSense_sensorBaseline[sensor];
 562              		.loc 1 473 0
 563 017e 284B     		ldr	r3, .L29+24
 564 0180 7A68     		ldr	r2, [r7, #4]
 565 0182 5200     		lsl	r2, r2, #1
 566 0184 D35A     		ldrh	r3, [r2, r3]
 567 0186 1A1C     		mov	r2, r3
 568 0188 BB68     		ldr	r3, [r7, #8]
 569 018a 9B1A     		sub	r3, r3, r2
 570 018c BB60     		str	r3, [r7, #8]
 474:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 475:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Put Baseline and BaselineLow */
 476:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorBaseline[sensor] = ((uint16) (calc >> 8u));
 571              		.loc 1 476 0
 572 018e BB68     		ldr	r3, [r7, #8]
 573 0190 1B0A     		lsr	r3, r3, #8
 574 0192 99B2     		uxth	r1, r3
 575 0194 224B     		ldr	r3, .L29+24
 576 0196 7A68     		ldr	r2, [r7, #4]
 577 0198 5200     		lsl	r2, r2, #1
 578 019a D152     		strh	r1, [r2, r3]
 477:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorBaselineLow[sensor] = ((uint8) calc);
 579              		.loc 1 477 0
 580 019c BB68     		ldr	r3, [r7, #8]
 581 019e D9B2     		uxtb	r1, r3
 582 01a0 234A     		ldr	r2, .L29+40
 583 01a2 7B68     		ldr	r3, [r7, #4]
 584 01a4 D318     		add	r3, r2, r3
 585 01a6 0A1C     		add	r2, r1, #0
 586 01a8 1A70     		strb	r2, [r3]
 478:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 479:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_lowBaselineResetCnt[sensor] = 0u;
 587              		.loc 1 479 0
 588 01aa 1E4A     		ldr	r2, .L29+28
 589 01ac 7B68     		ldr	r3, [r7, #4]
 590 01ae D318     		add	r3, r2, r3
 591 01b0 0022     		mov	r2, #0
 592 01b2 1A70     		strb	r2, [r3]
 593              	.L23:
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 20


 480:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 481:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 482:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE) */
 483:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 484:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 485:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Calculate Signal if positive difference > noiseThreshold */
 486:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if((tempRaw > (uint16) noiseThreshold) && (sign != 0u))
 594              		.loc 1 486 0
 595 01b4 0E23     		mov	r3, #14
 596 01b6 FB18     		add	r3, r7, r3
 597 01b8 1B78     		ldrb	r3, [r3]
 598 01ba 9BB2     		uxth	r3, r3
 599 01bc 1222     		mov	r2, #18
 600 01be BA18     		add	r2, r7, r2
 601 01c0 1288     		ldrh	r2, [r2]
 602 01c2 9A42     		cmp	r2, r3
 603 01c4 17D9     		bls	.L25
 604              		.loc 1 486 0 is_stmt 0 discriminator 1
 605 01c6 7B69     		ldr	r3, [r7, #20]
 606 01c8 002B     		cmp	r3, #0
 607 01ca 14D0     		beq	.L25
 487:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 488:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8)
 489:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Over flow defence for uint8 */
 490:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if (tempRaw > 0xFFu)
 608              		.loc 1 490 0 is_stmt 1
 609 01cc 1223     		mov	r3, #18
 610 01ce FB18     		add	r3, r7, r3
 611 01d0 1B88     		ldrh	r3, [r3]
 612 01d2 FF2B     		cmp	r3, #255
 613 01d4 05D9     		bls	.L26
 491:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 492:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = 0xFFu;
 614              		.loc 1 492 0
 615 01d6 174A     		ldr	r2, .L29+44
 616 01d8 7B68     		ldr	r3, [r7, #4]
 617 01da D318     		add	r3, r2, r3
 618 01dc FF22     		mov	r2, #255
 619 01de 1A70     		strb	r2, [r3]
 490:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 620              		.loc 1 490 0
 621 01e0 0EE0     		b	.L16
 622              	.L26:
 493:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }    
 494:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             else 
 495:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 496:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = ((uint8) tempRaw);
 623              		.loc 1 496 0
 624 01e2 1223     		mov	r3, #18
 625 01e4 FB18     		add	r3, r7, r3
 626 01e6 1B88     		ldrh	r3, [r3]
 627 01e8 D9B2     		uxtb	r1, r3
 628 01ea 124A     		ldr	r2, .L29+44
 629 01ec 7B68     		ldr	r3, [r7, #4]
 630 01ee D318     		add	r3, r2, r3
 631 01f0 0A1C     		add	r2, r1, #0
 632 01f2 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 21


 490:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 633              		.loc 1 490 0
 634 01f4 04E0     		b	.L16
 635              	.L25:
 497:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 498:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
 499:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_sensorSignal[sensor] = ((uint16) tempRaw);
 500:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8) */
 501:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 502:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 503:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 504:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Signal is zero */
 505:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_sensorSignal[sensor] = 0u;
 636              		.loc 1 505 0
 637 01f6 0F4A     		ldr	r2, .L29+44
 638 01f8 7B68     		ldr	r3, [r7, #4]
 639 01fa D318     		add	r3, r2, r3
 640 01fc 0022     		mov	r2, #0
 641 01fe 1A70     		strb	r2, [r3]
 642              	.L16:
 506:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 507:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 508:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 509:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 510:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 511:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 512:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 643              		.loc 1 512 0
 644 0200 BD46     		mov	sp, r7
 645 0202 07B0     		add	sp, sp, #28
 646              		@ sp needed
 647 0204 90BD     		pop	{r4, r7, pc}
 648              	.L30:
 649 0206 C046     		.align	2
 650              	.L29:
 651 0208 00000000 		.word	CapSense_widgetNumber
 652 020c 00000000 		.word	CapSense_noiseThreshold
 653 0210 00000000 		.word	CapSense_sensorRaw
 654 0214 00000000 		.word	CapSense_enableRawFilters
 655 0218 00000000 		.word	CapSense_rawFilterData1
 656 021c 00000000 		.word	CapSense_config
 657 0220 00000000 		.word	CapSense_sensorBaseline
 658 0224 00000000 		.word	CapSense_lowBaselineResetCnt
 659 0228 00000000 		.word	CapSense_negativeNoiseThreshold
 660 022c 00000000 		.word	CapSense_lowBaselineReset
 661 0230 00000000 		.word	CapSense_sensorBaselineLow
 662 0234 00000000 		.word	CapSense_sensorSignal
 663              		.cfi_endproc
 664              	.LFE39:
 665              		.size	CapSense_UpdateBaselineNoThreshold, .-CapSense_UpdateBaselineNoThreshold
 666              		.section	.text.CapSense_UpdateSensorBaseline,"ax",%progbits
 667              		.align	2
 668              		.global	CapSense_UpdateSensorBaseline
 669              		.code	16
 670              		.thumb_func
 671              		.type	CapSense_UpdateSensorBaseline, %function
 672              	CapSense_UpdateSensorBaseline:
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 22


 673              	.LFB40:
 513:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 514:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 515:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 516:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateSensorBaseline
 517:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 518:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 519:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 520:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Updates the CapSense_sensorBaseline[sensor] array element using the 
 521:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by 
 522:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 523:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  it in CapSense_sensorSignal[sensor]. 
 524:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold. 
 525:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating. 
 526:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Baseline is loaded with raw count value if a signal is greater than zero and  
 527:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  if signal is less than noise threshold.
 528:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline 
 529:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  calculation.
 530:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API updates the thresholds in the Smartsense Mode.
 531:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 532:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 533:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 534:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 535:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 536:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 537:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 538:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 539:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
 540:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 541:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 542:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 543:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 544:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 545:.\Generated_Source\PSoC4/CapSense_CSHL.c ****  void CapSense_UpdateSensorBaseline(uint32 sensor)
 546:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 674              		.loc 1 546 0
 675              		.cfi_startproc
 676 0000 80B5     		push	{r7, lr}
 677              		.cfi_def_cfa_offset 8
 678              		.cfi_offset 7, -8
 679              		.cfi_offset 14, -4
 680 0002 82B0     		sub	sp, sp, #8
 681              		.cfi_def_cfa_offset 16
 682 0004 00AF     		add	r7, sp, #0
 683              		.cfi_def_cfa_register 7
 684 0006 7860     		str	r0, [r7, #4]
 547:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 548:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		uint32 widget;
 549:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		
 550:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		widget = CapSense_widgetNumber[sensor];
 551:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
 552:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 553:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 554:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 555:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 556:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 557:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 23


 558:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     	CapSense_UpdateThresholds(sensor);
 685              		.loc 1 558 0
 686 0008 7B68     		ldr	r3, [r7, #4]
 687 000a 181C     		mov	r0, r3
 688 000c FFF7FEFF 		bl	CapSense_UpdateThresholds
 559:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
 560:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 561:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_UpdateBaselineNoThreshold(sensor);
 689              		.loc 1 561 0
 690 0010 7B68     		ldr	r3, [r7, #4]
 691 0012 181C     		mov	r0, r3
 692 0014 FFF7FEFF 		bl	CapSense_UpdateBaselineNoThreshold
 562:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 563:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 564:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 565:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 566:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 567:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 693              		.loc 1 567 0
 694 0018 BD46     		mov	sp, r7
 695 001a 02B0     		add	sp, sp, #8
 696              		@ sp needed
 697 001c 80BD     		pop	{r7, pc}
 698              		.cfi_endproc
 699              	.LFE40:
 700              		.size	CapSense_UpdateSensorBaseline, .-CapSense_UpdateSensorBaseline
 701 001e C046     		.section	.text.CapSense_UpdateEnabledBaselines,"ax",%progbits
 702              		.align	2
 703              		.global	CapSense_UpdateEnabledBaselines
 704              		.code	16
 705              		.thumb_func
 706              		.type	CapSense_UpdateEnabledBaselines, %function
 707              	CapSense_UpdateEnabledBaselines:
 708              	.LFB41:
 568:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 569:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 570:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 571:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateEnabledBaselines
 572:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 573:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 574:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 575:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Checks CapSense_sensorEnableMask[] array and calls the 
 576:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_UpdateSensorBaseline function to update the baselines 
 577:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  for the enabled sensors.
 578:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 579:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 580:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 581:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 582:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 583:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 584:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 585:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 586:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning 
 587:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
 588:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 
 589:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 590:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for 
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 24


 591:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 592:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 593:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 594:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 595:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 596:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 597:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 598:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 599:.\Generated_Source\PSoC4/CapSense_CSHL.c ****  void CapSense_UpdateEnabledBaselines(void)
 600:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 709              		.loc 1 600 0
 710              		.cfi_startproc
 711 0000 80B5     		push	{r7, lr}
 712              		.cfi_def_cfa_offset 8
 713              		.cfi_offset 7, -8
 714              		.cfi_offset 14, -4
 715 0002 82B0     		sub	sp, sp, #8
 716              		.cfi_def_cfa_offset 16
 717 0004 00AF     		add	r7, sp, #0
 718              		.cfi_def_cfa_register 7
 601:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 602:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 603:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 604:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 719              		.loc 1 604 0
 720 0006 0023     		mov	r3, #0
 721 0008 7B60     		str	r3, [r7, #4]
 722 000a 11E0     		b	.L33
 723              	.L35:
 605:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 606:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 724              		.loc 1 606 0
 725 000c 0B4A     		ldr	r2, .L36
 726 000e 7B68     		ldr	r3, [r7, #4]
 727 0010 101C     		mov	r0, r2
 728 0012 191C     		mov	r1, r3
 729 0014 FFF7FEFF 		bl	CapSense_GetBitValue
 730 0018 031C     		mov	r3, r0
 731 001a 3B60     		str	r3, [r7]
 607:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
 608:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(0u != isSensorEnabled)
 732              		.loc 1 608 0
 733 001c 3B68     		ldr	r3, [r7]
 734 001e 002B     		cmp	r3, #0
 735 0020 03D0     		beq	.L34
 609:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 610:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_UpdateSensorBaseline(i);
 736              		.loc 1 610 0
 737 0022 7B68     		ldr	r3, [r7, #4]
 738 0024 181C     		mov	r0, r3
 739 0026 FFF7FEFF 		bl	CapSense_UpdateSensorBaseline
 740              	.L34:
 604:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 741              		.loc 1 604 0 discriminator 2
 742 002a 7B68     		ldr	r3, [r7, #4]
 743 002c 0133     		add	r3, r3, #1
 744 002e 7B60     		str	r3, [r7, #4]
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 25


 745              	.L33:
 604:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 746              		.loc 1 604 0 is_stmt 0 discriminator 1
 747 0030 7B68     		ldr	r3, [r7, #4]
 748 0032 042B     		cmp	r3, #4
 749 0034 EAD9     		bls	.L35
 611:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 612:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 613:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 750              		.loc 1 613 0 is_stmt 1
 751 0036 BD46     		mov	sp, r7
 752 0038 02B0     		add	sp, sp, #8
 753              		@ sp needed
 754 003a 80BD     		pop	{r7, pc}
 755              	.L37:
 756              		.align	2
 757              	.L36:
 758 003c 00000000 		.word	CapSense_sensorEnableMask
 759              		.cfi_endproc
 760              	.LFE41:
 761              		.size	CapSense_UpdateEnabledBaselines, .-CapSense_UpdateEnabledBaselines
 762              		.section	.text.CapSense_UpdateWidgetBaseline,"ax",%progbits
 763              		.align	2
 764              		.global	CapSense_UpdateWidgetBaseline
 765              		.code	16
 766              		.thumb_func
 767              		.type	CapSense_UpdateWidgetBaseline, %function
 768              	CapSense_UpdateWidgetBaseline:
 769              	.LFB42:
 614:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 615:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 616:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateWidgetBaseline
 617:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 618:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 619:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 620:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Checks CapSense_sensorEnableMask[] array and calls the 
 621:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_UpdateSensorBaseline function to update the baselines 
 622:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  for the enabled sensors that belong to widget.
 623:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 624:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 625:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  Widget number.
 626:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 627:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 628:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 629:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 630:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 631:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning 
 632:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
 633:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 
 634:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 635:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for 
 636:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 637:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 638:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 639:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 640:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 641:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 26


 642:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 643:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 644:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_UpdateWidgetBaseline(uint32 widget)
 645:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 770              		.loc 1 645 0
 771              		.cfi_startproc
 772 0000 80B5     		push	{r7, lr}
 773              		.cfi_def_cfa_offset 8
 774              		.cfi_offset 7, -8
 775              		.cfi_offset 14, -4
 776 0002 88B0     		sub	sp, sp, #32
 777              		.cfi_def_cfa_offset 40
 778 0004 00AF     		add	r7, sp, #0
 779              		.cfi_def_cfa_register 7
 780 0006 7860     		str	r0, [r7, #4]
 646:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 sensorsPerWidget;
 647:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 firstSensor;
 648:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 lastSensor;
 649:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 650:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 651:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 652:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/* Get number of sensors in widget */
 653:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	sensorsPerWidget = CapSense_numberOfSensors[widget];
 781              		.loc 1 653 0
 782 0008 0523     		mov	r3, #5
 783 000a BB61     		str	r3, [r7, #24]
 654:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 655:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/* Get first sensor in widget */
 656:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	firstSensor = CapSense_rawDataIndex[widget];
 784              		.loc 1 656 0
 785 000c 0023     		mov	r3, #0
 786 000e 7B61     		str	r3, [r7, #20]
 657:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
 658:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/* Get last sensor in widget */
 659:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	lastSensor = (CapSense_rawDataIndex[widget] + sensorsPerWidget);
 787              		.loc 1 659 0
 788 0010 0023     		mov	r3, #0
 789 0012 1A1C     		mov	r2, r3
 790 0014 BB69     		ldr	r3, [r7, #24]
 791 0016 D318     		add	r3, r2, r3
 792 0018 3B61     		str	r3, [r7, #16]
 660:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
 661:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = firstSensor; i < lastSensor; i++)
 793              		.loc 1 661 0
 794 001a 7B69     		ldr	r3, [r7, #20]
 795 001c FB61     		str	r3, [r7, #28]
 796 001e 11E0     		b	.L39
 797              	.L41:
 662:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 663:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 798              		.loc 1 663 0
 799 0020 0C4A     		ldr	r2, .L42
 800 0022 FB69     		ldr	r3, [r7, #28]
 801 0024 101C     		mov	r0, r2
 802 0026 191C     		mov	r1, r3
 803 0028 FFF7FEFF 		bl	CapSense_GetBitValue
 804 002c 031C     		mov	r3, r0
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 27


 805 002e FB60     		str	r3, [r7, #12]
 664:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
 665:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(0u != isSensorEnabled)
 806              		.loc 1 665 0
 807 0030 FB68     		ldr	r3, [r7, #12]
 808 0032 002B     		cmp	r3, #0
 809 0034 03D0     		beq	.L40
 666:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 667:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_UpdateSensorBaseline(i);
 810              		.loc 1 667 0
 811 0036 FB69     		ldr	r3, [r7, #28]
 812 0038 181C     		mov	r0, r3
 813 003a FFF7FEFF 		bl	CapSense_UpdateSensorBaseline
 814              	.L40:
 661:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 815              		.loc 1 661 0 discriminator 2
 816 003e FB69     		ldr	r3, [r7, #28]
 817 0040 0133     		add	r3, r3, #1
 818 0042 FB61     		str	r3, [r7, #28]
 819              	.L39:
 661:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 820              		.loc 1 661 0 is_stmt 0 discriminator 1
 821 0044 FA69     		ldr	r2, [r7, #28]
 822 0046 3B69     		ldr	r3, [r7, #16]
 823 0048 9A42     		cmp	r2, r3
 824 004a E9D3     		bcc	.L41
 668:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 669:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 670:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 825              		.loc 1 670 0 is_stmt 1
 826 004c BD46     		mov	sp, r7
 827 004e 08B0     		add	sp, sp, #32
 828              		@ sp needed
 829 0050 80BD     		pop	{r7, pc}
 830              	.L43:
 831 0052 C046     		.align	2
 832              	.L42:
 833 0054 00000000 		.word	CapSense_sensorEnableMask
 834              		.cfi_endproc
 835              	.LFE42:
 836              		.size	CapSense_UpdateWidgetBaseline, .-CapSense_UpdateWidgetBaseline
 837              		.section	.text.CapSense_GetBaselineData,"ax",%progbits
 838              		.align	2
 839              		.global	CapSense_GetBaselineData
 840              		.code	16
 841              		.thumb_func
 842              		.type	CapSense_GetBaselineData, %function
 843              	CapSense_GetBaselineData:
 844              	.LFB43:
 671:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 672:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 673:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 674:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetBaselineData
 675:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 676:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 677:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 678:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the sensor baseline from the component.
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 28


 679:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 680:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 681:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 682:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 683:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 684:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the baseline value of the sensor indicated by an argument.
 685:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 686:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 687:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] - the array with an initial values by scanning
 688:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 689:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 690:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 691:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 692:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 693:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint16 CapSense_GetBaselineData(uint32 sensor)
 694:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 845              		.loc 1 694 0
 846              		.cfi_startproc
 847 0000 80B5     		push	{r7, lr}
 848              		.cfi_def_cfa_offset 8
 849              		.cfi_offset 7, -8
 850              		.cfi_offset 14, -4
 851 0002 82B0     		sub	sp, sp, #8
 852              		.cfi_def_cfa_offset 16
 853 0004 00AF     		add	r7, sp, #0
 854              		.cfi_def_cfa_register 7
 855 0006 7860     		str	r0, [r7, #4]
 695:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return (CapSense_sensorBaseline[sensor]);
 856              		.loc 1 695 0
 857 0008 034B     		ldr	r3, .L46
 858 000a 7A68     		ldr	r2, [r7, #4]
 859 000c 5200     		lsl	r2, r2, #1
 860 000e D35A     		ldrh	r3, [r2, r3]
 696:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 861              		.loc 1 696 0
 862 0010 181C     		mov	r0, r3
 863 0012 BD46     		mov	sp, r7
 864 0014 02B0     		add	sp, sp, #8
 865              		@ sp needed
 866 0016 80BD     		pop	{r7, pc}
 867              	.L47:
 868              		.align	2
 869              	.L46:
 870 0018 00000000 		.word	CapSense_sensorBaseline
 871              		.cfi_endproc
 872              	.LFE43:
 873              		.size	CapSense_GetBaselineData, .-CapSense_GetBaselineData
 874              		.section	.text.CapSense_SetBaselineData,"ax",%progbits
 875              		.align	2
 876              		.global	CapSense_SetBaselineData
 877              		.code	16
 878              		.thumb_func
 879              		.type	CapSense_SetBaselineData, %function
 880              	CapSense_SetBaselineData:
 881              	.LFB44:
 697:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 698:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 29


 699:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 700:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_SetBaselineData
 701:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 702:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 703:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 704:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API writes the data value passed as an argument to the sensor baseline array.
 705:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 706:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 707:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 708:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  data:    Sensor baseline.
 709:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 710:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 711:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None.
 712:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 713:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 714:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] - the array with initial values by scanning
 715:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 716:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 717:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 718:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 719:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 720:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_SetBaselineData(uint32 sensor, uint16 data)
 721:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 882              		.loc 1 721 0
 883              		.cfi_startproc
 884 0000 80B5     		push	{r7, lr}
 885              		.cfi_def_cfa_offset 8
 886              		.cfi_offset 7, -8
 887              		.cfi_offset 14, -4
 888 0002 82B0     		sub	sp, sp, #8
 889              		.cfi_def_cfa_offset 16
 890 0004 00AF     		add	r7, sp, #0
 891              		.cfi_def_cfa_register 7
 892 0006 7860     		str	r0, [r7, #4]
 893 0008 0A1C     		mov	r2, r1
 894 000a BB1C     		add	r3, r7, #2
 895 000c 1A80     		strh	r2, [r3]
 722:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	CapSense_sensorBaseline[sensor] = data;
 896              		.loc 1 722 0
 897 000e 044B     		ldr	r3, .L49
 898 0010 7A68     		ldr	r2, [r7, #4]
 899 0012 5200     		lsl	r2, r2, #1
 900 0014 B91C     		add	r1, r7, #2
 901 0016 0988     		ldrh	r1, [r1]
 902 0018 D152     		strh	r1, [r2, r3]
 723:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 903              		.loc 1 723 0
 904 001a BD46     		mov	sp, r7
 905 001c 02B0     		add	sp, sp, #8
 906              		@ sp needed
 907 001e 80BD     		pop	{r7, pc}
 908              	.L50:
 909              		.align	2
 910              	.L49:
 911 0020 00000000 		.word	CapSense_sensorBaseline
 912              		.cfi_endproc
 913              	.LFE44:
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 30


 914              		.size	CapSense_SetBaselineData, .-CapSense_SetBaselineData
 915              		.section	.text.CapSense_GetDiffCountData,"ax",%progbits
 916              		.align	2
 917              		.global	CapSense_GetDiffCountData
 918              		.code	16
 919              		.thumb_func
 920              		.type	CapSense_GetDiffCountData, %function
 921              	CapSense_GetDiffCountData:
 922              	.LFB45:
 724:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 725:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 726:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 727:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetDiffCountData
 728:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 729:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 730:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 731:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function returns the Sensor Signal from the component.
 732:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 733:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 734:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 735:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 736:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 737:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the difference count value of the sensor indicated by the 
 738:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  argument. 
 739:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 740:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 741:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - the array with difference counts for sensors
 742:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 743:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 744:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 745:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 746:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 747:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetDiffCountData(uint32 sensor)
 748:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 923              		.loc 1 748 0
 924              		.cfi_startproc
 925 0000 80B5     		push	{r7, lr}
 926              		.cfi_def_cfa_offset 8
 927              		.cfi_offset 7, -8
 928              		.cfi_offset 14, -4
 929 0002 82B0     		sub	sp, sp, #8
 930              		.cfi_def_cfa_offset 16
 931 0004 00AF     		add	r7, sp, #0
 932              		.cfi_def_cfa_register 7
 933 0006 7860     		str	r0, [r7, #4]
 749:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return (CapSense_sensorSignal[sensor]);
 934              		.loc 1 749 0
 935 0008 034A     		ldr	r2, .L53
 936 000a 7B68     		ldr	r3, [r7, #4]
 937 000c D318     		add	r3, r2, r3
 938 000e 1B78     		ldrb	r3, [r3]
 750:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 939              		.loc 1 750 0
 940 0010 181C     		mov	r0, r3
 941 0012 BD46     		mov	sp, r7
 942 0014 02B0     		add	sp, sp, #8
 943              		@ sp needed
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 31


 944 0016 80BD     		pop	{r7, pc}
 945              	.L54:
 946              		.align	2
 947              	.L53:
 948 0018 00000000 		.word	CapSense_sensorSignal
 949              		.cfi_endproc
 950              	.LFE45:
 951              		.size	CapSense_GetDiffCountData, .-CapSense_GetDiffCountData
 952              		.section	.text.CapSense_SetDiffCountData,"ax",%progbits
 953              		.align	2
 954              		.global	CapSense_SetDiffCountData
 955              		.code	16
 956              		.thumb_func
 957              		.type	CapSense_SetDiffCountData, %function
 958              	CapSense_SetDiffCountData:
 959              	.LFB46:
 751:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 752:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 753:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 754:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_SetDiffCountData
 755:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 756:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 757:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 758:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API writes the data value passed as an argument to the sensor signal array.
 759:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 760:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 761:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 762:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  value:   Sensor signal.
 763:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 764:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 765:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None. 
 766:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 767:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 768:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - the array with difference counts for sensors
 769:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 770:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 771:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 772:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 773:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 774:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_SetDiffCountData(uint32 sensor, uint8 value)
 775:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 960              		.loc 1 775 0
 961              		.cfi_startproc
 962 0000 80B5     		push	{r7, lr}
 963              		.cfi_def_cfa_offset 8
 964              		.cfi_offset 7, -8
 965              		.cfi_offset 14, -4
 966 0002 82B0     		sub	sp, sp, #8
 967              		.cfi_def_cfa_offset 16
 968 0004 00AF     		add	r7, sp, #0
 969              		.cfi_def_cfa_register 7
 970 0006 7860     		str	r0, [r7, #4]
 971 0008 0A1C     		mov	r2, r1
 972 000a FB1C     		add	r3, r7, #3
 973 000c 1A70     		strb	r2, [r3]
 776:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorSignal[sensor] = value;
 974              		.loc 1 776 0
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 32


 975 000e 044A     		ldr	r2, .L56
 976 0010 7B68     		ldr	r3, [r7, #4]
 977 0012 D318     		add	r3, r2, r3
 978 0014 FA1C     		add	r2, r7, #3
 979 0016 1278     		ldrb	r2, [r2]
 980 0018 1A70     		strb	r2, [r3]
 777:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 981              		.loc 1 777 0
 982 001a BD46     		mov	sp, r7
 983 001c 02B0     		add	sp, sp, #8
 984              		@ sp needed
 985 001e 80BD     		pop	{r7, pc}
 986              	.L57:
 987              		.align	2
 988              	.L56:
 989 0020 00000000 		.word	CapSense_sensorSignal
 990              		.cfi_endproc
 991              	.LFE46:
 992              		.size	CapSense_SetDiffCountData, .-CapSense_SetDiffCountData
 993              		.section	.text.CapSense_GetFingerThreshold,"ax",%progbits
 994              		.align	2
 995              		.global	CapSense_GetFingerThreshold
 996              		.code	16
 997              		.thumb_func
 998              		.type	CapSense_GetFingerThreshold, %function
 999              	CapSense_GetFingerThreshold:
 1000              	.LFB47:
 778:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 779:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 780:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 781:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetFingerThreshold
 782:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 783:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 784:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 785:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the finger threshold from the component.
 786:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 787:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 788:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 789:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 790:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 791:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the finger threshold of the widget indicated by the argument. 
 792:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 793:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 794:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_fingerThreshold[] - This array contains the level of signal 
 795:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  for each widget that is determined if a finger is present on the widget.
 796:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 797:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 798:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 799:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 800:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 801:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetFingerThreshold(uint32 widget)
 802:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1001              		.loc 1 802 0
 1002              		.cfi_startproc
 1003 0000 80B5     		push	{r7, lr}
 1004              		.cfi_def_cfa_offset 8
 1005              		.cfi_offset 7, -8
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 33


 1006              		.cfi_offset 14, -4
 1007 0002 82B0     		sub	sp, sp, #8
 1008              		.cfi_def_cfa_offset 16
 1009 0004 00AF     		add	r7, sp, #0
 1010              		.cfi_def_cfa_register 7
 1011 0006 7860     		str	r0, [r7, #4]
 803:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return(CapSense_fingerThreshold[widget]);
 1012              		.loc 1 803 0
 1013 0008 034A     		ldr	r2, .L60
 1014 000a 7B68     		ldr	r3, [r7, #4]
 1015 000c D318     		add	r3, r2, r3
 1016 000e 1B78     		ldrb	r3, [r3]
 804:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1017              		.loc 1 804 0
 1018 0010 181C     		mov	r0, r3
 1019 0012 BD46     		mov	sp, r7
 1020 0014 02B0     		add	sp, sp, #8
 1021              		@ sp needed
 1022 0016 80BD     		pop	{r7, pc}
 1023              	.L61:
 1024              		.align	2
 1025              	.L60:
 1026 0018 00000000 		.word	CapSense_fingerThreshold
 1027              		.cfi_endproc
 1028              	.LFE47:
 1029              		.size	CapSense_GetFingerThreshold, .-CapSense_GetFingerThreshold
 1030              		.section	.text.CapSense_GetNoiseThreshold,"ax",%progbits
 1031              		.align	2
 1032              		.global	CapSense_GetNoiseThreshold
 1033              		.code	16
 1034              		.thumb_func
 1035              		.type	CapSense_GetNoiseThreshold, %function
 1036              	CapSense_GetNoiseThreshold:
 1037              	.LFB48:
 805:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 806:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 807:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 808:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetNoiseThreshold
 809:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 810:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 811:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 812:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the noise threshold from the component.
 813:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 814:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 815:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 816:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 817:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 818:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the noise threshold of the widget indicated by the argument. 
 819:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 820:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 821:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_noiseThreshold[] - This array contains the level of signal 
 822:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  for each widget that determines the level of noise in the capacitive scan.
 823:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 824:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 825:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 826:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 827:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 34


 828:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetNoiseThreshold(uint32 widget)
 829:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1038              		.loc 1 829 0
 1039              		.cfi_startproc
 1040 0000 80B5     		push	{r7, lr}
 1041              		.cfi_def_cfa_offset 8
 1042              		.cfi_offset 7, -8
 1043              		.cfi_offset 14, -4
 1044 0002 82B0     		sub	sp, sp, #8
 1045              		.cfi_def_cfa_offset 16
 1046 0004 00AF     		add	r7, sp, #0
 1047              		.cfi_def_cfa_register 7
 1048 0006 7860     		str	r0, [r7, #4]
 830:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return (CapSense_noiseThreshold[widget]);
 1049              		.loc 1 830 0
 1050 0008 034A     		ldr	r2, .L64
 1051 000a 7B68     		ldr	r3, [r7, #4]
 1052 000c D318     		add	r3, r2, r3
 1053 000e 1B78     		ldrb	r3, [r3]
 831:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1054              		.loc 1 831 0
 1055 0010 181C     		mov	r0, r3
 1056 0012 BD46     		mov	sp, r7
 1057 0014 02B0     		add	sp, sp, #8
 1058              		@ sp needed
 1059 0016 80BD     		pop	{r7, pc}
 1060              	.L65:
 1061              		.align	2
 1062              	.L64:
 1063 0018 00000000 		.word	CapSense_noiseThreshold
 1064              		.cfi_endproc
 1065              	.LFE48:
 1066              		.size	CapSense_GetNoiseThreshold, .-CapSense_GetNoiseThreshold
 1067              		.section	.text.CapSense_GetFingerHysteresis,"ax",%progbits
 1068              		.align	2
 1069              		.global	CapSense_GetFingerHysteresis
 1070              		.code	16
 1071              		.thumb_func
 1072              		.type	CapSense_GetFingerHysteresis, %function
 1073              	CapSense_GetFingerHysteresis:
 1074              	.LFB49:
 832:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 833:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 834:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 835:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetFingerHysteresis
 836:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 837:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 838:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 839:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the Hysteresis value from the component.
 840:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 841:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 842:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 843:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 844:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 845:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the Hysteresis of the widget indicated by the argument. 
 846:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 847:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 35


 848:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_hysteresis[] - This array contains the hysteresis value 
 849:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   for each widget.
 850:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
 851:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 852:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 853:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 854:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 855:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 856:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetFingerHysteresis(uint32 widget)
 857:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1075              		.loc 1 857 0
 1076              		.cfi_startproc
 1077 0000 80B5     		push	{r7, lr}
 1078              		.cfi_def_cfa_offset 8
 1079              		.cfi_offset 7, -8
 1080              		.cfi_offset 14, -4
 1081 0002 82B0     		sub	sp, sp, #8
 1082              		.cfi_def_cfa_offset 16
 1083 0004 00AF     		add	r7, sp, #0
 1084              		.cfi_def_cfa_register 7
 1085 0006 7860     		str	r0, [r7, #4]
 858:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return(CapSense_hysteresis[widget]);
 1086              		.loc 1 858 0
 1087 0008 034A     		ldr	r2, .L68
 1088 000a 7B68     		ldr	r3, [r7, #4]
 1089 000c D318     		add	r3, r2, r3
 1090 000e 1B78     		ldrb	r3, [r3]
 859:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1091              		.loc 1 859 0
 1092 0010 181C     		mov	r0, r3
 1093 0012 BD46     		mov	sp, r7
 1094 0014 02B0     		add	sp, sp, #8
 1095              		@ sp needed
 1096 0016 80BD     		pop	{r7, pc}
 1097              	.L69:
 1098              		.align	2
 1099              	.L68:
 1100 0018 00000000 		.word	CapSense_hysteresis
 1101              		.cfi_endproc
 1102              	.LFE49:
 1103              		.size	CapSense_GetFingerHysteresis, .-CapSense_GetFingerHysteresis
 1104              		.section	.text.CapSense_GetNegativeNoiseThreshold,"ax",%progbits
 1105              		.align	2
 1106              		.global	CapSense_GetNegativeNoiseThreshold
 1107              		.code	16
 1108              		.thumb_func
 1109              		.type	CapSense_GetNegativeNoiseThreshold, %function
 1110              	CapSense_GetNegativeNoiseThreshold:
 1111              	.LFB50:
 860:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 861:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 862:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 863:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetNegativeNoiseThreshold
 864:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 865:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 866:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 867:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the negative noise threshold from the component.
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 36


 868:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 869:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters: 
 870:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None.
 871:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 872:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return Value: 
 873:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the negative noise threshold
 874:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 875:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 876:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_negativeNoiseThreshold - This variable specifies the negative 
 877:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   difference between the raw count and baseline levels for Baseline resetting
 878:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   to the raw count level.
 879:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 880:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 881:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 882:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 883:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 884:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetNegativeNoiseThreshold(uint32 widget)
 885:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1112              		.loc 1 885 0
 1113              		.cfi_startproc
 1114 0000 80B5     		push	{r7, lr}
 1115              		.cfi_def_cfa_offset 8
 1116              		.cfi_offset 7, -8
 1117              		.cfi_offset 14, -4
 1118 0002 82B0     		sub	sp, sp, #8
 1119              		.cfi_def_cfa_offset 16
 1120 0004 00AF     		add	r7, sp, #0
 1121              		.cfi_def_cfa_register 7
 1122 0006 7860     		str	r0, [r7, #4]
 886:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 887:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return(CapSense_negativeNoiseThreshold[widget]);
 1123              		.loc 1 887 0
 1124 0008 034A     		ldr	r2, .L72
 1125 000a 7B68     		ldr	r3, [r7, #4]
 1126 000c D318     		add	r3, r2, r3
 1127 000e 1B78     		ldrb	r3, [r3]
 888:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #else
 889:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return(CapSense_NEGATIVE_NOISE_THRESHOLD);
 890:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */ 
 891:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1128              		.loc 1 891 0
 1129 0010 181C     		mov	r0, r3
 1130 0012 BD46     		mov	sp, r7
 1131 0014 02B0     		add	sp, sp, #8
 1132              		@ sp needed
 1133 0016 80BD     		pop	{r7, pc}
 1134              	.L73:
 1135              		.align	2
 1136              	.L72:
 1137 0018 00000000 		.word	CapSense_negativeNoiseThreshold
 1138              		.cfi_endproc
 1139              	.LFE50:
 1140              		.size	CapSense_GetNegativeNoiseThreshold, .-CapSense_GetNegativeNoiseThreshold
 1141              		.section	.text.CapSense_SetFingerThreshold,"ax",%progbits
 1142              		.align	2
 1143              		.global	CapSense_SetFingerThreshold
 1144              		.code	16
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 37


 1145              		.thumb_func
 1146              		.type	CapSense_SetFingerThreshold, %function
 1147              	CapSense_SetFingerThreshold:
 1148              	.LFB51:
 892:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 893:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 894:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 895:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/*******************************************************************************
 896:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Function Name: CapSense_SetFingerThreshold
 897:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	********************************************************************************
 898:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 899:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Summary:
 900:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  This API sets the finger threshold value for a widget. 
 901:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 902:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Parameters: 
 903:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  sensorNumber:  widget index. 
 904:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  value:  Finger threshold value for the widget.
 905:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 906:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Return Value: 
 907:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
 908:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 909:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
 910:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_fingerThreshold[] - This array contains the level of signal 
 911:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*   for each widget that determines if a finger is present on the widget.
 912:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
 913:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
 914:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
 915:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 916:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*******************************************************************************/
 917:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	void CapSense_SetFingerThreshold(uint32 widget, uint8 value)
 918:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{	
 1149              		.loc 1 918 0
 1150              		.cfi_startproc
 1151 0000 80B5     		push	{r7, lr}
 1152              		.cfi_def_cfa_offset 8
 1153              		.cfi_offset 7, -8
 1154              		.cfi_offset 14, -4
 1155 0002 82B0     		sub	sp, sp, #8
 1156              		.cfi_def_cfa_offset 16
 1157 0004 00AF     		add	r7, sp, #0
 1158              		.cfi_def_cfa_register 7
 1159 0006 7860     		str	r0, [r7, #4]
 1160 0008 0A1C     		mov	r2, r1
 1161 000a FB1C     		add	r3, r7, #3
 1162 000c 1A70     		strb	r2, [r3]
 919:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_fingerThreshold[widget] = value;
 1163              		.loc 1 919 0
 1164 000e 044A     		ldr	r2, .L75
 1165 0010 7B68     		ldr	r3, [r7, #4]
 1166 0012 D318     		add	r3, r2, r3
 1167 0014 FA1C     		add	r2, r7, #3
 1168 0016 1278     		ldrb	r2, [r2]
 1169 0018 1A70     		strb	r2, [r3]
 920:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 1170              		.loc 1 920 0
 1171 001a BD46     		mov	sp, r7
 1172 001c 02B0     		add	sp, sp, #8
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 38


 1173              		@ sp needed
 1174 001e 80BD     		pop	{r7, pc}
 1175              	.L76:
 1176              		.align	2
 1177              	.L75:
 1178 0020 00000000 		.word	CapSense_fingerThreshold
 1179              		.cfi_endproc
 1180              	.LFE51:
 1181              		.size	CapSense_SetFingerThreshold, .-CapSense_SetFingerThreshold
 1182              		.section	.text.CapSense_SetNoiseThreshold,"ax",%progbits
 1183              		.align	2
 1184              		.global	CapSense_SetNoiseThreshold
 1185              		.code	16
 1186              		.thumb_func
 1187              		.type	CapSense_SetNoiseThreshold, %function
 1188              	CapSense_SetNoiseThreshold:
 1189              	.LFB52:
 921:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 922:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 923:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/*******************************************************************************
 924:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Function Name: CapSense_SetNoiseThreshold
 925:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	********************************************************************************
 926:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 927:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Summary:
 928:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  This API sets the Noise Threshold value for each widget.
 929:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 930:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Parameters:
 931:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  widget:  Sensor index number.
 932:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  value:   Noise Threshold value for widget.
 933:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 934:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Return Value: 
 935:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
 936:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 937:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
 938:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_noiseThreshold[] - This array contains the level of signal 
 939:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*   for each widget that determines the level of noise in the capacitive scan.
 940:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
 941:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
 942:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
 943:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 944:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*******************************************************************************/
 945:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	void CapSense_SetNoiseThreshold(uint32 widget, uint8 value)
 946:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 1190              		.loc 1 946 0
 1191              		.cfi_startproc
 1192 0000 80B5     		push	{r7, lr}
 1193              		.cfi_def_cfa_offset 8
 1194              		.cfi_offset 7, -8
 1195              		.cfi_offset 14, -4
 1196 0002 82B0     		sub	sp, sp, #8
 1197              		.cfi_def_cfa_offset 16
 1198 0004 00AF     		add	r7, sp, #0
 1199              		.cfi_def_cfa_register 7
 1200 0006 7860     		str	r0, [r7, #4]
 1201 0008 0A1C     		mov	r2, r1
 1202 000a FB1C     		add	r3, r7, #3
 1203 000c 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 39


 947:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_noiseThreshold[widget] = value;
 1204              		.loc 1 947 0
 1205 000e 044A     		ldr	r2, .L78
 1206 0010 7B68     		ldr	r3, [r7, #4]
 1207 0012 D318     		add	r3, r2, r3
 1208 0014 FA1C     		add	r2, r7, #3
 1209 0016 1278     		ldrb	r2, [r2]
 1210 0018 1A70     		strb	r2, [r3]
 948:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 1211              		.loc 1 948 0
 1212 001a BD46     		mov	sp, r7
 1213 001c 02B0     		add	sp, sp, #8
 1214              		@ sp needed
 1215 001e 80BD     		pop	{r7, pc}
 1216              	.L79:
 1217              		.align	2
 1218              	.L78:
 1219 0020 00000000 		.word	CapSense_noiseThreshold
 1220              		.cfi_endproc
 1221              	.LFE52:
 1222              		.size	CapSense_SetNoiseThreshold, .-CapSense_SetNoiseThreshold
 1223              		.section	.text.CapSense_SetFingerHysteresis,"ax",%progbits
 1224              		.align	2
 1225              		.global	CapSense_SetFingerHysteresis
 1226              		.code	16
 1227              		.thumb_func
 1228              		.type	CapSense_SetFingerHysteresis, %function
 1229              	CapSense_SetFingerHysteresis:
 1230              	.LFB53:
 949:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 950:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 951:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/*******************************************************************************
 952:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Function Name: CapSense_SetFingerHysteresis
 953:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	********************************************************************************
 954:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 955:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Summary:
 956:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  This API sets the Hysteresis value of a widget
 957:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 958:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Parameters: 
 959:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  value:  Hysteresis value for widgets.
 960:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  widget:  widget number
 961:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 962:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Return Value: 
 963:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
 964:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 965:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
 966:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_hysteresis[] - This array contains the hysteresis value for each widget.
 967:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
 968:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 969:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
 970:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
 971:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 972:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*******************************************************************************/
 973:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	void CapSense_SetFingerHysteresis(uint32 widget, uint8 value)
 974:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 1231              		.loc 1 974 0
 1232              		.cfi_startproc
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 40


 1233 0000 80B5     		push	{r7, lr}
 1234              		.cfi_def_cfa_offset 8
 1235              		.cfi_offset 7, -8
 1236              		.cfi_offset 14, -4
 1237 0002 82B0     		sub	sp, sp, #8
 1238              		.cfi_def_cfa_offset 16
 1239 0004 00AF     		add	r7, sp, #0
 1240              		.cfi_def_cfa_register 7
 1241 0006 7860     		str	r0, [r7, #4]
 1242 0008 0A1C     		mov	r2, r1
 1243 000a FB1C     		add	r3, r7, #3
 1244 000c 1A70     		strb	r2, [r3]
 975:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_hysteresis[widget] = value;
 1245              		.loc 1 975 0
 1246 000e 044A     		ldr	r2, .L81
 1247 0010 7B68     		ldr	r3, [r7, #4]
 1248 0012 D318     		add	r3, r2, r3
 1249 0014 FA1C     		add	r2, r7, #3
 1250 0016 1278     		ldrb	r2, [r2]
 1251 0018 1A70     		strb	r2, [r3]
 976:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 1252              		.loc 1 976 0
 1253 001a BD46     		mov	sp, r7
 1254 001c 02B0     		add	sp, sp, #8
 1255              		@ sp needed
 1256 001e 80BD     		pop	{r7, pc}
 1257              	.L82:
 1258              		.align	2
 1259              	.L81:
 1260 0020 00000000 		.word	CapSense_hysteresis
 1261              		.cfi_endproc
 1262              	.LFE53:
 1263              		.size	CapSense_SetFingerHysteresis, .-CapSense_SetFingerHysteresis
 1264              		.section	.text.CapSense_SetNegativeNoiseThreshold,"ax",%progbits
 1265              		.align	2
 1266              		.global	CapSense_SetNegativeNoiseThreshold
 1267              		.code	16
 1268              		.thumb_func
 1269              		.type	CapSense_SetNegativeNoiseThreshold, %function
 1270              	CapSense_SetNegativeNoiseThreshold:
 1271              	.LFB54:
 977:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 978:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 979:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/*******************************************************************************
 980:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Function Name: CapSense_SetNegativeNoiseThreshold
 981:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	********************************************************************************
 982:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 983:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Summary:
 984:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  This API sets the Negative Noise Threshold value of a widget
 985:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 986:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Parameters: 
 987:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  value:  Negative Noise Threshold value for widgets.
 988:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  widget: widget number
 989:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 990:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Return Value: 
 991:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
 992:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 41


 993:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
 994:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_negativeNoiseThreshold  - This parameter specifies the negative 
 995:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*   difference between the raw count and baseline levels for Baseline resetting to 
 996:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*   the raw count level.
 997:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
 998:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
 999:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
1000:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1001:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*******************************************************************************/
1002:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	void CapSense_SetNegativeNoiseThreshold(uint32 widget, uint8 value)
1003:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 1272              		.loc 1 1003 0
 1273              		.cfi_startproc
 1274 0000 80B5     		push	{r7, lr}
 1275              		.cfi_def_cfa_offset 8
 1276              		.cfi_offset 7, -8
 1277              		.cfi_offset 14, -4
 1278 0002 82B0     		sub	sp, sp, #8
 1279              		.cfi_def_cfa_offset 16
 1280 0004 00AF     		add	r7, sp, #0
 1281              		.cfi_def_cfa_register 7
 1282 0006 7860     		str	r0, [r7, #4]
 1283 0008 0A1C     		mov	r2, r1
 1284 000a FB1C     		add	r3, r7, #3
 1285 000c 1A70     		strb	r2, [r3]
1004:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_negativeNoiseThreshold[widget] = value;
 1286              		.loc 1 1004 0
 1287 000e 044A     		ldr	r2, .L84
 1288 0010 7B68     		ldr	r3, [r7, #4]
 1289 0012 D318     		add	r3, r2, r3
 1290 0014 FA1C     		add	r2, r7, #3
 1291 0016 1278     		ldrb	r2, [r2]
 1292 0018 1A70     		strb	r2, [r3]
1005:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 1293              		.loc 1 1005 0
 1294 001a BD46     		mov	sp, r7
 1295 001c 02B0     		add	sp, sp, #8
 1296              		@ sp needed
 1297 001e 80BD     		pop	{r7, pc}
 1298              	.L85:
 1299              		.align	2
 1300              	.L84:
 1301 0020 00000000 		.word	CapSense_negativeNoiseThreshold
 1302              		.cfi_endproc
 1303              	.LFE54:
 1304              		.size	CapSense_SetNegativeNoiseThreshold, .-CapSense_SetNegativeNoiseThreshold
 1305              		.section	.text.CapSense_SetDebounce,"ax",%progbits
 1306              		.align	2
 1307              		.global	CapSense_SetDebounce
 1308              		.code	16
 1309              		.thumb_func
 1310              		.type	CapSense_SetDebounce, %function
 1311              	CapSense_SetDebounce:
 1312              	.LFB55:
1006:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1007:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1008:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/*******************************************************************************
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 42


1009:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Function Name: CapSense_SetDebounce
1010:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	********************************************************************************
1011:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1012:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Summary:
1013:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  This API sets the debounce value for a widget.
1014:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1015:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Parameters: 
1016:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  value:  Debounce value for widget.
1017:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  widget: widget index.
1018:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1019:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Return Value: 
1020:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
1021:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1022:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
1023:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_debounce[] - This array contains the debounce value for each widget.
1024:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
1025:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1026:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
1027:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
1028:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1029:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*******************************************************************************/
1030:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	void CapSense_SetDebounce(uint32 widget, uint8 value)
1031:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 1313              		.loc 1 1031 0
 1314              		.cfi_startproc
 1315 0000 80B5     		push	{r7, lr}
 1316              		.cfi_def_cfa_offset 8
 1317              		.cfi_offset 7, -8
 1318              		.cfi_offset 14, -4
 1319 0002 82B0     		sub	sp, sp, #8
 1320              		.cfi_def_cfa_offset 16
 1321 0004 00AF     		add	r7, sp, #0
 1322              		.cfi_def_cfa_register 7
 1323 0006 7860     		str	r0, [r7, #4]
 1324 0008 0A1C     		mov	r2, r1
 1325 000a FB1C     		add	r3, r7, #3
 1326 000c 1A70     		strb	r2, [r3]
1032:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_debounce[widget] = value;
 1327              		.loc 1 1032 0
 1328 000e 044A     		ldr	r2, .L87
 1329 0010 7B68     		ldr	r3, [r7, #4]
 1330 0012 D318     		add	r3, r2, r3
 1331 0014 FA1C     		add	r2, r7, #3
 1332 0016 1278     		ldrb	r2, [r2]
 1333 0018 1A70     		strb	r2, [r3]
1033:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 1334              		.loc 1 1033 0
 1335 001a BD46     		mov	sp, r7
 1336 001c 02B0     		add	sp, sp, #8
 1337              		@ sp needed
 1338 001e 80BD     		pop	{r7, pc}
 1339              	.L88:
 1340              		.align	2
 1341              	.L87:
 1342 0020 00000000 		.word	CapSense_debounce
 1343              		.cfi_endproc
 1344              	.LFE55:
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 43


 1345              		.size	CapSense_SetDebounce, .-CapSense_SetDebounce
 1346              		.section	.text.CapSense_SetLowBaselineReset,"ax",%progbits
 1347              		.align	2
 1348              		.global	CapSense_SetLowBaselineReset
 1349              		.code	16
 1350              		.thumb_func
 1351              		.type	CapSense_SetLowBaselineReset, %function
 1352              	CapSense_SetLowBaselineReset:
 1353              	.LFB56:
1034:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1035:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1036:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/*******************************************************************************
1037:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Function Name: CapSense_SetLowBaselineReset
1038:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	********************************************************************************
1039:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1040:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Summary:
1041:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  This API sets the low baseline reset threshold value for the sensor.
1042:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1043:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Parameters: 
1044:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  value: low baseline reset threshold value.
1045:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  sensor: Sensor index.
1046:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1047:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Return Value: 
1048:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
1049:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1050:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
1051:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_lowBaselineReset[] - This array contains the Baseline update 
1052:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  threshold value for each sensor.
1053:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
1054:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
1055:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
1056:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1057:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*******************************************************************************/
1058:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	void CapSense_SetLowBaselineReset(uint32 sensor, uint8 value)
1059:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 1354              		.loc 1 1059 0
 1355              		.cfi_startproc
 1356 0000 80B5     		push	{r7, lr}
 1357              		.cfi_def_cfa_offset 8
 1358              		.cfi_offset 7, -8
 1359              		.cfi_offset 14, -4
 1360 0002 82B0     		sub	sp, sp, #8
 1361              		.cfi_def_cfa_offset 16
 1362 0004 00AF     		add	r7, sp, #0
 1363              		.cfi_def_cfa_register 7
 1364 0006 7860     		str	r0, [r7, #4]
 1365 0008 0A1C     		mov	r2, r1
 1366 000a FB1C     		add	r3, r7, #3
 1367 000c 1A70     		strb	r2, [r3]
1060:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_lowBaselineReset[sensor] = value;
 1368              		.loc 1 1060 0
 1369 000e 044A     		ldr	r2, .L90
 1370 0010 7B68     		ldr	r3, [r7, #4]
 1371 0012 D318     		add	r3, r2, r3
 1372 0014 FA1C     		add	r2, r7, #3
 1373 0016 1278     		ldrb	r2, [r2]
 1374 0018 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 44


1061:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 1375              		.loc 1 1061 0
 1376 001a BD46     		mov	sp, r7
 1377 001c 02B0     		add	sp, sp, #8
 1378              		@ sp needed
 1379 001e 80BD     		pop	{r7, pc}
 1380              	.L91:
 1381              		.align	2
 1382              	.L90:
 1383 0020 00000000 		.word	CapSense_lowBaselineReset
 1384              		.cfi_endproc
 1385              	.LFE56:
 1386              		.size	CapSense_SetLowBaselineReset, .-CapSense_SetLowBaselineReset
 1387              		.section	.text.CapSense_CheckIsSensorActive,"ax",%progbits
 1388              		.align	2
 1389              		.global	CapSense_CheckIsSensorActive
 1390              		.code	16
 1391              		.thumb_func
 1392              		.type	CapSense_CheckIsSensorActive, %function
 1393              	CapSense_CheckIsSensorActive:
 1394              	.LFB57:
1062:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
1063:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1064:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1065:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1066:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsSensorActive
1067:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1068:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1069:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1070:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares the CapSense_sensorSignal[sensor] array element to the finger
1071:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  threshold of the widget it belongs to. The hysteresis and debounce are taken into 
1072:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  account. The hysteresis is added or subtracted from the finger threshold 
1073:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  based on whether the sensor is currently active. 
1074:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the sensor is active, the threshold is lowered by the hysteresis amount.
1075:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the sensor is inactive, the threshold is raised by the hysteresis amount.
1076:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  The debounce counter is added to the sensor active transition.
1077:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function updates the CapSense_sensorOnMask[] array element.
1078:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1079:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1080:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
1081:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1082:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1083:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns sensor state 1 if active, 0 if not active.
1084:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1085:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1086:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - used to store the difference between 
1087:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the current value of raw data and a previous value of the baseline.
1088:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_debounceCounter[]   - used to store the current debounce 
1089:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  counter of the sensor. the widget which have this parameter are buttons, matrix 
1090:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  buttons, proximity, and guard. All other widgets don't have the  debounce parameter
1091:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
1092:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorOnMask[] - used to store the sensors on/off state.
1093:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorOnMask[0] contains the masked bits for sensors 
1094:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1095:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for 
1096:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1097:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor is inactive.
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 45


1098:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor is active.
1099:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
1100:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1101:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1102:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1103:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1104:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsSensorActive(uint32 sensor)
1105:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {	
 1395              		.loc 1 1105 0
 1396              		.cfi_startproc
 1397 0000 80B5     		push	{r7, lr}
 1398              		.cfi_def_cfa_offset 8
 1399              		.cfi_offset 7, -8
 1400              		.cfi_offset 14, -4
 1401 0002 84B0     		sub	sp, sp, #16
 1402              		.cfi_def_cfa_offset 24
 1403 0004 00AF     		add	r7, sp, #0
 1404              		.cfi_def_cfa_register 7
 1405 0006 7860     		str	r0, [r7, #4]
1106:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	uint8 widget;
1107:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	uint8 debounce;
1108:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	uint8 debounceIndex;
1109:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1110:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	uint8 fingerThreshold;
1111:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	uint8 hysteresis;
1112:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	static uint8 CapSense_debounceCounter[] = {
1113:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     0u, 
1114:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
1115:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1116:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1117:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
1118:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Prepare to find debounce counter index */
1119:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     widget = CapSense_widgetNumber[sensor];
 1406              		.loc 1 1119 0
 1407 0008 0F23     		mov	r3, #15
 1408 000a FB18     		add	r3, r7, r3
 1409 000c 4449     		ldr	r1, .L101
 1410 000e 7A68     		ldr	r2, [r7, #4]
 1411 0010 8A18     		add	r2, r1, r2
 1412 0012 1278     		ldrb	r2, [r2]
 1413 0014 1A70     		strb	r2, [r3]
1120:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
1121:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     fingerThreshold = CapSense_fingerThreshold[widget];
 1414              		.loc 1 1121 0
 1415 0016 0F23     		mov	r3, #15
 1416 0018 FB18     		add	r3, r7, r3
 1417 001a 1A78     		ldrb	r2, [r3]
 1418 001c 0E23     		mov	r3, #14
 1419 001e FB18     		add	r3, r7, r3
 1420 0020 4049     		ldr	r1, .L101+4
 1421 0022 8A5C     		ldrb	r2, [r1, r2]
 1422 0024 1A70     		strb	r2, [r3]
1122:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	hysteresis = CapSense_hysteresis[widget];
 1423              		.loc 1 1122 0
 1424 0026 0F23     		mov	r3, #15
 1425 0028 FB18     		add	r3, r7, r3
 1426 002a 1A78     		ldrb	r2, [r3]
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 46


 1427 002c 0D23     		mov	r3, #13
 1428 002e FB18     		add	r3, r7, r3
 1429 0030 3D49     		ldr	r1, .L101+8
 1430 0032 8A5C     		ldrb	r2, [r1, r2]
 1431 0034 1A70     		strb	r2, [r3]
1123:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	debounce = CapSense_debounce[widget];	
 1432              		.loc 1 1123 0
 1433 0036 0F23     		mov	r3, #15
 1434 0038 FB18     		add	r3, r7, r3
 1435 003a 1A78     		ldrb	r2, [r3]
 1436 003c 0C23     		mov	r3, #12
 1437 003e FB18     		add	r3, r7, r3
 1438 0040 3A49     		ldr	r1, .L101+12
 1439 0042 8A5C     		ldrb	r2, [r1, r2]
 1440 0044 1A70     		strb	r2, [r3]
1124:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
1125:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	    debounceIndex = CapSense_UNUSED_DEBOUNCE_COUNTER_INDEX;
 1441              		.loc 1 1125 0
 1442 0046 0B23     		mov	r3, #11
 1443 0048 FB18     		add	r3, r7, r3
 1444 004a 0022     		mov	r2, #0
 1445 004c 1A70     		strb	r2, [r3]
1126:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_debounceCounter[debounceIndex] = 1u;
 1446              		.loc 1 1126 0
 1447 004e 0B23     		mov	r3, #11
 1448 0050 FB18     		add	r3, r7, r3
 1449 0052 1B78     		ldrb	r3, [r3]
 1450 0054 364A     		ldr	r2, .L101+16
 1451 0056 0121     		mov	r1, #1
 1452 0058 D154     		strb	r1, [r2, r3]
1127:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1128:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
1129:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Was on */
1130:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if (0u != CapSense_GetBitValue(CapSense_sensorOnMask, sensor))
 1453              		.loc 1 1130 0
 1454 005a 364A     		ldr	r2, .L101+20
 1455 005c 7B68     		ldr	r3, [r7, #4]
 1456 005e 101C     		mov	r0, r2
 1457 0060 191C     		mov	r1, r3
 1458 0062 FFF7FEFF 		bl	CapSense_GetBitValue
 1459 0066 031E     		sub	r3, r0, #0
 1460 0068 1DD0     		beq	.L93
1131:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1132:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Hysteresis minus */
1133:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_sensorSignal[sensor] < (fingerThreshold - hysteresis))
 1461              		.loc 1 1133 0
 1462 006a 334A     		ldr	r2, .L101+24
 1463 006c 7B68     		ldr	r3, [r7, #4]
 1464 006e D318     		add	r3, r2, r3
 1465 0070 1B78     		ldrb	r3, [r3]
 1466 0072 191C     		mov	r1, r3
 1467 0074 0E23     		mov	r3, #14
 1468 0076 FB18     		add	r3, r7, r3
 1469 0078 1A78     		ldrb	r2, [r3]
 1470 007a 0D23     		mov	r3, #13
 1471 007c FB18     		add	r3, r7, r3
 1472 007e 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 47


 1473 0080 D31A     		sub	r3, r2, r3
 1474 0082 9942     		cmp	r1, r3
 1475 0084 3DDA     		bge	.L95
1134:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1135:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	   		CapSense_SetBitValue(CapSense_sensorOnMask, sensor, 0u);
 1476              		.loc 1 1135 0
 1477 0086 2B4A     		ldr	r2, .L101+20
 1478 0088 7B68     		ldr	r3, [r7, #4]
 1479 008a 101C     		mov	r0, r2
 1480 008c 191C     		mov	r1, r3
 1481 008e 0022     		mov	r2, #0
 1482 0090 FFF7FEFF 		bl	CapSense_SetBitValue
1136:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			/* Sensor inactive - reset Debounce counter */
1137:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex] = debounce;
 1483              		.loc 1 1137 0
 1484 0094 0B23     		mov	r3, #11
 1485 0096 FB18     		add	r3, r7, r3
 1486 0098 1B78     		ldrb	r3, [r3]
 1487 009a 254A     		ldr	r2, .L101+16
 1488 009c 0C21     		mov	r1, #12
 1489 009e 7918     		add	r1, r7, r1
 1490 00a0 0978     		ldrb	r1, [r1]
 1491 00a2 D154     		strb	r1, [r2, r3]
 1492 00a4 2DE0     		b	.L95
 1493              	.L93:
1138:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1139:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1140:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     else    /* Was off */
1141:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1142:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Hysteresis plus */
1143:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_sensorSignal[sensor] >= (fingerThreshold + hysteresis))
 1494              		.loc 1 1143 0
 1495 00a6 244A     		ldr	r2, .L101+24
 1496 00a8 7B68     		ldr	r3, [r7, #4]
 1497 00aa D318     		add	r3, r2, r3
 1498 00ac 1B78     		ldrb	r3, [r3]
 1499 00ae 191C     		mov	r1, r3
 1500 00b0 0E23     		mov	r3, #14
 1501 00b2 FB18     		add	r3, r7, r3
 1502 00b4 1A78     		ldrb	r2, [r3]
 1503 00b6 0D23     		mov	r3, #13
 1504 00b8 FB18     		add	r3, r7, r3
 1505 00ba 1B78     		ldrb	r3, [r3]
 1506 00bc D318     		add	r3, r2, r3
 1507 00be 9942     		cmp	r1, r3
 1508 00c0 17DB     		blt	.L96
1144:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1145:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_debounceCounter[debounceIndex]--;
 1509              		.loc 1 1145 0
 1510 00c2 0B23     		mov	r3, #11
 1511 00c4 FB18     		add	r3, r7, r3
 1512 00c6 1B78     		ldrb	r3, [r3]
 1513 00c8 194A     		ldr	r2, .L101+16
 1514 00ca D25C     		ldrb	r2, [r2, r3]
 1515 00cc 013A     		sub	r2, r2, #1
 1516 00ce D1B2     		uxtb	r1, r2
 1517 00d0 174A     		ldr	r2, .L101+16
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 48


 1518 00d2 D154     		strb	r1, [r2, r3]
1146:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Sensor active, decrement debounce counter */
1147:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(CapSense_debounceCounter[debounceIndex] == 0u)
 1519              		.loc 1 1147 0
 1520 00d4 0B23     		mov	r3, #11
 1521 00d6 FB18     		add	r3, r7, r3
 1522 00d8 1B78     		ldrb	r3, [r3]
 1523 00da 154A     		ldr	r2, .L101+16
 1524 00dc D35C     		ldrb	r3, [r2, r3]
 1525 00de 002B     		cmp	r3, #0
 1526 00e0 0FD1     		bne	.L95
1148:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1149:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_SetBitValue(CapSense_sensorOnMask, sensor, 1u); 
 1527              		.loc 1 1149 0
 1528 00e2 144A     		ldr	r2, .L101+20
 1529 00e4 7B68     		ldr	r3, [r7, #4]
 1530 00e6 101C     		mov	r0, r2
 1531 00e8 191C     		mov	r1, r3
 1532 00ea 0122     		mov	r2, #1
 1533 00ec FFF7FEFF 		bl	CapSense_SetBitValue
 1534 00f0 07E0     		b	.L95
 1535              	.L96:
1150:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1151:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1152:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1153:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1154:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
1155:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex] = debounce;
 1536              		.loc 1 1155 0
 1537 00f2 0B23     		mov	r3, #11
 1538 00f4 FB18     		add	r3, r7, r3
 1539 00f6 1B78     		ldrb	r3, [r3]
 1540 00f8 0D4A     		ldr	r2, .L101+16
 1541 00fa 0C21     		mov	r1, #12
 1542 00fc 7918     		add	r1, r7, r1
 1543 00fe 0978     		ldrb	r1, [r1]
 1544 0100 D154     		strb	r1, [r2, r3]
 1545              	.L95:
1156:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1157:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1158:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1159:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return ((uint32)((0u != CapSense_GetBitValue(CapSense_sensorOnMask, sensor)) ? 1u : 0u));
 1546              		.loc 1 1159 0
 1547 0102 0C4A     		ldr	r2, .L101+20
 1548 0104 7B68     		ldr	r3, [r7, #4]
 1549 0106 101C     		mov	r0, r2
 1550 0108 191C     		mov	r1, r3
 1551 010a FFF7FEFF 		bl	CapSense_GetBitValue
 1552 010e 031E     		sub	r3, r0, #0
 1553 0110 01D0     		beq	.L98
 1554              		.loc 1 1159 0 is_stmt 0 discriminator 1
 1555 0112 0123     		mov	r3, #1
 1556 0114 00E0     		b	.L99
 1557              	.L98:
 1558              		.loc 1 1159 0 discriminator 2
 1559 0116 0023     		mov	r3, #0
 1560              	.L99:
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 49


1160:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1561              		.loc 1 1160 0 is_stmt 1 discriminator 4
 1562 0118 181C     		mov	r0, r3
 1563 011a BD46     		mov	sp, r7
 1564 011c 04B0     		add	sp, sp, #16
 1565              		@ sp needed
 1566 011e 80BD     		pop	{r7, pc}
 1567              	.L102:
 1568              		.align	2
 1569              	.L101:
 1570 0120 00000000 		.word	CapSense_widgetNumber
 1571 0124 00000000 		.word	CapSense_fingerThreshold
 1572 0128 00000000 		.word	CapSense_hysteresis
 1573 012c 00000000 		.word	CapSense_debounce
 1574 0130 20000000 		.word	CapSense_debounceCounter.5379
 1575 0134 00000000 		.word	CapSense_sensorOnMask
 1576 0138 00000000 		.word	CapSense_sensorSignal
 1577              		.cfi_endproc
 1578              	.LFE57:
 1579              		.size	CapSense_CheckIsSensorActive, .-CapSense_CheckIsSensorActive
 1580              		.section	.text.CapSense_CheckIsWidgetActive,"ax",%progbits
 1581              		.align	2
 1582              		.global	CapSense_CheckIsWidgetActive
 1583              		.code	16
 1584              		.thumb_func
 1585              		.type	CapSense_CheckIsWidgetActive, %function
 1586              	CapSense_CheckIsWidgetActive:
 1587              	.LFB58:
1161:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1162:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1163:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1164:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsWidgetActive
1165:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1166:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1167:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1168:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares the CapSense_sensorSignal[] array element to the finger threshold of 
1169:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * the widget it belongs to. The hysteresis and debounce are taken into account. 
1170:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * The hysteresis is added or subtracted from the finger threshold based on whether
1171:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the sensor is currently active. If the sensor is active, the threshold is 
1172:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  lowered by the hysteresis amount. If the sensor is inactive, the threshold 
1173:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  is raised by the hysteresis amount. 
1174:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * The debounce counter added to the sensor active transition. 
1175:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * This function updates CapSense_sensorOnMask[] array element
1176:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1177:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1178:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1179:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1180:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1181:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns widget sensor state 1 if one or more sensors within widget is/are 
1182:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  active, 0 if all sensors within widget are inactive.
1183:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1184:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1185:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  rawDataIndex[]: Contains the  1st sensor position in the widget
1186:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
1187:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1188:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1189:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 50


1190:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1191:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsWidgetActive(uint32 widget)
1192:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1588              		.loc 1 1192 0
 1589              		.cfi_startproc
 1590 0000 80B5     		push	{r7, lr}
 1591              		.cfi_def_cfa_offset 8
 1592              		.cfi_offset 7, -8
 1593              		.cfi_offset 14, -4
 1594 0002 86B0     		sub	sp, sp, #24
 1595              		.cfi_def_cfa_offset 32
 1596 0004 00AF     		add	r7, sp, #0
 1597              		.cfi_def_cfa_register 7
 1598 0006 7860     		str	r0, [r7, #4]
1193:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 rawIndex = (uint32)CapSense_rawDataIndex[widget];
 1599              		.loc 1 1193 0
 1600 0008 0023     		mov	r3, #0
 1601 000a 7B61     		str	r3, [r7, #20]
1194:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 numOfSensors = (uint32)CapSense_numberOfSensors[widget] + rawIndex;
 1602              		.loc 1 1194 0
 1603 000c 0523     		mov	r3, #5
 1604 000e 1A1C     		mov	r2, r3
 1605 0010 7B69     		ldr	r3, [r7, #20]
 1606 0012 D318     		add	r3, r2, r3
 1607 0014 FB60     		str	r3, [r7, #12]
1195:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 state = 0u;
 1608              		.loc 1 1195 0
 1609 0016 0023     		mov	r3, #0
 1610 0018 3B61     		str	r3, [r7, #16]
 1611              	.L105:
1196:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1197:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Check all sensors of widget */
1198:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1199:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1200:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_CheckIsSensorActive((uint32)rawIndex) != 0u)
 1612              		.loc 1 1200 0
 1613 001a 7B69     		ldr	r3, [r7, #20]
 1614 001c 181C     		mov	r0, r3
 1615 001e FFF7FEFF 		bl	CapSense_CheckIsSensorActive
 1616 0022 031E     		sub	r3, r0, #0
 1617 0024 01D0     		beq	.L104
1201:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1202:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             state = CapSense_SENSOR_IS_ACTIVE;
 1618              		.loc 1 1202 0
 1619 0026 0123     		mov	r3, #1
 1620 0028 3B61     		str	r3, [r7, #16]
 1621              	.L104:
1203:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1204:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 1622              		.loc 1 1204 0
 1623 002a 7B69     		ldr	r3, [r7, #20]
 1624 002c 0133     		add	r3, r3, #1
 1625 002e 7B61     		str	r3, [r7, #20]
1205:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1206:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 1626              		.loc 1 1206 0
 1627 0030 7A69     		ldr	r2, [r7, #20]
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 51


 1628 0032 FB68     		ldr	r3, [r7, #12]
 1629 0034 9A42     		cmp	r2, r3
 1630 0036 F0D3     		bcc	.L105
1207:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1208:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1209:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1210:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return state;
 1631              		.loc 1 1210 0
 1632 0038 3B69     		ldr	r3, [r7, #16]
1211:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1633              		.loc 1 1211 0
 1634 003a 181C     		mov	r0, r3
 1635 003c BD46     		mov	sp, r7
 1636 003e 06B0     		add	sp, sp, #24
 1637              		@ sp needed
 1638 0040 80BD     		pop	{r7, pc}
 1639              		.cfi_endproc
 1640              	.LFE58:
 1641              		.size	CapSense_CheckIsWidgetActive, .-CapSense_CheckIsWidgetActive
 1642 0042 C046     		.section	.text.CapSense_CheckIsAnyWidgetActive,"ax",%progbits
 1643              		.align	2
 1644              		.global	CapSense_CheckIsAnyWidgetActive
 1645              		.code	16
 1646              		.thumb_func
 1647              		.type	CapSense_CheckIsAnyWidgetActive, %function
 1648              	CapSense_CheckIsAnyWidgetActive:
 1649              	.LFB59:
1212:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1213:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1214:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1215:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsAnyWidgetActive
1216:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1217:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1218:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1219:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares all the sensors of the CapSense_Signal[] array to their finger 
1220:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  threshold. Calls CapSense_CheckIsWidgetActive() for each widget so 
1221:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the CapSense_sensorOnMask[] array is up to date after calling this 
1222:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  function.
1223:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1224:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1225:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1226:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1227:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1228:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns 1 if any widget is active, 0 none of widgets are active.
1229:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1230:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1231:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1232:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
1233:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1234:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1235:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1236:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1237:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsAnyWidgetActive(void)
1238:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1650              		.loc 1 1238 0
 1651              		.cfi_startproc
 1652 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 52


 1653              		.cfi_def_cfa_offset 8
 1654              		.cfi_offset 7, -8
 1655              		.cfi_offset 14, -4
 1656 0002 82B0     		sub	sp, sp, #8
 1657              		.cfi_def_cfa_offset 16
 1658 0004 00AF     		add	r7, sp, #0
 1659              		.cfi_def_cfa_register 7
1239:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1240:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	    uint32 i;
1241:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 state = 0u;
 1660              		.loc 1 1241 0
 1661 0006 0023     		mov	r3, #0
 1662 0008 3B60     		str	r3, [r7]
1242:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1243:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_WIDGET_COUNT; i++)
 1663              		.loc 1 1243 0
 1664 000a 0023     		mov	r3, #0
 1665 000c 7B60     		str	r3, [r7, #4]
 1666 000e 0AE0     		b	.L108
 1667              	.L110:
1244:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1245:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_CheckIsWidgetActive(i) != 0u)
 1668              		.loc 1 1245 0
 1669 0010 7B68     		ldr	r3, [r7, #4]
 1670 0012 181C     		mov	r0, r3
 1671 0014 FFF7FEFF 		bl	CapSense_CheckIsWidgetActive
 1672 0018 031E     		sub	r3, r0, #0
 1673 001a 01D0     		beq	.L109
1246:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1247:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             state = CapSense_WIDGET_IS_ACTIVE;
 1674              		.loc 1 1247 0
 1675 001c 0123     		mov	r3, #1
 1676 001e 3B60     		str	r3, [r7]
 1677              	.L109:
1243:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1678              		.loc 1 1243 0 discriminator 2
 1679 0020 7B68     		ldr	r3, [r7, #4]
 1680 0022 0133     		add	r3, r3, #1
 1681 0024 7B60     		str	r3, [r7, #4]
 1682              	.L108:
1243:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1683              		.loc 1 1243 0 is_stmt 0 discriminator 1
 1684 0026 7B68     		ldr	r3, [r7, #4]
 1685 0028 002B     		cmp	r3, #0
 1686 002a F1D0     		beq	.L110
1248:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1249:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1250:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1251:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1252:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1253:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return state;
 1687              		.loc 1 1253 0 is_stmt 1
 1688 002c 3B68     		ldr	r3, [r7]
1254:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1689              		.loc 1 1254 0
 1690 002e 181C     		mov	r0, r3
 1691 0030 BD46     		mov	sp, r7
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 53


 1692 0032 02B0     		add	sp, sp, #8
 1693              		@ sp needed
 1694 0034 80BD     		pop	{r7, pc}
 1695              		.cfi_endproc
 1696              	.LFE59:
 1697              		.size	CapSense_CheckIsAnyWidgetActive, .-CapSense_CheckIsAnyWidgetActive
 1698 0036 C046     		.section	.text.CapSense_EnableWidget,"ax",%progbits
 1699              		.align	2
 1700              		.global	CapSense_EnableWidget
 1701              		.code	16
 1702              		.thumb_func
 1703              		.type	CapSense_EnableWidget, %function
 1704              	CapSense_EnableWidget:
 1705              	.LFB60:
1255:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1256:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1257:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1258:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_EnableWidget
1259:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1260:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1261:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1262:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Enables all the widget elements (sensors) to the scanning process.
1263:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1264:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1265:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1266:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1267:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1268:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1269:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1270:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1271:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning 
1272:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
1273:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 
1274:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1275:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for 
1276:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1277:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
1278:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
1279:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
1280:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1281:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1282:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1283:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1284:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_EnableWidget(uint32 widget)
1285:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1706              		.loc 1 1285 0
 1707              		.cfi_startproc
 1708 0000 80B5     		push	{r7, lr}
 1709              		.cfi_def_cfa_offset 8
 1710              		.cfi_offset 7, -8
 1711              		.cfi_offset 14, -4
 1712 0002 84B0     		sub	sp, sp, #16
 1713              		.cfi_def_cfa_offset 24
 1714 0004 00AF     		add	r7, sp, #0
 1715              		.cfi_def_cfa_register 7
 1716 0006 7860     		str	r0, [r7, #4]
1286:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 54


1287:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 1717              		.loc 1 1287 0
 1718 0008 0F23     		mov	r3, #15
 1719 000a FB18     		add	r3, r7, r3
 1720 000c 0022     		mov	r2, #0
 1721 000e 1A70     		strb	r2, [r3]
1288:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 numOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
 1722              		.loc 1 1288 0
 1723 0010 0521     		mov	r1, #5
 1724 0012 0E23     		mov	r3, #14
 1725 0014 FB18     		add	r3, r7, r3
 1726 0016 0F22     		mov	r2, #15
 1727 0018 BA18     		add	r2, r7, r2
 1728 001a 1278     		ldrb	r2, [r2]
 1729 001c 8A18     		add	r2, r1, r2
 1730 001e 1A70     		strb	r2, [r3]
 1731              	.L113:
1289:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1290:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Enable all sensors of widget */
1291:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1292:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1293:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_SetBitValue(CapSense_sensorEnableMask, (uint32)rawIndex, 1u);
 1732              		.loc 1 1293 0 discriminator 1
 1733 0020 0F23     		mov	r3, #15
 1734 0022 FB18     		add	r3, r7, r3
 1735 0024 1B78     		ldrb	r3, [r3]
 1736 0026 0C4A     		ldr	r2, .L114
 1737 0028 101C     		mov	r0, r2
 1738 002a 191C     		mov	r1, r3
 1739 002c 0122     		mov	r2, #1
 1740 002e FFF7FEFF 		bl	CapSense_SetBitValue
1294:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 1741              		.loc 1 1294 0 discriminator 1
 1742 0032 0F23     		mov	r3, #15
 1743 0034 FB18     		add	r3, r7, r3
 1744 0036 1A78     		ldrb	r2, [r3]
 1745 0038 0F23     		mov	r3, #15
 1746 003a FB18     		add	r3, r7, r3
 1747 003c 0132     		add	r2, r2, #1
 1748 003e 1A70     		strb	r2, [r3]
1295:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1296:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 1749              		.loc 1 1296 0 discriminator 1
 1750 0040 0F23     		mov	r3, #15
 1751 0042 FA18     		add	r2, r7, r3
 1752 0044 0E23     		mov	r3, #14
 1753 0046 FB18     		add	r3, r7, r3
 1754 0048 1278     		ldrb	r2, [r2]
 1755 004a 1B78     		ldrb	r3, [r3]
 1756 004c 9A42     		cmp	r2, r3
 1757 004e E7D3     		bcc	.L113
1297:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1758              		.loc 1 1297 0
 1759 0050 BD46     		mov	sp, r7
 1760 0052 04B0     		add	sp, sp, #16
 1761              		@ sp needed
 1762 0054 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 55


 1763              	.L115:
 1764 0056 C046     		.align	2
 1765              	.L114:
 1766 0058 00000000 		.word	CapSense_sensorEnableMask
 1767              		.cfi_endproc
 1768              	.LFE60:
 1769              		.size	CapSense_EnableWidget, .-CapSense_EnableWidget
 1770              		.section	.text.CapSense_DisableWidget,"ax",%progbits
 1771              		.align	2
 1772              		.global	CapSense_DisableWidget
 1773              		.code	16
 1774              		.thumb_func
 1775              		.type	CapSense_DisableWidget, %function
 1776              	CapSense_DisableWidget:
 1777              	.LFB61:
1298:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1299:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1300:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1301:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_DisableWidget
1302:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1303:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1304:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1305:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Disables all the widget elements (sensors) from the scanning process.
1306:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1307:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1308:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1309:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1310:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1311:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1312:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1313:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1314:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning 
1315:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
1316:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 
1317:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1318:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for 
1319:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1320:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor isn't scanned by CapSense_ScanEnabledWidgets().
1321:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor is scanned by CapSense_ScanEnabledWidgets().
1322:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
1323:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1324:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1325:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1326:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1327:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_DisableWidget(uint32 widget)
1328:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1778              		.loc 1 1328 0
 1779              		.cfi_startproc
 1780 0000 80B5     		push	{r7, lr}
 1781              		.cfi_def_cfa_offset 8
 1782              		.cfi_offset 7, -8
 1783              		.cfi_offset 14, -4
 1784 0002 84B0     		sub	sp, sp, #16
 1785              		.cfi_def_cfa_offset 24
 1786 0004 00AF     		add	r7, sp, #0
 1787              		.cfi_def_cfa_register 7
 1788 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 56


1329:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 1789              		.loc 1 1329 0
 1790 0008 0F23     		mov	r3, #15
 1791 000a FB18     		add	r3, r7, r3
 1792 000c 0022     		mov	r2, #0
 1793 000e 1A70     		strb	r2, [r3]
1330:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 numOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
 1794              		.loc 1 1330 0
 1795 0010 0521     		mov	r1, #5
 1796 0012 0E23     		mov	r3, #14
 1797 0014 FB18     		add	r3, r7, r3
 1798 0016 0F22     		mov	r2, #15
 1799 0018 BA18     		add	r2, r7, r2
 1800 001a 1278     		ldrb	r2, [r2]
 1801 001c 8A18     		add	r2, r1, r2
 1802 001e 1A70     		strb	r2, [r3]
 1803              	.L117:
1331:.\Generated_Source\PSoC4/CapSense_CSHL.c ****    
1332:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Disable all sensors of widget */
1333:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1334:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1335:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1336:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_SetBitValue(CapSense_sensorEnableMask, (uint32)rawIndex, 0u);
 1804              		.loc 1 1336 0 discriminator 1
 1805 0020 0F23     		mov	r3, #15
 1806 0022 FB18     		add	r3, r7, r3
 1807 0024 1B78     		ldrb	r3, [r3]
 1808 0026 0C4A     		ldr	r2, .L118
 1809 0028 101C     		mov	r0, r2
 1810 002a 191C     		mov	r1, r3
 1811 002c 0022     		mov	r2, #0
 1812 002e FFF7FEFF 		bl	CapSense_SetBitValue
1337:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 1813              		.loc 1 1337 0 discriminator 1
 1814 0032 0F23     		mov	r3, #15
 1815 0034 FB18     		add	r3, r7, r3
 1816 0036 1A78     		ldrb	r2, [r3]
 1817 0038 0F23     		mov	r3, #15
 1818 003a FB18     		add	r3, r7, r3
 1819 003c 0132     		add	r2, r2, #1
 1820 003e 1A70     		strb	r2, [r3]
1338:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1339:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 1821              		.loc 1 1339 0 discriminator 1
 1822 0040 0F23     		mov	r3, #15
 1823 0042 FA18     		add	r2, r7, r3
 1824 0044 0E23     		mov	r3, #14
 1825 0046 FB18     		add	r3, r7, r3
 1826 0048 1278     		ldrb	r2, [r2]
 1827 004a 1B78     		ldrb	r3, [r3]
 1828 004c 9A42     		cmp	r2, r3
 1829 004e E7D3     		bcc	.L117
1340:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1830              		.loc 1 1340 0
 1831 0050 BD46     		mov	sp, r7
 1832 0052 04B0     		add	sp, sp, #16
 1833              		@ sp needed
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 57


 1834 0054 80BD     		pop	{r7, pc}
 1835              	.L119:
 1836 0056 C046     		.align	2
 1837              	.L118:
 1838 0058 00000000 		.word	CapSense_sensorEnableMask
 1839              		.cfi_endproc
 1840              	.LFE61:
 1841              		.size	CapSense_DisableWidget, .-CapSense_DisableWidget
 1842              		.section	.text.CapSense_FindMaximum,"ax",%progbits
 1843              		.align	2
 1844              		.global	CapSense_FindMaximum
 1845              		.code	16
 1846              		.thumb_func
 1847              		.type	CapSense_FindMaximum, %function
 1848              	CapSense_FindMaximum:
 1849              	.LFB62:
1341:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1342:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1343:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TOTAL_CENTROIDS_BASIC_COUNT)
1344:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1345:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_FindMaximum
1346:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1347:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1348:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1349:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Finds the index of the maximum element within a defined centroid. Checks 
1350:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_sensorSignal[] within a defined centroid and 
1351:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  returns the index of the maximum element. The values below the finger threshold are 
1352:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  ignored.
1353:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The centroid is defined by offset of the first element and a number of elements - count.
1354:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The diplexed centroid requires at least two consecutive elements above
1355:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  FingerThreshold to find the index of the maximum element.
1356:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * 
1357:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1358:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  offset:  Start index of centroid in CapSense_sensorSignal[] array.
1359:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  count:   number of elements within centroid.
1360:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  fingerThreshold:  Finger threshold.
1361:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  diplex:   pointer to diplex table.
1362:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * 
1363:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1364:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns the index of the maximum element within a defined centroid.
1365:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If the index of the maximum element isn't found it returns 0xFF.
1366:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1367:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
1368:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_startOfSlider[] - contains the index of the first slider element
1369:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
1370:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects: 
1371:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
1372:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
1373:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1374:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#if (CapSense_IS_DIPLEX_SLIDER)
1375:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		uint8 CapSense_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold, const uint8 *diplex)
1376:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#else 
1377:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		uint8 CapSense_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold)
1378:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#endif /* (CapSense_IS_DIPLEX_SLIDER) */
1379:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1850              		.loc 1 1379 0
 1851              		.cfi_startproc
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 58


 1852 0000 90B5     		push	{r4, r7, lr}
 1853              		.cfi_def_cfa_offset 12
 1854              		.cfi_offset 4, -12
 1855              		.cfi_offset 7, -8
 1856              		.cfi_offset 14, -4
 1857 0002 85B0     		sub	sp, sp, #20
 1858              		.cfi_def_cfa_offset 32
 1859 0004 00AF     		add	r7, sp, #0
 1860              		.cfi_def_cfa_register 7
 1861 0006 041C     		mov	r4, r0
 1862 0008 081C     		mov	r0, r1
 1863 000a 111C     		mov	r1, r2
 1864 000c FB1D     		add	r3, r7, #7
 1865 000e 221C     		add	r2, r4, #0
 1866 0010 1A70     		strb	r2, [r3]
 1867 0012 BB1D     		add	r3, r7, #6
 1868 0014 021C     		add	r2, r0, #0
 1869 0016 1A70     		strb	r2, [r3]
 1870 0018 7B1D     		add	r3, r7, #5
 1871 001a 0A1C     		add	r2, r1, #0
 1872 001c 1A70     		strb	r2, [r3]
1380:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 i;
1381:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)        
1382:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curPos = 0u;
1383:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* No centroid at Start */
1384:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curCntrdSize = 0u;
1385:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curCtrdStartPos = CapSense_MAXIMUM_CENTROID;
1386:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Biggest centroid is zero */
1387:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 biggestCtrdSize = 0u;
1388:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 biggestCtrdStartPos = 0u;
1389:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1390:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum = CapSense_MAXIMUM_CENTROID;
 1873              		.loc 1 1390 0
 1874 001e 0E23     		mov	r3, #14
 1875 0020 FB18     		add	r3, r7, r3
 1876 0022 FF22     		mov	r2, #255
 1877 0024 1A70     		strb	r2, [r3]
1391:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		
1392:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 temp = 0u;
 1878              		.loc 1 1392 0
 1879 0026 0D23     		mov	r3, #13
 1880 0028 FB18     		add	r3, r7, r3
 1881 002a 0022     		mov	r2, #0
 1882 002c 1A70     		strb	r2, [r3]
1393:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 *startOfSlider = &CapSense_sensorSignal[offset];
 1883              		.loc 1 1393 0
 1884 002e FB1D     		add	r3, r7, #7
 1885 0030 1A78     		ldrb	r2, [r3]
 1886 0032 204B     		ldr	r3, .L125
 1887 0034 D318     		add	r3, r2, r3
 1888 0036 BB60     		str	r3, [r7, #8]
1394:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1395:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)        
1396:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(diplex != 0u)
1397:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1398:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Initialize */
1399:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 i = 0u;
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 59


1400:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 
1401:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Make slider x2 as Diplexed */
1402:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 count <<= 1u;
1403:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 while(1u)
1404:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 { 
1405:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (startOfSlider[curPos] > 0u)    /* Looking for centroids */
1406:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1407:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         if (curCtrdStartPos == CapSense_MAXIMUM_CENTROID)
1408:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1409:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Start of centroid */
1410:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCtrdStartPos = i;
1411:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize++;
1412:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1413:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         else
1414:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1415:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize++;
1416:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1417:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1418:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     else   /* Select biggest and indicate zero start */
1419:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {          
1420:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         if(curCntrdSize > 0u)
1421:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1422:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* We are at the end of current */
1423:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if(curCntrdSize > biggestCtrdSize)
1424:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1425:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 biggestCtrdSize = curCntrdSize;
1426:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 biggestCtrdStartPos = curCtrdStartPos;
1427:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1428:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             
1429:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize = 0u;
1430:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCtrdStartPos = CapSense_MAXIMUM_CENTROID;
1431:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1432:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1433:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     
1434:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     i++; 
1435:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     curPos = diplex[i];
1436:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(i == count)
1437:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1438:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         break;
1439:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }            
1440:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1441:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     
1442:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Find biggest centroid if two are same size, last one wins
1443:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                        We are at the end of current */
1444:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (curCntrdSize >= biggestCtrdSize) 
1445:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1446:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     biggestCtrdSize = curCntrdSize;
1447:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     biggestCtrdStartPos = curCtrdStartPos;
1448:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1449:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1450:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1451:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1452:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Without diplexing */ 
1453:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 biggestCtrdSize = count;
1454:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1455:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         
1456:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 60


1457:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Check centroid size */
1458:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_IS_NON_DIPLEX_SLIDER)
1459:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if((biggestCtrdSize >= 2u) || ((biggestCtrdSize == 1u) && (diplex == 0u)))
1460:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #else                    
1461:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(biggestCtrdSize >= 2u)
1462:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_IS_NON_DIPLEX_SLIDER) */
1463:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1464:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     for (i = biggestCtrdStartPos; i < (biggestCtrdStartPos + biggestCtrdSize); i++)
1465:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1466:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER)
1467:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (diplex == 0u)
1468:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1469:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 curPos = i;
1470:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1471:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             else
1472:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1473:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 curPos = diplex[i];
1474:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }                    
1475:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #elif (CapSense_IS_DIPLEX_SLIDER)                    
1476:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curPos = diplex[i];                    
1477:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER) */
1478:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Looking for greater element within centroid */
1479:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         if(startOfSlider[curPos] > fingerThreshold)
1480:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1481:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if(startOfSlider[curPos] > temp)
1482:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1483:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 maximum = i;
1484:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 temp = startOfSlider[curPos];
1485:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1486:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1487:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1488:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 } 
1489:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
1490:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             for (i = 0u; i < count; i++)
 1889              		.loc 1 1490 0
 1890 0038 0F23     		mov	r3, #15
 1891 003a FB18     		add	r3, r7, r3
 1892 003c 0022     		mov	r2, #0
 1893 003e 1A70     		strb	r2, [r3]
 1894 0040 2AE0     		b	.L121
 1895              	.L123:
1491:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {                      
1492:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Looking for greater element within centroid */
1493:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(startOfSlider[i] > fingerThreshold)
 1896              		.loc 1 1493 0
 1897 0042 0F23     		mov	r3, #15
 1898 0044 FB18     		add	r3, r7, r3
 1899 0046 1B78     		ldrb	r3, [r3]
 1900 0048 BA68     		ldr	r2, [r7, #8]
 1901 004a D318     		add	r3, r2, r3
 1902 004c 1B78     		ldrb	r3, [r3]
 1903 004e 7A1D     		add	r2, r7, #5
 1904 0050 1278     		ldrb	r2, [r2]
 1905 0052 9A42     		cmp	r2, r3
 1906 0054 19D2     		bcs	.L122
1494:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1495:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(startOfSlider[i] > temp)
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 61


 1907              		.loc 1 1495 0
 1908 0056 0F23     		mov	r3, #15
 1909 0058 FB18     		add	r3, r7, r3
 1910 005a 1B78     		ldrb	r3, [r3]
 1911 005c BA68     		ldr	r2, [r7, #8]
 1912 005e D318     		add	r3, r2, r3
 1913 0060 1B78     		ldrb	r3, [r3]
 1914 0062 0D22     		mov	r2, #13
 1915 0064 BA18     		add	r2, r7, r2
 1916 0066 1278     		ldrb	r2, [r2]
 1917 0068 9A42     		cmp	r2, r3
 1918 006a 0ED2     		bcs	.L122
1496:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1497:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         maximum = i;
 1919              		.loc 1 1497 0
 1920 006c 0E23     		mov	r3, #14
 1921 006e FB18     		add	r3, r7, r3
 1922 0070 0F22     		mov	r2, #15
 1923 0072 BA18     		add	r2, r7, r2
 1924 0074 1278     		ldrb	r2, [r2]
 1925 0076 1A70     		strb	r2, [r3]
1498:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         temp = startOfSlider[i];
 1926              		.loc 1 1498 0
 1927 0078 0F23     		mov	r3, #15
 1928 007a FB18     		add	r3, r7, r3
 1929 007c 1B78     		ldrb	r3, [r3]
 1930 007e BA68     		ldr	r2, [r7, #8]
 1931 0080 D218     		add	r2, r2, r3
 1932 0082 0D23     		mov	r3, #13
 1933 0084 FB18     		add	r3, r7, r3
 1934 0086 1278     		ldrb	r2, [r2]
 1935 0088 1A70     		strb	r2, [r3]
 1936              	.L122:
1490:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {                      
 1937              		.loc 1 1490 0 discriminator 2
 1938 008a 0F23     		mov	r3, #15
 1939 008c FB18     		add	r3, r7, r3
 1940 008e 1A78     		ldrb	r2, [r3]
 1941 0090 0F23     		mov	r3, #15
 1942 0092 FB18     		add	r3, r7, r3
 1943 0094 0132     		add	r2, r2, #1
 1944 0096 1A70     		strb	r2, [r3]
 1945              	.L121:
1490:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {                      
 1946              		.loc 1 1490 0 is_stmt 0 discriminator 1
 1947 0098 0F23     		mov	r3, #15
 1948 009a FA18     		add	r2, r7, r3
 1949 009c BB1D     		add	r3, r7, #6
 1950 009e 1278     		ldrb	r2, [r2]
 1951 00a0 1B78     		ldrb	r3, [r3]
 1952 00a2 9A42     		cmp	r2, r3
 1953 00a4 CDD3     		bcc	.L123
1499:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1500:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1501:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }    
1502:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1503:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (maximum);
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 62


 1954              		.loc 1 1503 0 is_stmt 1
 1955 00a6 0E23     		mov	r3, #14
 1956 00a8 FB18     		add	r3, r7, r3
 1957 00aa 1B78     		ldrb	r3, [r3]
1504:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1958              		.loc 1 1504 0
 1959 00ac 181C     		mov	r0, r3
 1960 00ae BD46     		mov	sp, r7
 1961 00b0 05B0     		add	sp, sp, #20
 1962              		@ sp needed
 1963 00b2 90BD     		pop	{r4, r7, pc}
 1964              	.L126:
 1965              		.align	2
 1966              	.L125:
 1967 00b4 00000000 		.word	CapSense_sensorSignal
 1968              		.cfi_endproc
 1969              	.LFE62:
 1970              		.size	CapSense_FindMaximum, .-CapSense_FindMaximum
 1971              		.global	__aeabi_idiv
 1972              		.section	.text.CapSense_CalcCentroid,"ax",%progbits
 1973              		.align	2
 1974              		.global	CapSense_CalcCentroid
 1975              		.code	16
 1976              		.thumb_func
 1977              		.type	CapSense_CalcCentroid, %function
 1978              	CapSense_CalcCentroid:
 1979              	.LFB63:
1505:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1506:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1507:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1508:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_CalcCentroid
1509:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1510:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1511:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1512:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value calculated according to the index of the maximum element and API
1513:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  resolution.
1514:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1515:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1516:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  type:  widget type.
1517:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  diplex:  pointer to diplex table.
1518:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  maximum:  Index of maximum element within centroid.
1519:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  offset:   Start index of centroid in CapSense_sensorSignal[] array.
1520:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  count:    Number of elements within centroid.
1521:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  resolution:  multiplicator calculated according to centroid type and
1522:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  API resolution.
1523:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  noiseThreshold:  Noise threshold.
1524:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * 
1525:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1526:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the slider.
1527:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1528:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects: 
1529:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
1530:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
1531:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1532:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TOTAL_TRACKPAD_GESTURES_COUNT > 0u)
1533:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 CapSense_CalcCentroid(uint8 maximum, uint8 offset, 
1534:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         uint8 count, uint32 resolution, uint8 noiseThreshold)
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 63


1535:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #else								
1536:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 CapSense_CalcCentroid(uint8 maximum, uint8 offset, 
1537:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         uint8 count, uint16 resolution, uint8 noiseThreshold)						
1538:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_TRACKPAD_GESTURES_COUNT > 0u) */
1539:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1980              		.loc 1 1539 0
 1981              		.cfi_startproc
 1982 0000 B0B5     		push	{r4, r5, r7, lr}
 1983              		.cfi_def_cfa_offset 16
 1984              		.cfi_offset 4, -16
 1985              		.cfi_offset 5, -12
 1986              		.cfi_offset 7, -8
 1987              		.cfi_offset 14, -4
 1988 0002 88B0     		sub	sp, sp, #32
 1989              		.cfi_def_cfa_offset 48
 1990 0004 00AF     		add	r7, sp, #0
 1991              		.cfi_def_cfa_register 7
 1992 0006 051C     		mov	r5, r0
 1993 0008 0C1C     		mov	r4, r1
 1994 000a 101C     		mov	r0, r2
 1995 000c 191C     		mov	r1, r3
 1996 000e FB1D     		add	r3, r7, #7
 1997 0010 2A1C     		add	r2, r5, #0
 1998 0012 1A70     		strb	r2, [r3]
 1999 0014 BB1D     		add	r3, r7, #6
 2000 0016 221C     		add	r2, r4, #0
 2001 0018 1A70     		strb	r2, [r3]
 2002 001a 7B1D     		add	r3, r7, #5
 2003 001c 021C     		add	r2, r0, #0
 2004 001e 1A70     		strb	r2, [r3]
 2005 0020 BB1C     		add	r3, r7, #2
 2006 0022 0A1C     		add	r2, r1, #0
 2007 0024 1A80     		strh	r2, [r3]
1540:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT >
1541:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posPrev;
1542:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posNext;
1543:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1544:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1545:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Helps during centroid calculation */
1546:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_TOTAL_CENTROIDS_BASIC_COUNT)
1547:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		    static uint8 CapSense_centroid[3u];
1548:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_TOTAL_CENTROIDS_BASIC_COUNT) */
1549:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                
1550:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)                
1551:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 pos;
1552:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1553:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1554:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 position;
1555:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 numerator;
1556:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         int32 denominator;
1557:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		
1558:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		uint8  *startOfSlider = &CapSense_sensorSignal[offset];
 2008              		.loc 1 1558 0
 2009 0026 BB1D     		add	r3, r7, #6
 2010 0028 1A78     		ldrb	r2, [r3]
 2011 002a 5B4B     		ldr	r3, .L137
 2012 002c D318     		add	r3, r2, r3
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 64


 2013 002e BB61     		str	r3, [r7, #24]
1559:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		
1560:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT >
1561:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             posPrev = 0u;
 2014              		.loc 1 1561 0
 2015 0030 1F23     		mov	r3, #31
 2016 0032 FB18     		add	r3, r7, r3
 2017 0034 0022     		mov	r2, #0
 2018 0036 1A70     		strb	r2, [r3]
1562:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1563:.\Generated_Source\PSoC4/CapSense_CSHL.c ****      
1564:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1565:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(type == CapSense_TYPE_RADIAL_SLIDER)
1566:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1567:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1568:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1569:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)                
1570:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Copy Signal to the centroid array */
1571:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_centroid[CapSense_POS] = startOfSlider[maximum];
1572:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                  
1573:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check borders for ROTARY Slider */
1574:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1575:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 { 
1576:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[count - 1u];
1577:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[1u];
1578:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1579:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 else if (maximum == (count - 1u))    /* End of centroid */
1580:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1581:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[maximum - 1u];
1582:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[0u];
1583:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1584:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 else                                /* Not first Not last */
1585:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1586:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[maximum - 1u];
1587:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[maximum + 1u];
1588:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1589:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1590:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1591:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1592:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1593:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1594:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1595:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1596:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1597:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1598:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER)                   
1599:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1600:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(diplex == 0u)
1601:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1602:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         pos     = maximum;
1603:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = maximum - 1u;
1604:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posNext = maximum + 1u; 
1605:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1606:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
1607:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1608:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         pos     = diplex[maximum];
1609:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = diplex[maximum - 1u];
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 65


1610:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posNext = diplex[maximum + 1u];
1611:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         count <<= 1u;
1612:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }                    
1613:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #elif (CapSense_IS_DIPLEX_SLIDER)
1614:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1615:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     pos     = diplex[maximum];
1616:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posPrev = diplex[maximum - 1u];
1617:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posNext = diplex[maximum + 1u];
1618:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     count <<= 1u;                    
1619:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #else                    
1620:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1621:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (maximum >= 1u)
 2019              		.loc 1 1621 0
 2020 0038 FB1D     		add	r3, r7, #7
 2021 003a 1B78     		ldrb	r3, [r3]
 2022 003c 002B     		cmp	r3, #0
 2023 003e 05D0     		beq	.L128
1622:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1623:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = maximum - 1u;
 2024              		.loc 1 1623 0
 2025 0040 1F23     		mov	r3, #31
 2026 0042 FB18     		add	r3, r7, r3
 2027 0044 FA1D     		add	r2, r7, #7
 2028 0046 1278     		ldrb	r2, [r2]
 2029 0048 013A     		sub	r2, r2, #1
 2030 004a 1A70     		strb	r2, [r3]
 2031              	.L128:
1624:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1625:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posNext = maximum + 1u;
 2032              		.loc 1 1625 0
 2033 004c 1723     		mov	r3, #23
 2034 004e FB18     		add	r3, r7, r3
 2035 0050 FA1D     		add	r2, r7, #7
 2036 0052 1278     		ldrb	r2, [r2]
 2037 0054 0132     		add	r2, r2, #1
 2038 0056 1A70     		strb	r2, [r3]
1626:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER) */
1627:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         
1628:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Copy Signal to the centroid array */
1629:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (CapSense_IS_DIPLEX_SLIDER)
1630:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS] = startOfSlider[pos];
1631:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #else
1632:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS] = startOfSlider[maximum];
 2039              		.loc 1 1632 0
 2040 0058 FB1D     		add	r3, r7, #7
 2041 005a 1B78     		ldrb	r3, [r3]
 2042 005c BA69     		ldr	r2, [r7, #24]
 2043 005e D318     		add	r3, r2, r3
 2044 0060 1A78     		ldrb	r2, [r3]
 2045 0062 4E4B     		ldr	r3, .L137+4
 2046 0064 5A70     		strb	r2, [r3, #1]
1633:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1634:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     
1635:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check borders for LINEAR Slider */
1636:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
 2047              		.loc 1 1636 0
 2048 0066 FB1D     		add	r3, r7, #7
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 66


 2049 0068 1B78     		ldrb	r3, [r3]
 2050 006a 002B     		cmp	r3, #0
 2051 006c 0BD1     		bne	.L129
1637:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 { 
1638:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = 0u;
 2052              		.loc 1 1638 0
 2053 006e 4B4B     		ldr	r3, .L137+4
 2054 0070 0022     		mov	r2, #0
 2055 0072 1A70     		strb	r2, [r3]
1639:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[posNext];
 2056              		.loc 1 1639 0
 2057 0074 1723     		mov	r3, #23
 2058 0076 FB18     		add	r3, r7, r3
 2059 0078 1B78     		ldrb	r3, [r3]
 2060 007a BA69     		ldr	r2, [r7, #24]
 2061 007c D318     		add	r3, r2, r3
 2062 007e 1A78     		ldrb	r2, [r3]
 2063 0080 464B     		ldr	r3, .L137+4
 2064 0082 9A70     		strb	r2, [r3, #2]
 2065 0084 22E0     		b	.L130
 2066              	.L129:
1640:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1641:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 else if (maximum == ((count) - 1u)) /* End of centroid */
 2067              		.loc 1 1641 0
 2068 0086 FB1D     		add	r3, r7, #7
 2069 0088 1A78     		ldrb	r2, [r3]
 2070 008a 7B1D     		add	r3, r7, #5
 2071 008c 1B78     		ldrb	r3, [r3]
 2072 008e 013B     		sub	r3, r3, #1
 2073 0090 9A42     		cmp	r2, r3
 2074 0092 0BD1     		bne	.L131
1642:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1643:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[posPrev];
 2075              		.loc 1 1643 0
 2076 0094 1F23     		mov	r3, #31
 2077 0096 FB18     		add	r3, r7, r3
 2078 0098 1B78     		ldrb	r3, [r3]
 2079 009a BA69     		ldr	r2, [r7, #24]
 2080 009c D318     		add	r3, r2, r3
 2081 009e 1A78     		ldrb	r2, [r3]
 2082 00a0 3E4B     		ldr	r3, .L137+4
 2083 00a2 1A70     		strb	r2, [r3]
1644:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = 0u;
 2084              		.loc 1 1644 0
 2085 00a4 3D4B     		ldr	r3, .L137+4
 2086 00a6 0022     		mov	r2, #0
 2087 00a8 9A70     		strb	r2, [r3, #2]
 2088 00aa 0FE0     		b	.L130
 2089              	.L131:
1645:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1646:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 else                                /* Not first Not last */
1647:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1648:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[posPrev];
 2090              		.loc 1 1648 0
 2091 00ac 1F23     		mov	r3, #31
 2092 00ae FB18     		add	r3, r7, r3
 2093 00b0 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 67


 2094 00b2 BA69     		ldr	r2, [r7, #24]
 2095 00b4 D318     		add	r3, r2, r3
 2096 00b6 1A78     		ldrb	r2, [r3]
 2097 00b8 384B     		ldr	r3, .L137+4
 2098 00ba 1A70     		strb	r2, [r3]
1649:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[posNext];
 2099              		.loc 1 1649 0
 2100 00bc 1723     		mov	r3, #23
 2101 00be FB18     		add	r3, r7, r3
 2102 00c0 1B78     		ldrb	r3, [r3]
 2103 00c2 BA69     		ldr	r2, [r7, #24]
 2104 00c4 D318     		add	r3, r2, r3
 2105 00c6 1A78     		ldrb	r2, [r3]
 2106 00c8 344B     		ldr	r3, .L137+4
 2107 00ca 9A70     		strb	r2, [r3, #2]
 2108              	.L130:
1650:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1651:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u)||(CapSense_TOTAL_TOUCH_PADS_BASIC_C
1652:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1653:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1654:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1655:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1656:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1657:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Subtract noiseThreshold */
1658:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_centroid[CapSense_POS_PREV] > noiseThreshold)
 2109              		.loc 1 1658 0
 2110 00cc 334B     		ldr	r3, .L137+4
 2111 00ce 1B78     		ldrb	r3, [r3]
 2112 00d0 3022     		mov	r2, #48
 2113 00d2 BA18     		add	r2, r7, r2
 2114 00d4 1278     		ldrb	r2, [r2]
 2115 00d6 9A42     		cmp	r2, r3
 2116 00d8 09D2     		bcs	.L132
1659:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1660:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_PREV] -= noiseThreshold;
 2117              		.loc 1 1660 0
 2118 00da 304B     		ldr	r3, .L137+4
 2119 00dc 1A78     		ldrb	r2, [r3]
 2120 00de 3023     		mov	r3, #48
 2121 00e0 FB18     		add	r3, r7, r3
 2122 00e2 1B78     		ldrb	r3, [r3]
 2123 00e4 D31A     		sub	r3, r2, r3
 2124 00e6 DAB2     		uxtb	r2, r3
 2125 00e8 2C4B     		ldr	r3, .L137+4
 2126 00ea 1A70     		strb	r2, [r3]
 2127 00ec 02E0     		b	.L133
 2128              	.L132:
1661:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1662:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1663:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1664:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_PREV] = 0u;
 2129              		.loc 1 1664 0
 2130 00ee 2B4B     		ldr	r3, .L137+4
 2131 00f0 0022     		mov	r2, #0
 2132 00f2 1A70     		strb	r2, [r3]
 2133              	.L133:
1665:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 68


1666:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1667:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Maximum always greater than fingerThreshold, so greater than noiseThreshold */
1668:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_centroid[CapSense_POS] -= noiseThreshold;
 2134              		.loc 1 1668 0
 2135 00f4 294B     		ldr	r3, .L137+4
 2136 00f6 5A78     		ldrb	r2, [r3, #1]
 2137 00f8 3023     		mov	r3, #48
 2138 00fa FB18     		add	r3, r7, r3
 2139 00fc 1B78     		ldrb	r3, [r3]
 2140 00fe D31A     		sub	r3, r2, r3
 2141 0100 DAB2     		uxtb	r2, r3
 2142 0102 264B     		ldr	r3, .L137+4
 2143 0104 5A70     		strb	r2, [r3, #1]
1669:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1670:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Subtract noiseThreshold */
1671:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_centroid[CapSense_POS_NEXT] > noiseThreshold)
 2144              		.loc 1 1671 0
 2145 0106 254B     		ldr	r3, .L137+4
 2146 0108 9B78     		ldrb	r3, [r3, #2]
 2147 010a 3022     		mov	r2, #48
 2148 010c BA18     		add	r2, r7, r2
 2149 010e 1278     		ldrb	r2, [r2]
 2150 0110 9A42     		cmp	r2, r3
 2151 0112 09D2     		bcs	.L134
1672:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1673:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_NEXT] -= noiseThreshold;
 2152              		.loc 1 1673 0
 2153 0114 214B     		ldr	r3, .L137+4
 2154 0116 9A78     		ldrb	r2, [r3, #2]
 2155 0118 3023     		mov	r3, #48
 2156 011a FB18     		add	r3, r7, r3
 2157 011c 1B78     		ldrb	r3, [r3]
 2158 011e D31A     		sub	r3, r2, r3
 2159 0120 DAB2     		uxtb	r2, r3
 2160 0122 1E4B     		ldr	r3, .L137+4
 2161 0124 9A70     		strb	r2, [r3, #2]
 2162 0126 02E0     		b	.L135
 2163              	.L134:
1674:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1675:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1676:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1677:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_NEXT] = 0u;
 2164              		.loc 1 1677 0
 2165 0128 1C4B     		ldr	r3, .L137+4
 2166 012a 0022     		mov	r2, #0
 2167 012c 9A70     		strb	r2, [r3, #2]
 2168              	.L135:
1678:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1679:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1680:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1681:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Si+1 - Si-1 */
1682:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         numerator = (uint32) CapSense_centroid[CapSense_POS_NEXT] -
 2169              		.loc 1 1682 0
 2170 012e 1B4B     		ldr	r3, .L137+4
 2171 0130 9B78     		ldrb	r3, [r3, #2]
 2172 0132 1A1C     		mov	r2, r3
1683:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     (uint32) CapSense_centroid[CapSense_POS_PREV];
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 69


 2173              		.loc 1 1683 0
 2174 0134 194B     		ldr	r3, .L137+4
 2175 0136 1B78     		ldrb	r3, [r3]
1682:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     (uint32) CapSense_centroid[CapSense_POS_PREV];
 2176              		.loc 1 1682 0
 2177 0138 D31A     		sub	r3, r2, r3
 2178 013a 3B61     		str	r3, [r7, #16]
1684:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1685:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Si+1 + Si + Si-1 */
1686:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator = (int32) CapSense_centroid[CapSense_POS_PREV] + 
 2179              		.loc 1 1686 0
 2180 013c 174B     		ldr	r3, .L137+4
 2181 013e 1B78     		ldrb	r3, [r3]
 2182 0140 1A1C     		mov	r2, r3
1687:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS] + 
 2183              		.loc 1 1687 0
 2184 0142 164B     		ldr	r3, .L137+4
 2185 0144 5B78     		ldrb	r3, [r3, #1]
1686:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS] + 
 2186              		.loc 1 1686 0
 2187 0146 D318     		add	r3, r2, r3
1688:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS_NEXT];
 2188              		.loc 1 1688 0
 2189 0148 144A     		ldr	r2, .L137+4
 2190 014a 9278     		ldrb	r2, [r2, #2]
1686:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS] + 
 2191              		.loc 1 1686 0
 2192 014c 9B18     		add	r3, r3, r2
 2193 014e FB60     		str	r3, [r7, #12]
1689:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1690:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* (numerator/denominator) + maximum */
1691:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator = (((int32)(uint32)((uint32)numerator << 8u)/denominator) + (int32)(uint32)((ui
 2194              		.loc 1 1691 0
 2195 0150 3B69     		ldr	r3, [r7, #16]
 2196 0152 1B02     		lsl	r3, r3, #8
 2197 0154 181C     		mov	r0, r3
 2198 0156 F968     		ldr	r1, [r7, #12]
 2199 0158 FFF7FEFF 		bl	__aeabi_idiv
 2200 015c 031C     		mov	r3, r0
 2201 015e 1A1C     		mov	r2, r3
 2202 0160 FB1D     		add	r3, r7, #7
 2203 0162 1B78     		ldrb	r3, [r3]
 2204 0164 1B02     		lsl	r3, r3, #8
 2205 0166 D318     		add	r3, r2, r3
 2206 0168 FB60     		str	r3, [r7, #12]
1692:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1693:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if(CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1694:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Only required for RADIAL Slider */
1695:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(denominator < 0)
1696:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1697:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 denominator += (int32)((uint16)((uint16) count << 8u));
1698:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1699:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1700:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1701:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator *= (int16)resolution;
 2207              		.loc 1 1701 0
 2208 016a BB1C     		add	r3, r7, #2
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 70


 2209 016c 1B88     		ldrh	r3, [r3]
 2210 016e 1AB2     		sxth	r2, r3
 2211 0170 FB68     		ldr	r3, [r7, #12]
 2212 0172 5343     		mul	r3, r2
 2213 0174 FB60     		str	r3, [r7, #12]
1702:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1703:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Round result and put it to uint8 */
1704:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         position = ((uint8) HI16((uint32)denominator + CapSense_CENTROID_ROUND_VALUE));
 2214              		.loc 1 1704 0
 2215 0176 FB68     		ldr	r3, [r7, #12]
 2216 0178 FE22     		mov	r2, #254
 2217 017a D201     		lsl	r2, r2, #7
 2218 017c 9446     		mov	ip, r2
 2219 017e 6344     		add	r3, r3, ip
 2220 0180 1A0C     		lsr	r2, r3, #16
 2221 0182 0B23     		mov	r3, #11
 2222 0184 FB18     		add	r3, r7, r3
 2223 0186 1A70     		strb	r2, [r3]
1705:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1706:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
 2224              		.loc 1 1706 0
 2225 0188 0B23     		mov	r3, #11
 2226 018a FB18     		add	r3, r7, r3
 2227 018c 1B78     		ldrb	r3, [r3]
1707:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }    
 2228              		.loc 1 1707 0
 2229 018e 181C     		mov	r0, r3
 2230 0190 BD46     		mov	sp, r7
 2231 0192 08B0     		add	sp, sp, #32
 2232              		@ sp needed
 2233 0194 B0BD     		pop	{r4, r5, r7, pc}
 2234              	.L138:
 2235 0196 C046     		.align	2
 2236              	.L137:
 2237 0198 00000000 		.word	CapSense_sensorSignal
 2238 019c 24000000 		.word	CapSense_centroid.5431
 2239              		.cfi_endproc
 2240              	.LFE63:
 2241              		.size	CapSense_CalcCentroid, .-CapSense_CalcCentroid
 2242              		.section	.text.CapSense_GetCentroidPos,"ax",%progbits
 2243              		.align	2
 2244              		.global	CapSense_GetCentroidPos
 2245              		.code	16
 2246              		.thumb_func
 2247              		.type	CapSense_GetCentroidPos, %function
 2248              	CapSense_GetCentroidPos:
 2249              	.LFB64:
1708:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_CENTROIDS_BASIC_COUNT) */
1709:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1710:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1711:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u))
1712:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1713:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetCentroidPos
1714:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1715:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1716:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1717:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Checks the CapSense_Signal[ ] array for a centroid within
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 71


1718:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1719:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1720:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result if enabled.
1721:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1722:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1723:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number.
1724:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every linear slider widget there are defines in this format:
1725:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__LS           5
1726:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * 
1727:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1728:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the linear slider.
1729:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1730:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
1731:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
1732:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1733:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1734:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1735:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1736:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensors are active, the function returns 0xFFFF. If an error occurs during
1737:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  execution of the centroid/diplexing algorithm, the function returns 0xFFFF.
1738:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
1739:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1740:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1741:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Note:
1742:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1743:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1744:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1745:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  that noise will not generate a false centroid.
1746:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1747:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_GetCentroidPos(uint32 widget)
1748:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 2250              		.loc 1 1748 0
 2251              		.cfi_startproc
 2252 0000 90B5     		push	{r4, r7, lr}
 2253              		.cfi_def_cfa_offset 12
 2254              		.cfi_offset 4, -12
 2255              		.cfi_offset 7, -8
 2256              		.cfi_offset 14, -4
 2257 0002 89B0     		sub	sp, sp, #36
 2258              		.cfi_def_cfa_offset 48
 2259 0004 02AF     		add	r7, sp, #8
 2260              		.cfi_def_cfa 7, 40
 2261 0006 7860     		str	r0, [r7, #4]
1749:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1750:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             const uint8 *diplex;
1751:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1752:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 
1753:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1754:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posIndex;
1755:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
 2262              		.loc 1 1755 0
 2263 0008 1523     		mov	r3, #21
 2264 000a FB18     		add	r3, r7, r3
 2265 000c 6649     		ldr	r1, .L147
 2266 000e 7A68     		ldr	r2, [r7, #4]
 2267 0010 8A18     		add	r2, r1, r2
 2268 0012 1278     		ldrb	r2, [r2]
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 72


 2269 0014 1A70     		strb	r2, [r3]
1756:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];  
 2270              		.loc 1 1756 0
 2271 0016 1423     		mov	r3, #20
 2272 0018 FB18     		add	r3, r7, r3
 2273 001a 6449     		ldr	r1, .L147+4
 2274 001c 7A68     		ldr	r2, [r7, #4]
 2275 001e 8A18     		add	r2, r1, r2
 2276 0020 1278     		ldrb	r2, [r2]
 2277 0022 1A70     		strb	r2, [r3]
1757:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1758:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1759:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1760:.\Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1761:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 tempPos;
1762:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1763:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1764:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                */
1765:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1766:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum;
1767:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 position;
1768:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
 2278              		.loc 1 1768 0
 2279 0024 1323     		mov	r3, #19
 2280 0026 FB18     		add	r3, r7, r3
 2281 0028 0022     		mov	r2, #0
 2282 002a 1A70     		strb	r2, [r3]
1769:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
 2283              		.loc 1 1769 0
 2284 002c 1223     		mov	r3, #18
 2285 002e FB18     		add	r3, r7, r3
 2286 0030 0522     		mov	r2, #5
 2287 0032 1A70     		strb	r2, [r3]
1770:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         
1771:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1772:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(widget < CapSense_TOTAL_DIPLEXED_SLIDERS_COUNT)
1773:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1774:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 maximum = CapSense_diplexTable[widget];
1775:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 diplex = &CapSense_diplexTable[maximum];
1776:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1777:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1778:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1779:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 diplex = 0u;
1780:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1781:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1782:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1783:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		/* Find Maximum within centroid */      
1784:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#if (CapSense_IS_DIPLEX_SLIDER)        
1785:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget], diplex);
1786:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#else
1787:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget]);
 2288              		.loc 1 1787 0
 2289 0034 5E4A     		ldr	r2, .L147+8
 2290 0036 7B68     		ldr	r3, [r7, #4]
 2291 0038 D318     		add	r3, r2, r3
 2292 003a 1A78     		ldrb	r2, [r3]
 2293 003c 1123     		mov	r3, #17
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 73


 2294 003e FC18     		add	r4, r7, r3
 2295 0040 1323     		mov	r3, #19
 2296 0042 FB18     		add	r3, r7, r3
 2297 0044 1978     		ldrb	r1, [r3]
 2298 0046 1223     		mov	r3, #18
 2299 0048 FB18     		add	r3, r7, r3
 2300 004a 1B78     		ldrb	r3, [r3]
 2301 004c 081C     		mov	r0, r1
 2302 004e 191C     		mov	r1, r3
 2303 0050 FFF7FEFF 		bl	CapSense_FindMaximum
 2304 0054 031C     		mov	r3, r0
 2305 0056 2370     		strb	r3, [r4]
1788:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#endif /* (CapSense_IS_DIPLEX_SLIDER) */
1789:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1790:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (maximum != 0xFFu)
 2306              		.loc 1 1790 0
 2307 0058 1123     		mov	r3, #17
 2308 005a FB18     		add	r3, r7, r3
 2309 005c 1B78     		ldrb	r3, [r3]
 2310 005e FF2B     		cmp	r3, #255
 2311 0060 00D1     		bne	.LCB2019
 2312 0062 89E0     		b	.L140	@long jump
 2313              	.LCB2019:
1791:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1792:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Calculate centroid */
1793:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             position = (uint16) CapSense_CalcCentroid(maximum, 
 2314              		.loc 1 1793 0
 2315 0064 C823     		mov	r3, #200
 2316 0066 5C01     		lsl	r4, r3, #5
 2317 0068 524A     		ldr	r2, .L147+12
 2318 006a 7B68     		ldr	r3, [r7, #4]
 2319 006c D318     		add	r3, r2, r3
 2320 006e 1B78     		ldrb	r3, [r3]
 2321 0070 1122     		mov	r2, #17
 2322 0072 BA18     		add	r2, r7, r2
 2323 0074 1078     		ldrb	r0, [r2]
 2324 0076 1322     		mov	r2, #19
 2325 0078 BA18     		add	r2, r7, r2
 2326 007a 1178     		ldrb	r1, [r2]
 2327 007c 1222     		mov	r2, #18
 2328 007e BA18     		add	r2, r7, r2
 2329 0080 1278     		ldrb	r2, [r2]
 2330 0082 0093     		str	r3, [sp]
 2331 0084 231C     		mov	r3, r4
 2332 0086 FFF7FEFF 		bl	CapSense_CalcCentroid
 2333 008a 031C     		mov	r3, r0
 2334 008c 1A1C     		mov	r2, r3
 2335 008e 1623     		mov	r3, #22
 2336 0090 FB18     		add	r3, r7, r3
 2337 0092 1A80     		strh	r2, [r3]
1794:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                          offset, count, CapSense_centroidMult[widget], CapSense_noiseThreshold[widg
1795:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1796:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1797:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check if this linear slider has enabled filters */
1798:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
 2338              		.loc 1 1798 0
 2339 0094 1423     		mov	r3, #20
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 74


 2340 0096 FB18     		add	r3, r7, r3
 2341 0098 1B78     		ldrb	r3, [r3]
 2342 009a 1F22     		mov	r2, #31
 2343 009c 1340     		and	r3, r2
 2344 009e 00D1     		bne	.LCB2049
 2345 00a0 7BE0     		b	.L145	@long jump
 2346              	.LCB2049:
1799:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1800:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate position to store filters data */
1801:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
 2347              		.loc 1 1801 0
 2348 00a2 1023     		mov	r3, #16
 2349 00a4 FB18     		add	r3, r7, r3
 2350 00a6 1522     		mov	r2, #21
 2351 00a8 BA18     		add	r2, r7, r2
 2352 00aa 1278     		ldrb	r2, [r2]
 2353 00ac 0132     		add	r2, r2, #1
 2354 00ae 1A70     		strb	r2, [r3]
1802:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     
1803:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u == CapSense_posFiltersData[firstTimeIndex])
 2355              		.loc 1 1803 0
 2356 00b0 1523     		mov	r3, #21
 2357 00b2 FB18     		add	r3, r7, r3
 2358 00b4 1B78     		ldrb	r3, [r3]
 2359 00b6 3C4A     		ldr	r2, .L147
 2360 00b8 D35C     		ldrb	r3, [r2, r3]
 2361 00ba 002B     		cmp	r3, #0
 2362 00bc 25D1     		bne	.L142
1804:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1805:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Init filters */
1806:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[posIndex] = (uint8) position;
 2363              		.loc 1 1806 0
 2364 00be 1023     		mov	r3, #16
 2365 00c0 FB18     		add	r3, r7, r3
 2366 00c2 1B78     		ldrb	r3, [r3]
 2367 00c4 1622     		mov	r2, #22
 2368 00c6 BA18     		add	r2, r7, r2
 2369 00c8 1288     		ldrh	r2, [r2]
 2370 00ca D1B2     		uxtb	r1, r2
 2371 00cc 364A     		ldr	r2, .L147
 2372 00ce D154     		strb	r1, [r2, r3]
1807:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if ((0u != (CapSense_MEDIAN_FILTER & \
1808:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1809:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                              (0u != (CapSense_AVERAGING_FILTER & \
1810:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1811:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1812:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER)) || 
 2373              		.loc 1 1812 0
 2374 00d0 1423     		mov	r3, #20
 2375 00d2 FB18     		add	r3, r7, r3
 2376 00d4 1B78     		ldrb	r3, [r3]
 2377 00d6 0122     		mov	r2, #1
 2378 00d8 1340     		and	r3, r2
 2379 00da 05D1     		bne	.L143
1813:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
 2380              		.loc 1 1813 0 discriminator 1
 2381 00dc 1423     		mov	r3, #20
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 75


 2382 00de FB18     		add	r3, r7, r3
 2383 00e0 1B78     		ldrb	r3, [r3]
 2384 00e2 0222     		mov	r2, #2
 2385 00e4 1340     		and	r3, r2
1812:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
 2386              		.loc 1 1812 0 discriminator 1
 2387 00e6 09D0     		beq	.L144
 2388              	.L143:
1814:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1815:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = (uint8) position;
 2389              		.loc 1 1815 0
 2390 00e8 1023     		mov	r3, #16
 2391 00ea FB18     		add	r3, r7, r3
 2392 00ec 1B78     		ldrb	r3, [r3]
 2393 00ee 0133     		add	r3, r3, #1
 2394 00f0 1622     		mov	r2, #22
 2395 00f2 BA18     		add	r2, r7, r2
 2396 00f4 1288     		ldrh	r2, [r2]
 2397 00f6 D1B2     		uxtb	r1, r2
 2398 00f8 2B4A     		ldr	r2, .L147
 2399 00fa D154     		strb	r1, [r2, r3]
 2400              	.L144:
1816:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1817:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
1818:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1819:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *   (0u != (CapSense_AVERAGING_FILTER & \
1820:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1821:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1822:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         
1823:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[firstTimeIndex] = 1u;
 2401              		.loc 1 1823 0
 2402 00fc 1523     		mov	r3, #21
 2403 00fe FB18     		add	r3, r7, r3
 2404 0100 1B78     		ldrb	r3, [r3]
 2405 0102 294A     		ldr	r2, .L147
 2406 0104 0121     		mov	r1, #1
 2407 0106 D154     		strb	r1, [r2, r3]
 2408 0108 47E0     		b	.L145
 2409              	.L142:
1824:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1825:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
1826:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1827:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Do filtering */
1828:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1829:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
1830:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1831:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1832:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_MedianFilter(position,
1833:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1834:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1835:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] =
1836:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
1837:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1838:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1839:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /*(0u != (CapSense_MEDIAN_FILTER &
1840:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *         CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1841:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 76


1842:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1843:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if(0u!=(CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1844:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) 
 2410              		.loc 1 1844 0
 2411 010a 1423     		mov	r3, #20
 2412 010c FB18     		add	r3, r7, r3
 2413 010e 1B78     		ldrb	r3, [r3]
 2414 0110 0222     		mov	r2, #2
 2415 0112 1340     		and	r3, r2
 2416 0114 41D0     		beq	.L145
1845:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1846:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
 2417              		.loc 1 1846 0
 2418 0116 0F23     		mov	r3, #15
 2419 0118 FB18     		add	r3, r7, r3
 2420 011a 1622     		mov	r2, #22
 2421 011c BA18     		add	r2, r7, r2
 2422 011e 1288     		ldrh	r2, [r2]
 2423 0120 1A70     		strb	r2, [r3]
1847:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position,
1848:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
 2424              		.loc 1 1848 0
 2425 0122 1023     		mov	r3, #16
 2426 0124 FB18     		add	r3, r7, r3
 2427 0126 1B78     		ldrb	r3, [r3]
 2428 0128 1F4A     		ldr	r2, .L147
 2429 012a D35C     		ldrb	r3, [r2, r3]
1847:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position,
 2430              		.loc 1 1847 0
 2431 012c 99B2     		uxth	r1, r3
1849:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
 2432              		.loc 1 1849 0
 2433 012e 1023     		mov	r3, #16
 2434 0130 FB18     		add	r3, r7, r3
 2435 0132 1B78     		ldrb	r3, [r3]
 2436 0134 0133     		add	r3, r3, #1
 2437 0136 1C4A     		ldr	r2, .L147
 2438 0138 D35C     		ldrb	r3, [r2, r3]
1847:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position,
 2439              		.loc 1 1847 0
 2440 013a 9AB2     		uxth	r2, r3
 2441 013c 1623     		mov	r3, #22
 2442 013e FC18     		add	r4, r7, r3
 2443 0140 1623     		mov	r3, #22
 2444 0142 FB18     		add	r3, r7, r3
 2445 0144 1B88     		ldrh	r3, [r3]
 2446 0146 181C     		mov	r0, r3
 2447 0148 FFF7FEFF 		bl	CapSense_AveragingFilter
 2448 014c 031C     		mov	r3, r0
 2449 014e 2380     		strh	r3, [r4]
1850:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex+1u]=CapSense_posFiltersData[posInd
 2450              		.loc 1 1850 0
 2451 0150 1023     		mov	r3, #16
 2452 0152 FB18     		add	r3, r7, r3
 2453 0154 1B78     		ldrb	r3, [r3]
 2454 0156 0133     		add	r3, r3, #1
 2455 0158 1022     		mov	r2, #16
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 77


 2456 015a BA18     		add	r2, r7, r2
 2457 015c 1278     		ldrb	r2, [r2]
 2458 015e 1249     		ldr	r1, .L147
 2459 0160 895C     		ldrb	r1, [r1, r2]
 2460 0162 114A     		ldr	r2, .L147
 2461 0164 D154     		strb	r1, [r2, r3]
1851:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
 2462              		.loc 1 1851 0
 2463 0166 1023     		mov	r3, #16
 2464 0168 FB18     		add	r3, r7, r3
 2465 016a 1B78     		ldrb	r3, [r3]
 2466 016c 0E4A     		ldr	r2, .L147
 2467 016e 0F21     		mov	r1, #15
 2468 0170 7918     		add	r1, r7, r1
 2469 0172 0978     		ldrb	r1, [r1]
 2470 0174 D154     		strb	r1, [r2, r3]
 2471 0176 10E0     		b	.L145
 2472              	.L140:
1852:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1853:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_AVERAGING_FILTER & \
1854:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1855:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1856:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1857:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR2_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK
1858:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR2_FILTER)) 
1859:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1860:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR2Filter(position,
1861:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1862:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1863:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1864:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR2_FILTER & \
1865:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1866:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1867:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1868:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR4_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK
1869:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
1870:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1871:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR4Filter(position,
1872:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1873:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1874:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }                                
1875:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR4_FILTER & \
1876:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1877:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1878:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1879:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_JITTER_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1880:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
1881:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1882:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_JitterFilter(position,
1883:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1884:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1885:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1886:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_JITTER_FILTER & \
1887:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1888:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1889:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1890:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 78


1891:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1892:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1893:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1894:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1895:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1896:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Maximum wasn't found */
1897:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             position = 0xFFFFu;
 2473              		.loc 1 1897 0
 2474 0178 1623     		mov	r3, #22
 2475 017a FB18     		add	r3, r7, r3
 2476 017c 0122     		mov	r2, #1
 2477 017e 5242     		neg	r2, r2
 2478 0180 1A80     		strh	r2, [r3]
1898:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1899:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if(0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1900:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
1901:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
 2479              		.loc 1 1901 0
 2480 0182 1423     		mov	r3, #20
 2481 0184 FB18     		add	r3, r7, r3
 2482 0186 1B78     		ldrb	r3, [r3]
 2483 0188 1F22     		mov	r2, #31
 2484 018a 1340     		and	r3, r2
 2485 018c 05D0     		beq	.L145
1902:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1903:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
 2486              		.loc 1 1903 0
 2487 018e 1523     		mov	r3, #21
 2488 0190 FB18     		add	r3, r7, r3
 2489 0192 1B78     		ldrb	r3, [r3]
 2490 0194 044A     		ldr	r2, .L147
 2491 0196 0021     		mov	r1, #0
 2492 0198 D154     		strb	r1, [r2, r3]
 2493              	.L145:
1904:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1905:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1906:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1907:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1908:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1909:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
 2494              		.loc 1 1909 0
 2495 019a 1623     		mov	r3, #22
 2496 019c FB18     		add	r3, r7, r3
 2497 019e 1B88     		ldrh	r3, [r3]
1910:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 2498              		.loc 1 1910 0
 2499 01a0 181C     		mov	r0, r3
 2500 01a2 BD46     		mov	sp, r7
 2501 01a4 07B0     		add	sp, sp, #28
 2502              		@ sp needed
 2503 01a6 90BD     		pop	{r4, r7, pc}
 2504              	.L148:
 2505              		.align	2
 2506              	.L147:
 2507 01a8 10000000 		.word	CapSense_posFiltersData
 2508 01ac 0C000000 		.word	CapSense_posFiltersMask
 2509 01b0 00000000 		.word	CapSense_fingerThreshold
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 79


 2510 01b4 00000000 		.word	CapSense_noiseThreshold
 2511              		.cfi_endproc
 2512              	.LFE64:
 2513              		.size	CapSense_GetCentroidPos, .-CapSense_GetCentroidPos
 2514              		.section	.text.CapSense_GetRadialCentroidPos,"ax",%progbits
 2515              		.align	2
 2516              		.global	CapSense_GetRadialCentroidPos
 2517              		.code	16
 2518              		.thumb_func
 2519              		.type	CapSense_GetRadialCentroidPos, %function
 2520              	CapSense_GetRadialCentroidPos:
 2521              	.LFB65:
1911:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
1912:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1913:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1914:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u))
1915:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1916:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetRadialCentroidPos
1917:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1918:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1919:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1920:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Checks the CapSense_Signal[ ] array for a centroid within
1921:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1922:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1923:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result if enabled.
1924:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1925:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1926:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number.
1927:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every radial slider widget there are defines in this format:
1928:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__RS           5
1929:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * 
1930:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1931:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the radial slider.
1932:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1933:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
1934:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
1935:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1936:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1937:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1938:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1939:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensors are active, the function returns 0xFFFF.
1940:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
1941:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1942:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1943:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Note:
1944:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1945:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1946:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so 
1947:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  that noise will not generate a false centroid.
1948:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1949:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1950:.\Generated_Source\PSoC4/CapSense_CSHL.c ****      uint16 CapSense_GetRadialCentroidPos(uint32 widget)
1951:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 2522              		.loc 1 1951 0
 2523              		.cfi_startproc
 2524 0000 90B5     		push	{r4, r7, lr}
 2525              		.cfi_def_cfa_offset 12
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 80


 2526              		.cfi_offset 4, -12
 2527              		.cfi_offset 7, -8
 2528              		.cfi_offset 14, -4
 2529 0002 87B0     		sub	sp, sp, #28
 2530              		.cfi_def_cfa_offset 40
 2531 0004 02AF     		add	r7, sp, #8
 2532              		.cfi_def_cfa 7, 32
 2533 0006 7860     		str	r0, [r7, #4]
1952:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
1953:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posIndex;
1954:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
1955:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget]; 
1956:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1957:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1958:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1959:.\Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1960:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 tempPos;
1961:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1962:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1963:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                */
1964:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1965:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum;
1966:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 position;
1967:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
 2534              		.loc 1 1967 0
 2535 0008 0D23     		mov	r3, #13
 2536 000a FB18     		add	r3, r7, r3
 2537 000c 0022     		mov	r2, #0
 2538 000e 1A70     		strb	r2, [r3]
1968:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
 2539              		.loc 1 1968 0
 2540 0010 0C23     		mov	r3, #12
 2541 0012 FB18     		add	r3, r7, r3
 2542 0014 0522     		mov	r2, #5
 2543 0016 1A70     		strb	r2, [r3]
1969:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1970:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		/* Find Maximum within centroid */      
1971:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#if (CapSense_IS_DIPLEX_SLIDER)        
1972:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget], 0u);
1973:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#else
1974:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget]);
 2544              		.loc 1 1974 0
 2545 0018 1D4A     		ldr	r2, .L153
 2546 001a 7B68     		ldr	r3, [r7, #4]
 2547 001c D318     		add	r3, r2, r3
 2548 001e 1A78     		ldrb	r2, [r3]
 2549 0020 0B23     		mov	r3, #11
 2550 0022 FC18     		add	r4, r7, r3
 2551 0024 0D23     		mov	r3, #13
 2552 0026 FB18     		add	r3, r7, r3
 2553 0028 1978     		ldrb	r1, [r3]
 2554 002a 0C23     		mov	r3, #12
 2555 002c FB18     		add	r3, r7, r3
 2556 002e 1B78     		ldrb	r3, [r3]
 2557 0030 081C     		mov	r0, r1
 2558 0032 191C     		mov	r1, r3
 2559 0034 FFF7FEFF 		bl	CapSense_FindMaximum
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 81


 2560 0038 031C     		mov	r3, r0
 2561 003a 2370     		strb	r3, [r4]
1975:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#endif /* (CapSense_IS_DIPLEX_SLIDER) */
1976:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1977:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (maximum != CapSense_MAXIMUM_CENTROID)
 2562              		.loc 1 1977 0
 2563 003c 0B23     		mov	r3, #11
 2564 003e FB18     		add	r3, r7, r3
 2565 0040 1B78     		ldrb	r3, [r3]
 2566 0042 FF2B     		cmp	r3, #255
 2567 0044 18D0     		beq	.L150
1978:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1979:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Calculate centroid */
1980:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             position = (uint16) CapSense_CalcCentroid(maximum, 
 2568              		.loc 1 1980 0
 2569 0046 C823     		mov	r3, #200
 2570 0048 5C01     		lsl	r4, r3, #5
 2571 004a 124A     		ldr	r2, .L153+4
 2572 004c 7B68     		ldr	r3, [r7, #4]
 2573 004e D318     		add	r3, r2, r3
 2574 0050 1B78     		ldrb	r3, [r3]
 2575 0052 0B22     		mov	r2, #11
 2576 0054 BA18     		add	r2, r7, r2
 2577 0056 1078     		ldrb	r0, [r2]
 2578 0058 0D22     		mov	r2, #13
 2579 005a BA18     		add	r2, r7, r2
 2580 005c 1178     		ldrb	r1, [r2]
 2581 005e 0C22     		mov	r2, #12
 2582 0060 BA18     		add	r2, r7, r2
 2583 0062 1278     		ldrb	r2, [r2]
 2584 0064 0093     		str	r3, [sp]
 2585 0066 231C     		mov	r3, r4
 2586 0068 FFF7FEFF 		bl	CapSense_CalcCentroid
 2587 006c 031C     		mov	r3, r0
 2588 006e 1A1C     		mov	r2, r3
 2589 0070 0E23     		mov	r3, #14
 2590 0072 FB18     		add	r3, r7, r3
 2591 0074 1A80     		strh	r2, [r3]
 2592 0076 04E0     		b	.L151
 2593              	.L150:
1981:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                          offset, count, CapSense_centroidMult[widget], CapSense_noiseThreshold[widg
1982:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1983:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
1984:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check if this Radial slider has enabled filters */
1985:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1986:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1987:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate position to store filters data */
1988:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1989:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     
1990:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u == CapSense_posFiltersData[firstTimeIndex])
1991:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1992:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Init filters */
1993:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[posIndex] = (uint8) position;
1994:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if ((0u != (CapSense_MEDIAN_FILTER & \
1995:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1996:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                              (0u != (CapSense_AVERAGING_FILTER & \
1997:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 82


1998:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1999:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))  || 
2000:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
2001:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2002:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = (uint8) position;
2003:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2004:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
2005:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
2006:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *   (0u != (CapSense_AVERAGING_FILTER & \
2007:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
2008:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2009:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         
2010:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[firstTimeIndex] = 1u;
2011:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2012:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
2013:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
2014:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Do filtering */
2015:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MA
2016:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
2017:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2018:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
2019:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_MedianFilter(position,
2020:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                         CapSense_posFiltersData[pos
2021:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                         CapSense_posFiltersData[pos
2022:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = 
2023:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                               CapSense_posFiltersDa
2024:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
2025:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2026:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_MEDIAN_FILTER & 
2027:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2028:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2029:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2030:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_AVERAGING_FILTER & \
2031:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2032:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
2033:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2034:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
2035:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position, 
2036:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
2037:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
2038:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex+1u]= CapSense_posFiltersData[posIn
2039:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
2040:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2041:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_AVERAGING_FILTER & \
2042:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2043:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2044:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2045:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR2_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK
2046:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
2047:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2048:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR2Filter(position,
2049:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2050:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2051:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2052:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR2_FILTER & 
2053:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2054:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 83


2055:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2056:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR4_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK
2057:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
2058:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2059:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR4Filter(position,
2060:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2061:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2062:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2063:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR4_FILTER & 
2064:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2065:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2066:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2067:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_JITTER_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MA
2068:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
2069:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2070:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_JitterFilter(position, 
2071:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                          CapSense_posFiltersData[po
2072:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2073:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2074:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_JITTER_FILTER &
2075:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2076:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2077:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2078:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2079:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
2080:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2081:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2082:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
2083:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2084:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Maximum was not found */
2085:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             position = 0xFFFFu;
 2594              		.loc 1 2085 0
 2595 0078 0E23     		mov	r3, #14
 2596 007a FB18     		add	r3, r7, r3
 2597 007c 0122     		mov	r2, #1
 2598 007e 5242     		neg	r2, r2
 2599 0080 1A80     		strh	r2, [r3]
 2600              	.L151:
2086:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2087:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
2088:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
2089:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if((posFiltersMask & CapSense_ANY_POS_FILTER) != 0u)
2090:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2091:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
2092:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2093:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
2094:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2095:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2096:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
 2601              		.loc 1 2096 0
 2602 0082 0E23     		mov	r3, #14
 2603 0084 FB18     		add	r3, r7, r3
 2604 0086 1B88     		ldrh	r3, [r3]
2097:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 2605              		.loc 1 2097 0
 2606 0088 181C     		mov	r0, r3
 2607 008a BD46     		mov	sp, r7
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 84


 2608 008c 05B0     		add	sp, sp, #20
 2609              		@ sp needed
 2610 008e 90BD     		pop	{r4, r7, pc}
 2611              	.L154:
 2612              		.align	2
 2613              	.L153:
 2614 0090 00000000 		.word	CapSense_fingerThreshold
 2615 0094 00000000 		.word	CapSense_noiseThreshold
 2616              		.cfi_endproc
 2617              	.LFE65:
 2618              		.size	CapSense_GetRadialCentroidPos, .-CapSense_GetRadialCentroidPos
 2619              		.section	.text.CapSense_MedianFilter,"ax",%progbits
 2620              		.align	2
 2621              		.global	CapSense_MedianFilter
 2622              		.code	16
 2623              		.thumb_func
 2624              		.type	CapSense_MedianFilter, %function
 2625              	CapSense_MedianFilter:
 2626              	.LFB66:
2098:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
2099:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2100:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2101:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u)
2102:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2103:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetTouchCentroidPos
2104:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2105:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2106:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2107:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If a finger is present on a touchpad, this function calculates the X and Y
2108:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  position of the finger by calculating the centroids within touchpad specified
2109:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  range. The X and Y positions are calculated according to the API resolutions set in the
2110:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense customizer. Returns 1 if a finger is on the touchpad.
2111:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The position filter is applied to the result if enabled.
2112:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This function is available only if a touch pad is defined by the CapSense
2113:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  customizer.
2114:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2115:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2116:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number. 
2117:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every touchpad widget there are defines in this format:
2118:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__TP            5
2119:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2120:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos:     Pointer to the array of two uint16 elements, where result
2121:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result of calculation of X and Y position are stored.
2122:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos[0u]  - position of X
2123:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos[1u]  - position of Y
2124:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2125:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2126:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a 1 if a finger is on the touch pad, 0 - if not.
2127:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2128:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2129:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
2130:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2131:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2132:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *   There are no checks of the widget type argument provided to this function.
2133:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *   The unproper widget type provided will cause unexpected position
2134:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *   calculations.
2135:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 85


2136:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2137:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 CapSense_GetTouchCentroidPos(uint32 widget, uint16* pos)
2138:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2139:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2140:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posXIndex;
2141:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posYIndex;
2142:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
2143:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];
2144:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2145:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2146:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2147:.\Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2148:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint16 tempPos;
2149:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2150:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2151:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                */
2152:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2153:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 MaxX;
2154:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 MaxY;
2155:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 posX;
2156:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 posY;
2157:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 touch = 0u;
2158:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
2159:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
2160:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2161:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Find Maximum within X centroid */
2162:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
2163:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             MaxX = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget], 0u);
2164:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
2165:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             MaxX = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget]);
2166:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
2167:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2168:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (MaxX != CapSense_MAXIMUM_CENTROID)
2169:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2170:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             offset = CapSense_rawDataIndex[widget + 1u];
2171:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             count = CapSense_numberOfSensors[widget + 1u];
2172:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2173:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find Maximum within Y centroid */
2174:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_IS_DIPLEX_SLIDER)
2175:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 MaxY = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget + 1u], 0
2176:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #else
2177:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 MaxY = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget + 1u]);
2178:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_IS_DIPLEX_SLIDER) */
2179:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2180:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if (MaxY != CapSense_MAXIMUM_CENTROID)
2181:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2182:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* X and Y maximums are found = true touch */
2183:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 touch = 1u;
2184:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 
2185:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Calculate Y centroid */
2186:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 posY = CapSense_CalcCentroid(MaxY, offset, count, 
2187:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_centroidMult[widget + 1u], CapSense_noiseThreshold[widget + 1u
2188:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 
2189:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Calculate X centroid */
2190:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 offset = CapSense_rawDataIndex[widget];
2191:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 count = CapSense_numberOfSensors[widget];
2192:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 86


2193:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 posX = CapSense_CalcCentroid(MaxX, offset, count, 
2194:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_centroidMult[widget],CapSense_noiseThreshold[widget]);
2195:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
2196:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2197:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Check if this TP has enabled filters */
2198:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
2199:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
2200:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Calculate position to store filters data */
2201:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posXIndex  = firstTimeIndex + 1u;
2202:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posYIndex  = CapSense_posFiltersData[widget + 1u];
2203:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         
2204:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         if (0u == CapSense_posFiltersData[firstTimeIndex])
2205:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
2206:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Init filters */
2207:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[posXIndex] = posX;
2208:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[posYIndex] = posY;
2209:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2210:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if((0u != (CapSense_MEDIAN_FILTER & \
2211:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_TOUCH_PADS_POS_FILTERS_MASK))|| \
2212:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 (0u != (CapSense_AVERAGING_FILTER & \
2213:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2214:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2215:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER)) || 
2216:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
2217:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2218:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] = posX;
2219:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] = posY;
2220:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2221:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
2222:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2223:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *    (0u != (CapSense_AVERAGING_FILTER & \
2224:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *            CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2225:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2226:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             
2227:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[firstTimeIndex] = 1u;
2228:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
2229:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         else
2230:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
2231:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Do filtering */
2232:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MA
2233:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
2234:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2235:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posX;
2236:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_MedianFilter(posX,
2237:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posXI
2238:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posXI
2239:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] = 
2240:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2241:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = tempPos;
2242:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     
2243:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posY;
2244:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_MedianFilter(posY,
2245:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posY
2246:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posY
2247:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] = 
2248:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2249:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = tempPos;
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 87


2250:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2251:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 
2252:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_MEDIAN_FILTER & \
2253:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *          CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2254:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2255:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2256:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if(0u !=(CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_M
2257:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
2258:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2259:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posX;
2260:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_AveragingFilter(posX,
2261:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posX
2262:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posX
2263:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] = 
2264:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2265:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = tempPos;
2266:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     
2267:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posY;
2268:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_AveragingFilter(posY, 
2269:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posYI
2270:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posYI
2271:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] = 
2272:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2273:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = tempPos;
2274:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2275:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2276:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_AVERAGING_FILTER & \
2277:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2278:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2279:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2280:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_IIR2_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK
2281:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
2282:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2283:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_IIR2Filter(posX, 
2284:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                            CapSense_posFiltersData[
2285:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = posX;
2286:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     
2287:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_IIR2Filter(posY, 
2288:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2289:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = posY;
2290:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2291:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 
2292:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_IIR2_FILTER & \
2293:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *          CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2294:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2295:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2296:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_IIR4_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK
2297:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
2298:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2299:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_IIR4Filter((uint16)posX,
2300:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2301:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = posX;
2302:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2303:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_IIR4Filter((uint16)posY,
2304:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2305:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = posY;
2306:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 88


2307:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 
2308:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_IIR4_FILTER & \
2309:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2310:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2311:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2312:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_JITTER_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MA
2313:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
2314:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     {
2315:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         posX = (uint8) CapSense_JitterFilter(posX, 
2316:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2317:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_posFiltersData[posXIndex] = posX;
2318:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         
2319:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         posY = (uint8) CapSense_JitterFilter(posY, 
2320:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2321:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_posFiltersData[posYIndex] = posY;
2322:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     }
2323:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_JITTER_FILTER & \
2324:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2325:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2326:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
2327:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2328:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2329:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2330:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Save positions */
2331:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[0u] = posX;
2332:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[1u] = posY;
2333:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2334:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2335:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2336:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2337:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(touch == 0u)
2338:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2339:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
2340:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if ((posFiltersMask & CapSense_ANY_POS_FILTER) != 0u)
2341:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2342:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
2343:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2344:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2345:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2346:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2347:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (touch);
2348:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2349:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u) */
2350:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2351:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2352:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
2353:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_MEDIAN_FILTER)) || \
2354:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       ((CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)) )
2355:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2356:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_MedianFilter
2357:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2358:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2359:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2360:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Median filter function. 
2361:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The median filter looks at the three most recent samples and reports the 
2362:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  median value.
2363:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 89


2364:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2365:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2366:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2367:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x3:  Before previous value.
2368:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2369:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2370:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2371:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2372:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2373:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
2374:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2375:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2376:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2377:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2378:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2379:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_MedianFilter(uint16 x1, uint16 x2, uint16 x3)
2380:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 2627              		.loc 1 2380 0
 2628              		.cfi_startproc
 2629 0000 90B5     		push	{r4, r7, lr}
 2630              		.cfi_def_cfa_offset 12
 2631              		.cfi_offset 4, -12
 2632              		.cfi_offset 7, -8
 2633              		.cfi_offset 14, -4
 2634 0002 85B0     		sub	sp, sp, #20
 2635              		.cfi_def_cfa_offset 32
 2636 0004 00AF     		add	r7, sp, #0
 2637              		.cfi_def_cfa_register 7
 2638 0006 041C     		mov	r4, r0
 2639 0008 081C     		mov	r0, r1
 2640 000a 111C     		mov	r1, r2
 2641 000c BB1D     		add	r3, r7, #6
 2642 000e 221C     		add	r2, r4, #0
 2643 0010 1A80     		strh	r2, [r3]
 2644 0012 3B1D     		add	r3, r7, #4
 2645 0014 021C     		add	r2, r0, #0
 2646 0016 1A80     		strh	r2, [r3]
 2647 0018 BB1C     		add	r3, r7, #2
 2648 001a 0A1C     		add	r2, r1, #0
 2649 001c 1A80     		strh	r2, [r3]
2381:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 tmp;
2382:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2383:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x1 > x2)
 2650              		.loc 1 2383 0
 2651 001e BA1D     		add	r2, r7, #6
 2652 0020 3B1D     		add	r3, r7, #4
 2653 0022 1288     		ldrh	r2, [r2]
 2654 0024 1B88     		ldrh	r3, [r3]
 2655 0026 9A42     		cmp	r2, r3
 2656 0028 0DD9     		bls	.L156
2384:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2385:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             tmp = x2;
 2657              		.loc 1 2385 0
 2658 002a 0E23     		mov	r3, #14
 2659 002c FB18     		add	r3, r7, r3
 2660 002e 3A1D     		add	r2, r7, #4
 2661 0030 1288     		ldrh	r2, [r2]
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 90


 2662 0032 1A80     		strh	r2, [r3]
2386:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             x2 = x1;
 2663              		.loc 1 2386 0
 2664 0034 3B1D     		add	r3, r7, #4
 2665 0036 BA1D     		add	r2, r7, #6
 2666 0038 1288     		ldrh	r2, [r2]
 2667 003a 1A80     		strh	r2, [r3]
2387:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             x1 = tmp;
 2668              		.loc 1 2387 0
 2669 003c BB1D     		add	r3, r7, #6
 2670 003e 0E22     		mov	r2, #14
 2671 0040 BA18     		add	r2, r7, r2
 2672 0042 1288     		ldrh	r2, [r2]
 2673 0044 1A80     		strh	r2, [r3]
 2674              	.L156:
2388:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2389:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2390:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x2 > x3)
 2675              		.loc 1 2390 0
 2676 0046 3A1D     		add	r2, r7, #4
 2677 0048 BB1C     		add	r3, r7, #2
 2678 004a 1288     		ldrh	r2, [r2]
 2679 004c 1B88     		ldrh	r3, [r3]
 2680 004e 9A42     		cmp	r2, r3
 2681 0050 03D9     		bls	.L157
2391:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2392:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             x2 = x3;
 2682              		.loc 1 2392 0
 2683 0052 3B1D     		add	r3, r7, #4
 2684 0054 BA1C     		add	r2, r7, #2
 2685 0056 1288     		ldrh	r2, [r2]
 2686 0058 1A80     		strh	r2, [r3]
 2687              	.L157:
2393:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2394:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2395:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((x1 > x2) ? x1 : x2);
 2688              		.loc 1 2395 0
 2689 005a 3B1D     		add	r3, r7, #4
 2690 005c BA1D     		add	r2, r7, #6
 2691 005e 1088     		ldrh	r0, [r2]
 2692 0060 1B88     		ldrh	r3, [r3]
 2693 0062 99B2     		uxth	r1, r3
 2694 0064 82B2     		uxth	r2, r0
 2695 0066 9142     		cmp	r1, r2
 2696 0068 00D2     		bcs	.L158
 2697 006a 031C     		add	r3, r0, #0
 2698              	.L158:
 2699 006c 9BB2     		uxth	r3, r3
2396:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 2700              		.loc 1 2396 0
 2701 006e 181C     		mov	r0, r3
 2702 0070 BD46     		mov	sp, r7
 2703 0072 05B0     		add	sp, sp, #20
 2704              		@ sp needed
 2705 0074 90BD     		pop	{r4, r7, pc}
 2706              		.cfi_endproc
 2707              	.LFE66:
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 91


 2708              		.size	CapSense_MedianFilter, .-CapSense_MedianFilter
 2709              		.global	__aeabi_uidiv
 2710 0076 C046     		.section	.text.CapSense_AveragingFilter,"ax",%progbits
 2711              		.align	2
 2712              		.global	CapSense_AveragingFilter
 2713              		.code	16
 2714              		.thumb_func
 2715              		.type	CapSense_AveragingFilter, %function
 2716              	CapSense_AveragingFilter:
 2717              	.LFB67:
2397:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
2398:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_MEDIAN_FILTER)) || \
2399:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       ((CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)) ) */
2400:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2401:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2402:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)) || \
2403:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_AVERAGING_FILTER)) )
2404:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2405:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_AveragingFilter
2406:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2407:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2408:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2409:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Averaging filter function.
2410:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The averaging filter looks at the three most recent samples of a position and
2411:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  reports the averaging value.
2412:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2413:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2414:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2415:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2416:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x3:  Before previous value.
2417:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2418:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2419:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2420:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2421:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2422:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
2423:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2424:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2425:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2426:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2427:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2428:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_AveragingFilter(uint16 x1, uint16 x2, uint16 x3)
2429:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 2718              		.loc 1 2429 0
 2719              		.cfi_startproc
 2720 0000 90B5     		push	{r4, r7, lr}
 2721              		.cfi_def_cfa_offset 12
 2722              		.cfi_offset 4, -12
 2723              		.cfi_offset 7, -8
 2724              		.cfi_offset 14, -4
 2725 0002 85B0     		sub	sp, sp, #20
 2726              		.cfi_def_cfa_offset 32
 2727 0004 00AF     		add	r7, sp, #0
 2728              		.cfi_def_cfa_register 7
 2729 0006 041C     		mov	r4, r0
 2730 0008 081C     		mov	r0, r1
 2731 000a 111C     		mov	r1, r2
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 92


 2732 000c BB1D     		add	r3, r7, #6
 2733 000e 221C     		add	r2, r4, #0
 2734 0010 1A80     		strh	r2, [r3]
 2735 0012 3B1D     		add	r3, r7, #4
 2736 0014 021C     		add	r2, r0, #0
 2737 0016 1A80     		strh	r2, [r3]
 2738 0018 BB1C     		add	r3, r7, #2
 2739 001a 0A1C     		add	r2, r1, #0
 2740 001c 1A80     		strh	r2, [r3]
2430:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp = ((uint32)x1 + (uint32)x2 + (uint32)x3) / 3u;
 2741              		.loc 1 2430 0
 2742 001e BB1D     		add	r3, r7, #6
 2743 0020 1A88     		ldrh	r2, [r3]
 2744 0022 3B1D     		add	r3, r7, #4
 2745 0024 1B88     		ldrh	r3, [r3]
 2746 0026 D218     		add	r2, r2, r3
 2747 0028 BB1C     		add	r3, r7, #2
 2748 002a 1B88     		ldrh	r3, [r3]
 2749 002c D318     		add	r3, r2, r3
 2750 002e 181C     		mov	r0, r3
 2751 0030 0321     		mov	r1, #3
 2752 0032 FFF7FEFF 		bl	__aeabi_uidiv
 2753 0036 031C     		mov	r3, r0
 2754 0038 FB60     		str	r3, [r7, #12]
2431:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2432:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
 2755              		.loc 1 2432 0
 2756 003a FB68     		ldr	r3, [r7, #12]
 2757 003c 9BB2     		uxth	r3, r3
2433:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 2758              		.loc 1 2433 0
 2759 003e 181C     		mov	r0, r3
 2760 0040 BD46     		mov	sp, r7
 2761 0042 05B0     		add	sp, sp, #20
 2762              		@ sp needed
 2763 0044 90BD     		pop	{r4, r7, pc}
 2764              		.cfi_endproc
 2765              	.LFE67:
 2766              		.size	CapSense_AveragingFilter, .-CapSense_AveragingFilter
 2767 0046 C046     		.section	.text.CapSense_IIR4Filter,"ax",%progbits
 2768              		.align	2
 2769              		.global	CapSense_IIR4Filter
 2770              		.code	16
 2771              		.thumb_func
 2772              		.type	CapSense_IIR4Filter, %function
 2773              	CapSense_IIR4Filter:
 2774              	.LFB68:
2434:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) || \
2435:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_AVERAGING_FILTER) ) */
2436:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2437:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2438:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)) || \
2439:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR2_FILTER)) )
2440:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2441:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR2Filter
2442:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2443:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 93


2444:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2445:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/2 filter function. IIR1/2 = 1/2current + 1/2previous.
2446:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2447:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2448:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2449:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2450:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2451:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2452:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2453:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2454:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2455:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
2456:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2457:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2458:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2459:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2460:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2461:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR2Filter(uint16 x1, uint16 x2)
2462:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2463:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2464:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2465:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/2 Current Value+ 1/2 Previous Value */
2466:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
2467:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 1u;
2468:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
2469:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2470:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2471:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)) || \
2472:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR2_FILTER)) )
2473:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2474:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2475:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2476:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)) || \
2477:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR4_FILTER)) )
2478:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2479:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR4Filter
2480:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2481:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2482:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2483:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/4 filter function. IIR1/4 = 1/4current + 3/4previous.
2484:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2485:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2486:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2487:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2488:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2489:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2490:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a filtered value.
2491:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2492:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2493:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
2494:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2495:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2496:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2497:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2498:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2499:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR4Filter(uint16 x1, uint16 x2)
2500:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 94


 2775              		.loc 1 2500 0
 2776              		.cfi_startproc
 2777 0000 80B5     		push	{r7, lr}
 2778              		.cfi_def_cfa_offset 8
 2779              		.cfi_offset 7, -8
 2780              		.cfi_offset 14, -4
 2781 0002 84B0     		sub	sp, sp, #16
 2782              		.cfi_def_cfa_offset 24
 2783 0004 00AF     		add	r7, sp, #0
 2784              		.cfi_def_cfa_register 7
 2785 0006 021C     		mov	r2, r0
 2786 0008 BB1D     		add	r3, r7, #6
 2787 000a 1A80     		strh	r2, [r3]
 2788 000c 3B1D     		add	r3, r7, #4
 2789 000e 0A1C     		add	r2, r1, #0
 2790 0010 1A80     		strh	r2, [r3]
2501:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2502:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2503:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/4 Current Value + 3/4 Previous Value */
2504:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
 2791              		.loc 1 2504 0
 2792 0012 BB1D     		add	r3, r7, #6
 2793 0014 1A88     		ldrh	r2, [r3]
 2794 0016 3B1D     		add	r3, r7, #4
 2795 0018 1B88     		ldrh	r3, [r3]
 2796 001a D318     		add	r3, r2, r3
 2797 001c FB60     		str	r3, [r7, #12]
2505:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += ((uint32)x2 << 1u);
 2798              		.loc 1 2505 0
 2799 001e 3B1D     		add	r3, r7, #4
 2800 0020 1B88     		ldrh	r3, [r3]
 2801 0022 5B00     		lsl	r3, r3, #1
 2802 0024 FA68     		ldr	r2, [r7, #12]
 2803 0026 D318     		add	r3, r2, r3
 2804 0028 FB60     		str	r3, [r7, #12]
2506:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 2u;
 2805              		.loc 1 2506 0
 2806 002a FB68     		ldr	r3, [r7, #12]
 2807 002c 9B08     		lsr	r3, r3, #2
 2808 002e FB60     		str	r3, [r7, #12]
2507:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2508:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
 2809              		.loc 1 2508 0
 2810 0030 FB68     		ldr	r3, [r7, #12]
 2811 0032 9BB2     		uxth	r3, r3
2509:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 2812              		.loc 1 2509 0
 2813 0034 181C     		mov	r0, r3
 2814 0036 BD46     		mov	sp, r7
 2815 0038 04B0     		add	sp, sp, #16
 2816              		@ sp needed
 2817 003a 80BD     		pop	{r7, pc}
 2818              		.cfi_endproc
 2819              	.LFE68:
 2820              		.size	CapSense_IIR4Filter, .-CapSense_IIR4Filter
 2821              		.section	.text.CapSense_GetWidgetNumber,"ax",%progbits
 2822              		.align	2
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 95


 2823              		.global	CapSense_GetWidgetNumber
 2824              		.code	16
 2825              		.thumb_func
 2826              		.type	CapSense_GetWidgetNumber, %function
 2827              	CapSense_GetWidgetNumber:
 2828              	.LFB69:
2510:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)) || \
2511:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR4_FILTER)) )
2512:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2513:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2514:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2515:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
2516:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) || \
2517:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_TRACKPAD_GEST_POS_FILTERS_MASK & CapSense_JITTER_FILTER)))  
2518:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2519:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: uint16 CapSense_JitterFilter
2520:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2521:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2522:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2523:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Jitter filter function.
2524:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2525:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2526:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2527:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2528:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2529:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2530:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2531:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2532:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2533:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
2534:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2535:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2536:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2537:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2538:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2539:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_JitterFilter(uint16 x1, uint16 x2)
2540:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2541:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x1 > x2)
2542:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2543:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             x1--;
2544:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2545:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
2546:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2547:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if (x1 < x2)
2548:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2549:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 x1++;
2550:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2551:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2552:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
2553:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return x1;
2554:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2555:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
2556:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) )
2557:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	   *    (0u != (CapSense_TRACKPAD_GEST_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) )
2558:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2559:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2560:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 96


2561:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER))
2562:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2563:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR8Filter
2564:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2565:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2566:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2567:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/8 filter function. IIR1/8 = 1/8current + 7/8previous.
2568:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Only applies for raw data.
2569:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2570:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2571:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2572:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2573:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2574:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2575:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2576:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2577:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2578:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
2579:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2580:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2581:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2582:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2583:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2584:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR8Filter(uint16 x1, uint16 x2)
2585:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2586:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2587:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2588:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/8 Current Value + 7/8 Previous Value */
2589:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1;
2590:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += (((uint32)x2 << 3u) - ((uint32)x2));
2591:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 3u;
2592:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
2593:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2594:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2595:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)) */
2596:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2597:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2598:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER))
2599:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2600:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR16Filter
2601:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2602:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2603:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2604:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/16 filter function. IIR1/16 = 1/16current + 15/16previous.
2605:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Only applies for raw data.
2606:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2607:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2608:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2609:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2610:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2611:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2612:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2613:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2614:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2615:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
2616:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2617:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 97


2618:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2619:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2620:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2621:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR16Filter(uint16 x1, uint16 x2)
2622:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2623:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2624:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2625:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/16 Current Value + 15/16 Previous Value */
2626:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1;
2627:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += (((uint32)x2 << 4u) - ((uint32)x2));
2628:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 4u;
2629:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2630:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2631:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2632:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER) */
2633:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2634:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2635:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_TOTAL_MATRIX_BUTTONS_COUNT))
2636:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2637:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2638:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetMatrixButtonPos
2639:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2640:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2641:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2642:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Function calculates and returns a touch position (column and row) for the matrix
2643:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  button widget.
2644:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2645:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2646:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  widget number;
2647:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos:     pointer to an array of two uint8, where touch position will be 
2648:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *           stored:
2649:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *           pos[0] - column position;
2650:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *           pos[1] - raw position.
2651:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2652:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2653:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns 1 if row and column sensors of matrix button are active, 0 - in other
2654:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  cases.
2655:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2656:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2657:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_fingerThreshold[ ] - used to store the finger threshold for all widgets.
2658:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_sensorSignal[ ] - used to store a difference between the current value of 
2659:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  raw data and a previous value of the baseline.
2660:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2661:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2662:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2663:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2664:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2665:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 CapSense_GetMatrixButtonPos(uint32 widget, uint8* pos)
2666:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2667:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 i;
2668:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 retVal = 0u;
2669:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 row_sig_max = 0u;
2670:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 col_sig_max = 0u;
2671:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 row_ind = 0u;
2672:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 col_ind = 0u;
2673:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2674:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_CheckIsWidgetActive(widget) == 1u)
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 98


2675:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2676:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find row number with maximal signal value */
2677:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             for(i = CapSense_rawDataIndex[widget]; i < (CapSense_rawDataIndex[widget] + \
2678:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                  CapSense_numberOfSensors[widget]); i++)
2679:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2680:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (CapSense_sensorSignal[i] > col_sig_max)
2681:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2682:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     col_ind = i;
2683:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     col_sig_max = CapSense_sensorSignal[i];
2684:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2685:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2686:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2687:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find row number with maximal signal value */
2688:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             for(i = CapSense_rawDataIndex[widget+1u]; i < (CapSense_rawDataIndex[widget+1u] + \
2689:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                  CapSense_numberOfSensors[widget+1u]); i++)
2690:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2691:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (CapSense_sensorSignal[i] > row_sig_max)
2692:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2693:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     row_ind = i;
2694:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     row_sig_max = CapSense_sensorSignal[i];
2695:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2696:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2697:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2698:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if((col_sig_max >= CapSense_fingerThreshold[widget]) && \
2699:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                (row_sig_max >= CapSense_fingerThreshold[widget+1u]))
2700:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2701:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[0u] = col_ind - CapSense_rawDataIndex[widget];
2702:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[1u] = row_ind - CapSense_rawDataIndex[widget+1u];
2703:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 retVal = 1u;
2704:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2705:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2706:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (retVal);
2707:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2708:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2709:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (0u != (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)) */
2710:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2711:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2712:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetWidgetNumber
2713:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2714:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2715:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2716:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the widget number for the sensor.
2717:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2718:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2719:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be 
2720:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2721:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2722:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2723:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the widget number for the sensor. 
2724:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2725:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2726:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
2727:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
2728:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2729:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2730:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2731:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 99


2732:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_GetWidgetNumber(uint32 sensor)
2733:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 2829              		.loc 1 2733 0
 2830              		.cfi_startproc
 2831 0000 80B5     		push	{r7, lr}
 2832              		.cfi_def_cfa_offset 8
 2833              		.cfi_offset 7, -8
 2834              		.cfi_offset 14, -4
 2835 0002 82B0     		sub	sp, sp, #8
 2836              		.cfi_def_cfa_offset 16
 2837 0004 00AF     		add	r7, sp, #0
 2838              		.cfi_def_cfa_register 7
 2839 0006 7860     		str	r0, [r7, #4]
2734:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return((uint32)CapSense_widgetNumber[sensor]);
 2840              		.loc 1 2734 0
 2841 0008 034A     		ldr	r2, .L166
 2842 000a 7B68     		ldr	r3, [r7, #4]
 2843 000c D318     		add	r3, r2, r3
 2844 000e 1B78     		ldrb	r3, [r3]
2735:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 2845              		.loc 1 2735 0
 2846 0010 181C     		mov	r0, r3
 2847 0012 BD46     		mov	sp, r7
 2848 0014 02B0     		add	sp, sp, #8
 2849              		@ sp needed
 2850 0016 80BD     		pop	{r7, pc}
 2851              	.L167:
 2852              		.align	2
 2853              	.L166:
 2854 0018 00000000 		.word	CapSense_widgetNumber
 2855              		.cfi_endproc
 2856              	.LFE69:
 2857              		.size	CapSense_GetWidgetNumber, .-CapSense_GetWidgetNumber
 2858              		.section	.text.CapSense_GetLowBaselineReset,"ax",%progbits
 2859              		.align	2
 2860              		.global	CapSense_GetLowBaselineReset
 2861              		.code	16
 2862              		.thumb_func
 2863              		.type	CapSense_GetLowBaselineReset, %function
 2864              	CapSense_GetLowBaselineReset:
 2865              	.LFB70:
2736:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2737:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2738:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetLowBaselineReset
2739:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2740:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2741:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2742:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the low baseline reset threshold value for the  sensor.
2743:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2744:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2745:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be 
2746:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2747:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2748:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2749:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  low baseline reset threshold value a sensor.
2750:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2751:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 100


2752:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_lowBaselineReset[]  - stores low baseline reset values.
2753:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
2754:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2755:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2756:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2757:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2758:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetLowBaselineReset(uint32 sensor)
2759:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 2866              		.loc 1 2759 0
 2867              		.cfi_startproc
 2868 0000 80B5     		push	{r7, lr}
 2869              		.cfi_def_cfa_offset 8
 2870              		.cfi_offset 7, -8
 2871              		.cfi_offset 14, -4
 2872 0002 82B0     		sub	sp, sp, #8
 2873              		.cfi_def_cfa_offset 16
 2874 0004 00AF     		add	r7, sp, #0
 2875              		.cfi_def_cfa_register 7
 2876 0006 7860     		str	r0, [r7, #4]
2760:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return(CapSense_lowBaselineReset[sensor]);
 2877              		.loc 1 2760 0
 2878 0008 034A     		ldr	r2, .L170
 2879 000a 7B68     		ldr	r3, [r7, #4]
 2880 000c D318     		add	r3, r2, r3
 2881 000e 1B78     		ldrb	r3, [r3]
2761:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 2882              		.loc 1 2761 0
 2883 0010 181C     		mov	r0, r3
 2884 0012 BD46     		mov	sp, r7
 2885 0014 02B0     		add	sp, sp, #8
 2886              		@ sp needed
 2887 0016 80BD     		pop	{r7, pc}
 2888              	.L171:
 2889              		.align	2
 2890              	.L170:
 2891 0018 00000000 		.word	CapSense_lowBaselineReset
 2892              		.cfi_endproc
 2893              	.LFE70:
 2894              		.size	CapSense_GetLowBaselineReset, .-CapSense_GetLowBaselineReset
 2895              		.section	.text.CapSense_GetDebounce,"ax",%progbits
 2896              		.align	2
 2897              		.global	CapSense_GetDebounce
 2898              		.code	16
 2899              		.thumb_func
 2900              		.type	CapSense_GetDebounce, %function
 2901              	CapSense_GetDebounce:
 2902              	.LFB71:
2762:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2763:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2764:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetDebounce
2765:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2766:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2767:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2768:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns a debounce value.
2769:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2770:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2771:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be 
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 101


2772:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2773:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2774:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2775:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Debounce value 
2776:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2777:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2778:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_debounce[]  - stores the debounce value.
2779:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
2780:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2781:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2782:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2783:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2784:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetDebounce(uint32 widget)
2785:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 2903              		.loc 1 2785 0
 2904              		.cfi_startproc
 2905 0000 80B5     		push	{r7, lr}
 2906              		.cfi_def_cfa_offset 8
 2907              		.cfi_offset 7, -8
 2908              		.cfi_offset 14, -4
 2909 0002 82B0     		sub	sp, sp, #8
 2910              		.cfi_def_cfa_offset 16
 2911 0004 00AF     		add	r7, sp, #0
 2912              		.cfi_def_cfa_register 7
 2913 0006 7860     		str	r0, [r7, #4]
2786:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return(CapSense_debounce[widget]);
 2914              		.loc 1 2786 0
 2915 0008 034A     		ldr	r2, .L174
 2916 000a 7B68     		ldr	r3, [r7, #4]
 2917 000c D318     		add	r3, r2, r3
 2918 000e 1B78     		ldrb	r3, [r3]
2787:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 2919              		.loc 1 2787 0
 2920 0010 181C     		mov	r0, r3
 2921 0012 BD46     		mov	sp, r7
 2922 0014 02B0     		add	sp, sp, #8
 2923              		@ sp needed
 2924 0016 80BD     		pop	{r7, pc}
 2925              	.L175:
 2926              		.align	2
 2927              	.L174:
 2928 0018 00000000 		.word	CapSense_debounce
 2929              		.cfi_endproc
 2930              	.LFE71:
 2931              		.size	CapSense_GetDebounce, .-CapSense_GetDebounce
 2932              		.section	.text.CapSense_EnableRawDataFilters,"ax",%progbits
 2933              		.align	2
 2934              		.global	CapSense_EnableRawDataFilters
 2935              		.code	16
 2936              		.thumb_func
 2937              		.type	CapSense_EnableRawDataFilters, %function
 2938              	CapSense_EnableRawDataFilters:
 2939              	.LFB72:
2788:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2789:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_RAW_FILTER_MASK != 0u)
2790:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/*******************************************************************************
2791:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Function Name: CapSense_EnableRawDataFilters
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 102


2792:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	********************************************************************************
2793:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2794:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Summary:
2795:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  Enables the rawdata filters for the sensor signals.
2796:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2797:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Parameters:
2798:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2799:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2800:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Return:
2801:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2802:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2803:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2804:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_enableRawFilters defines if the filters are enabled or not.
2805:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2806:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2807:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2808:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2809:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*******************************************************************************/
2810:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	void CapSense_EnableRawDataFilters(void)
2811:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 2940              		.loc 1 2811 0
 2941              		.cfi_startproc
 2942 0000 80B5     		push	{r7, lr}
 2943              		.cfi_def_cfa_offset 8
 2944              		.cfi_offset 7, -8
 2945              		.cfi_offset 14, -4
 2946 0002 00AF     		add	r7, sp, #0
 2947              		.cfi_def_cfa_register 7
2812:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_enableRawFilters = CapSense_RAW_FILTERS_ENABLED;
 2948              		.loc 1 2812 0
 2949 0004 024B     		ldr	r3, .L177
 2950 0006 0122     		mov	r2, #1
 2951 0008 1A70     		strb	r2, [r3]
2813:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 2952              		.loc 1 2813 0
 2953 000a BD46     		mov	sp, r7
 2954              		@ sp needed
 2955 000c 80BD     		pop	{r7, pc}
 2956              	.L178:
 2957 000e C046     		.align	2
 2958              	.L177:
 2959 0010 00000000 		.word	CapSense_enableRawFilters
 2960              		.cfi_endproc
 2961              	.LFE72:
 2962              		.size	CapSense_EnableRawDataFilters, .-CapSense_EnableRawDataFilters
 2963              		.section	.text.CapSense_DisableRawDataFilters,"ax",%progbits
 2964              		.align	2
 2965              		.global	CapSense_DisableRawDataFilters
 2966              		.code	16
 2967              		.thumb_func
 2968              		.type	CapSense_DisableRawDataFilters, %function
 2969              	CapSense_DisableRawDataFilters:
 2970              	.LFB73:
2814:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2815:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/*******************************************************************************
2816:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Function Name: CapSense_DisableRawDataFilters
2817:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	********************************************************************************
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 103


2818:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2819:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Summary:
2820:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  Disables the rawdata filters for the sensor signals.
2821:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2822:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Parameters:
2823:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2824:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2825:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Return:
2826:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2827:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2828:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2829:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_enableRawFilters defines if the filters are enabled or not.
2830:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2831:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2832:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2833:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2834:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*******************************************************************************/
2835:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	void CapSense_DisableRawDataFilters(void)
2836:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 2971              		.loc 1 2836 0
 2972              		.cfi_startproc
 2973 0000 80B5     		push	{r7, lr}
 2974              		.cfi_def_cfa_offset 8
 2975              		.cfi_offset 7, -8
 2976              		.cfi_offset 14, -4
 2977 0002 00AF     		add	r7, sp, #0
 2978              		.cfi_def_cfa_register 7
2837:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_enableRawFilters = CapSense_RAW_FILTERS_DISABLED;
 2979              		.loc 1 2837 0
 2980 0004 024B     		ldr	r3, .L180
 2981 0006 0022     		mov	r2, #0
 2982 0008 1A70     		strb	r2, [r3]
2838:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 2983              		.loc 1 2838 0
 2984 000a BD46     		mov	sp, r7
 2985              		@ sp needed
 2986 000c 80BD     		pop	{r7, pc}
 2987              	.L181:
 2988 000e C046     		.align	2
 2989              	.L180:
 2990 0010 00000000 		.word	CapSense_enableRawFilters
 2991              		.cfi_endproc
 2992              	.LFE73:
 2993              		.size	CapSense_DisableRawDataFilters, .-CapSense_DisableRawDataFilters
 2994              		.bss
 2995 001d 000000   		.align	2
 2996              	CapSense_debounceCounter.5379:
 2997 0020 00       		.space	1
 2998 0021 000000   		.align	2
 2999              	CapSense_centroid.5431:
 3000 0024 000000   		.space	3
 3001 0027 00       		.text
 3002              	.Letext0:
 3003              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 3004              		.file 3 ".\\Generated_Source\\PSoC4\\CapSense_PVT.h"
 3005              		.section	.debug_info,"",%progbits
 3006              	.Ldebug_info0:
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 104


 3007 0000 350E0000 		.4byte	0xe35
 3008 0004 0400     		.2byte	0x4
 3009 0006 00000000 		.4byte	.Ldebug_abbrev0
 3010 000a 04       		.byte	0x4
 3011 000b 01       		.uleb128 0x1
 3012 000c F9050000 		.4byte	.LASF138
 3013 0010 01       		.byte	0x1
 3014 0011 50050000 		.4byte	.LASF139
 3015 0015 8A080000 		.4byte	.LASF140
 3016 0019 00000000 		.4byte	.Ldebug_ranges0+0
 3017 001d 00000000 		.4byte	0
 3018 0021 00000000 		.4byte	.Ldebug_line0
 3019 0025 02       		.uleb128 0x2
 3020 0026 01       		.byte	0x1
 3021 0027 06       		.byte	0x6
 3022 0028 F8090000 		.4byte	.LASF0
 3023 002c 02       		.uleb128 0x2
 3024 002d 01       		.byte	0x1
 3025 002e 08       		.byte	0x8
 3026 002f 1F090000 		.4byte	.LASF1
 3027 0033 02       		.uleb128 0x2
 3028 0034 02       		.byte	0x2
 3029 0035 05       		.byte	0x5
 3030 0036 A9070000 		.4byte	.LASF2
 3031 003a 02       		.uleb128 0x2
 3032 003b 02       		.byte	0x2
 3033 003c 07       		.byte	0x7
 3034 003d 040A0000 		.4byte	.LASF3
 3035 0041 02       		.uleb128 0x2
 3036 0042 04       		.byte	0x4
 3037 0043 05       		.byte	0x5
 3038 0044 B3070000 		.4byte	.LASF4
 3039 0048 02       		.uleb128 0x2
 3040 0049 04       		.byte	0x4
 3041 004a 07       		.byte	0x7
 3042 004b 60080000 		.4byte	.LASF5
 3043 004f 02       		.uleb128 0x2
 3044 0050 08       		.byte	0x8
 3045 0051 05       		.byte	0x5
 3046 0052 79050000 		.4byte	.LASF6
 3047 0056 02       		.uleb128 0x2
 3048 0057 08       		.byte	0x8
 3049 0058 07       		.byte	0x7
 3050 0059 F1020000 		.4byte	.LASF7
 3051 005d 03       		.uleb128 0x3
 3052 005e 04       		.byte	0x4
 3053 005f 05       		.byte	0x5
 3054 0060 696E7400 		.ascii	"int\000"
 3055 0064 02       		.uleb128 0x2
 3056 0065 04       		.byte	0x4
 3057 0066 07       		.byte	0x7
 3058 0067 1D010000 		.4byte	.LASF8
 3059 006b 04       		.uleb128 0x4
 3060 006c 940A0000 		.4byte	.LASF9
 3061 0070 02       		.byte	0x2
 3062 0071 B3       		.byte	0xb3
 3063 0072 2C000000 		.4byte	0x2c
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 105


 3064 0076 04       		.uleb128 0x4
 3065 0077 0F050000 		.4byte	.LASF10
 3066 007b 02       		.byte	0x2
 3067 007c B4       		.byte	0xb4
 3068 007d 3A000000 		.4byte	0x3a
 3069 0081 04       		.uleb128 0x4
 3070 0082 02070000 		.4byte	.LASF11
 3071 0086 02       		.byte	0x2
 3072 0087 B5       		.byte	0xb5
 3073 0088 48000000 		.4byte	0x48
 3074 008c 04       		.uleb128 0x4
 3075 008d 42010000 		.4byte	.LASF12
 3076 0091 02       		.byte	0x2
 3077 0092 B7       		.byte	0xb7
 3078 0093 33000000 		.4byte	0x33
 3079 0097 04       		.uleb128 0x4
 3080 0098 AC020000 		.4byte	.LASF13
 3081 009c 02       		.byte	0x2
 3082 009d B8       		.byte	0xb8
 3083 009e 41000000 		.4byte	0x41
 3084 00a2 02       		.uleb128 0x2
 3085 00a3 04       		.byte	0x4
 3086 00a4 04       		.byte	0x4
 3087 00a5 A6020000 		.4byte	.LASF14
 3088 00a9 02       		.uleb128 0x2
 3089 00aa 08       		.byte	0x8
 3090 00ab 04       		.byte	0x4
 3091 00ac 9A0A0000 		.4byte	.LASF15
 3092 00b0 02       		.uleb128 0x2
 3093 00b1 01       		.byte	0x1
 3094 00b2 08       		.byte	0x8
 3095 00b3 E7040000 		.4byte	.LASF16
 3096 00b7 02       		.uleb128 0x2
 3097 00b8 04       		.byte	0x4
 3098 00b9 07       		.byte	0x7
 3099 00ba 57080000 		.4byte	.LASF17
 3100 00be 05       		.uleb128 0x5
 3101 00bf 38       		.byte	0x38
 3102 00c0 03       		.byte	0x3
 3103 00c1 2F       		.byte	0x2f
 3104 00c2 6F010000 		.4byte	0x16f
 3105 00c6 06       		.uleb128 0x6
 3106 00c7 1B050000 		.4byte	.LASF18
 3107 00cb 03       		.byte	0x3
 3108 00cc 31       		.byte	0x31
 3109 00cd 6F010000 		.4byte	0x16f
 3110 00d1 00       		.byte	0
 3111 00d2 06       		.uleb128 0x6
 3112 00d3 9A070000 		.4byte	.LASF19
 3113 00d7 03       		.byte	0x3
 3114 00d8 32       		.byte	0x32
 3115 00d9 6F010000 		.4byte	0x16f
 3116 00dd 04       		.byte	0x4
 3117 00de 06       		.uleb128 0x6
 3118 00df A9090000 		.4byte	.LASF20
 3119 00e3 03       		.byte	0x3
 3120 00e4 33       		.byte	0x33
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 106


 3121 00e5 6F010000 		.4byte	0x16f
 3122 00e9 08       		.byte	0x8
 3123 00ea 06       		.uleb128 0x6
 3124 00eb 12090000 		.4byte	.LASF21
 3125 00ef 03       		.byte	0x3
 3126 00f0 34       		.byte	0x34
 3127 00f1 6F010000 		.4byte	0x16f
 3128 00f5 0C       		.byte	0xc
 3129 00f6 06       		.uleb128 0x6
 3130 00f7 EE090000 		.4byte	.LASF22
 3131 00fb 03       		.byte	0x3
 3132 00fc 35       		.byte	0x35
 3133 00fd 6F010000 		.4byte	0x16f
 3134 0101 10       		.byte	0x10
 3135 0102 06       		.uleb128 0x6
 3136 0103 E2070000 		.4byte	.LASF23
 3137 0107 03       		.byte	0x3
 3138 0108 36       		.byte	0x36
 3139 0109 75010000 		.4byte	0x175
 3140 010d 14       		.byte	0x14
 3141 010e 06       		.uleb128 0x6
 3142 010f B8020000 		.4byte	.LASF24
 3143 0113 03       		.byte	0x3
 3144 0114 37       		.byte	0x37
 3145 0115 80010000 		.4byte	0x180
 3146 0119 18       		.byte	0x18
 3147 011a 06       		.uleb128 0x6
 3148 011b D9010000 		.4byte	.LASF25
 3149 011f 03       		.byte	0x3
 3150 0120 38       		.byte	0x38
 3151 0121 75010000 		.4byte	0x175
 3152 0125 1C       		.byte	0x1c
 3153 0126 06       		.uleb128 0x6
 3154 0127 89000000 		.4byte	.LASF26
 3155 012b 03       		.byte	0x3
 3156 012c 39       		.byte	0x39
 3157 012d 75010000 		.4byte	0x175
 3158 0131 20       		.byte	0x20
 3159 0132 06       		.uleb128 0x6
 3160 0133 D1050000 		.4byte	.LASF27
 3161 0137 03       		.byte	0x3
 3162 0138 3A       		.byte	0x3a
 3163 0139 95010000 		.4byte	0x195
 3164 013d 24       		.byte	0x24
 3165 013e 06       		.uleb128 0x6
 3166 013f A9050000 		.4byte	.LASF28
 3167 0143 03       		.byte	0x3
 3168 0144 3B       		.byte	0x3b
 3169 0145 A6010000 		.4byte	0x1a6
 3170 0149 28       		.byte	0x28
 3171 014a 06       		.uleb128 0x6
 3172 014b 12040000 		.4byte	.LASF29
 3173 014f 03       		.byte	0x3
 3174 0150 3C       		.byte	0x3c
 3175 0151 95010000 		.4byte	0x195
 3176 0155 2C       		.byte	0x2c
 3177 0156 06       		.uleb128 0x6
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 107


 3178 0157 99000000 		.4byte	.LASF30
 3179 015b 03       		.byte	0x3
 3180 015c 3D       		.byte	0x3d
 3181 015d C0010000 		.4byte	0x1c0
 3182 0161 30       		.byte	0x30
 3183 0162 06       		.uleb128 0x6
 3184 0163 350A0000 		.4byte	.LASF31
 3185 0167 03       		.byte	0x3
 3186 0168 3E       		.byte	0x3e
 3187 0169 DB010000 		.4byte	0x1db
 3188 016d 34       		.byte	0x34
 3189 016e 00       		.byte	0
 3190 016f 07       		.uleb128 0x7
 3191 0170 04       		.byte	0x4
 3192 0171 6B000000 		.4byte	0x6b
 3193 0175 07       		.uleb128 0x7
 3194 0176 04       		.byte	0x4
 3195 0177 7B010000 		.4byte	0x17b
 3196 017b 08       		.uleb128 0x8
 3197 017c 6B000000 		.4byte	0x6b
 3198 0180 07       		.uleb128 0x7
 3199 0181 04       		.byte	0x4
 3200 0182 81000000 		.4byte	0x81
 3201 0186 09       		.uleb128 0x9
 3202 0187 76000000 		.4byte	0x76
 3203 018b 95010000 		.4byte	0x195
 3204 018f 0A       		.uleb128 0xa
 3205 0190 81000000 		.4byte	0x81
 3206 0194 00       		.byte	0
 3207 0195 07       		.uleb128 0x7
 3208 0196 04       		.byte	0x4
 3209 0197 86010000 		.4byte	0x186
 3210 019b 0B       		.uleb128 0xb
 3211 019c A6010000 		.4byte	0x1a6
 3212 01a0 0A       		.uleb128 0xa
 3213 01a1 81000000 		.4byte	0x81
 3214 01a5 00       		.byte	0
 3215 01a6 07       		.uleb128 0x7
 3216 01a7 04       		.byte	0x4
 3217 01a8 9B010000 		.4byte	0x19b
 3218 01ac 09       		.uleb128 0x9
 3219 01ad 81000000 		.4byte	0x81
 3220 01b1 C0010000 		.4byte	0x1c0
 3221 01b5 0A       		.uleb128 0xa
 3222 01b6 75010000 		.4byte	0x175
 3223 01ba 0A       		.uleb128 0xa
 3224 01bb 81000000 		.4byte	0x81
 3225 01bf 00       		.byte	0
 3226 01c0 07       		.uleb128 0x7
 3227 01c1 04       		.byte	0x4
 3228 01c2 AC010000 		.4byte	0x1ac
 3229 01c6 0B       		.uleb128 0xb
 3230 01c7 DB010000 		.4byte	0x1db
 3231 01cb 0A       		.uleb128 0xa
 3232 01cc 6F010000 		.4byte	0x16f
 3233 01d0 0A       		.uleb128 0xa
 3234 01d1 81000000 		.4byte	0x81
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 108


 3235 01d5 0A       		.uleb128 0xa
 3236 01d6 81000000 		.4byte	0x81
 3237 01da 00       		.byte	0
 3238 01db 07       		.uleb128 0x7
 3239 01dc 04       		.byte	0x4
 3240 01dd C6010000 		.4byte	0x1c6
 3241 01e1 04       		.uleb128 0x4
 3242 01e2 C6080000 		.4byte	.LASF32
 3243 01e6 03       		.byte	0x3
 3244 01e7 3F       		.byte	0x3f
 3245 01e8 BE000000 		.4byte	0xbe
 3246 01ec 05       		.uleb128 0x5
 3247 01ed 0C       		.byte	0xc
 3248 01ee 03       		.byte	0x3
 3249 01ef 41       		.byte	0x41
 3250 01f0 3D020000 		.4byte	0x23d
 3251 01f4 06       		.uleb128 0x6
 3252 01f5 A8040000 		.4byte	.LASF33
 3253 01f9 03       		.byte	0x3
 3254 01fa 43       		.byte	0x43
 3255 01fb 6B000000 		.4byte	0x6b
 3256 01ff 00       		.byte	0
 3257 0200 06       		.uleb128 0x6
 3258 0201 E6010000 		.4byte	.LASF34
 3259 0205 03       		.byte	0x3
 3260 0206 44       		.byte	0x44
 3261 0207 6B000000 		.4byte	0x6b
 3262 020b 01       		.byte	0x1
 3263 020c 06       		.uleb128 0x6
 3264 020d 2A010000 		.4byte	.LASF35
 3265 0211 03       		.byte	0x3
 3266 0212 45       		.byte	0x45
 3267 0213 6B000000 		.4byte	0x6b
 3268 0217 02       		.byte	0x2
 3269 0218 06       		.uleb128 0x6
 3270 0219 C1040000 		.4byte	.LASF36
 3271 021d 03       		.byte	0x3
 3272 021e 46       		.byte	0x46
 3273 021f 76000000 		.4byte	0x76
 3274 0223 04       		.byte	0x4
 3275 0224 06       		.uleb128 0x6
 3276 0225 74070000 		.4byte	.LASF37
 3277 0229 03       		.byte	0x3
 3278 022a 47       		.byte	0x47
 3279 022b 76000000 		.4byte	0x76
 3280 022f 06       		.byte	0x6
 3281 0230 06       		.uleb128 0x6
 3282 0231 72080000 		.4byte	.LASF38
 3283 0235 03       		.byte	0x3
 3284 0236 48       		.byte	0x48
 3285 0237 3D020000 		.4byte	0x23d
 3286 023b 08       		.byte	0x8
 3287 023c 00       		.byte	0
 3288 023d 07       		.uleb128 0x7
 3289 023e 04       		.byte	0x4
 3290 023f 43020000 		.4byte	0x243
 3291 0243 08       		.uleb128 0x8
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 109


 3292 0244 E1010000 		.4byte	0x1e1
 3293 0248 04       		.uleb128 0x4
 3294 0249 48000000 		.4byte	.LASF39
 3295 024d 03       		.byte	0x3
 3296 024e 49       		.byte	0x49
 3297 024f EC010000 		.4byte	0x1ec
 3298 0253 0C       		.uleb128 0xc
 3299 0254 87060000 		.4byte	.LASF40
 3300 0258 01       		.byte	0x1
 3301 0259 8E       		.byte	0x8e
 3302 025a 00000000 		.4byte	.LFB35
 3303 025e 58000000 		.4byte	.LFE35-.LFB35
 3304 0262 01       		.uleb128 0x1
 3305 0263 9C       		.byte	0x9c
 3306 0264 77020000 		.4byte	0x277
 3307 0268 0D       		.uleb128 0xd
 3308 0269 BA040000 		.4byte	.LASF42
 3309 026d 01       		.byte	0x1
 3310 026e 8E       		.byte	0x8e
 3311 026f 81000000 		.4byte	0x81
 3312 0273 02       		.uleb128 0x2
 3313 0274 91       		.byte	0x91
 3314 0275 74       		.sleb128 -12
 3315 0276 00       		.byte	0
 3316 0277 0E       		.uleb128 0xe
 3317 0278 96010000 		.4byte	.LASF41
 3318 027c 01       		.byte	0x1
 3319 027d D9       		.byte	0xd9
 3320 027e 00000000 		.4byte	.LFB36
 3321 0282 28000000 		.4byte	.LFE36-.LFB36
 3322 0286 01       		.uleb128 0x1
 3323 0287 9C       		.byte	0x9c
 3324 0288 9B020000 		.4byte	0x29b
 3325 028c 0D       		.uleb128 0xd
 3326 028d BA040000 		.4byte	.LASF42
 3327 0291 01       		.byte	0x1
 3328 0292 D9       		.byte	0xd9
 3329 0293 81000000 		.4byte	0x81
 3330 0297 02       		.uleb128 0x2
 3331 0298 91       		.byte	0x91
 3332 0299 74       		.sleb128 -12
 3333 029a 00       		.byte	0
 3334 029b 0E       		.uleb128 0xe
 3335 029c 53090000 		.4byte	.LASF43
 3336 02a0 01       		.byte	0x1
 3337 02a1 FE       		.byte	0xfe
 3338 02a2 00000000 		.4byte	.LFB37
 3339 02a6 26000000 		.4byte	.LFE37-.LFB37
 3340 02aa 01       		.uleb128 0x1
 3341 02ab 9C       		.byte	0x9c
 3342 02ac BE020000 		.4byte	0x2be
 3343 02b0 0F       		.uleb128 0xf
 3344 02b1 6900     		.ascii	"i\000"
 3345 02b3 01       		.byte	0x1
 3346 02b4 0001     		.2byte	0x100
 3347 02b6 81000000 		.4byte	0x81
 3348 02ba 02       		.uleb128 0x2
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 110


 3349 02bb 91       		.byte	0x91
 3350 02bc 74       		.sleb128 -12
 3351 02bd 00       		.byte	0
 3352 02be 10       		.uleb128 0x10
 3353 02bf 48010000 		.4byte	.LASF44
 3354 02c3 01       		.byte	0x1
 3355 02c4 2101     		.2byte	0x121
 3356 02c6 00000000 		.4byte	.LFB38
 3357 02ca 50000000 		.4byte	.LFE38-.LFB38
 3358 02ce 01       		.uleb128 0x1
 3359 02cf 9C       		.byte	0x9c
 3360 02d0 F1020000 		.4byte	0x2f1
 3361 02d4 0F       		.uleb128 0xf
 3362 02d5 6900     		.ascii	"i\000"
 3363 02d7 01       		.byte	0x1
 3364 02d8 2301     		.2byte	0x123
 3365 02da 81000000 		.4byte	0x81
 3366 02de 02       		.uleb128 0x2
 3367 02df 91       		.byte	0x91
 3368 02e0 74       		.sleb128 -12
 3369 02e1 11       		.uleb128 0x11
 3370 02e2 00010000 		.4byte	.LASF45
 3371 02e6 01       		.byte	0x1
 3372 02e7 2401     		.2byte	0x124
 3373 02e9 81000000 		.4byte	0x81
 3374 02ed 02       		.uleb128 0x2
 3375 02ee 91       		.byte	0x91
 3376 02ef 70       		.sleb128 -16
 3377 02f0 00       		.byte	0
 3378 02f1 10       		.uleb128 0x10
 3379 02f2 66000000 		.4byte	.LASF46
 3380 02f6 01       		.byte	0x1
 3381 02f7 6201     		.2byte	0x162
 3382 02f9 00000000 		.4byte	.LFB39
 3383 02fd 38020000 		.4byte	.LFE39-.LFB39
 3384 0301 01       		.uleb128 0x1
 3385 0302 9C       		.byte	0x9c
 3386 0303 71030000 		.4byte	0x371
 3387 0307 12       		.uleb128 0x12
 3388 0308 BA040000 		.4byte	.LASF42
 3389 030c 01       		.byte	0x1
 3390 030d 6201     		.2byte	0x162
 3391 030f 81000000 		.4byte	0x81
 3392 0313 02       		.uleb128 0x2
 3393 0314 91       		.byte	0x91
 3394 0315 5C       		.sleb128 -36
 3395 0316 11       		.uleb128 0x11
 3396 0317 0D040000 		.4byte	.LASF47
 3397 031b 01       		.byte	0x1
 3398 031c 6401     		.2byte	0x164
 3399 031e 81000000 		.4byte	0x81
 3400 0322 02       		.uleb128 0x2
 3401 0323 91       		.byte	0x91
 3402 0324 60       		.sleb128 -32
 3403 0325 11       		.uleb128 0x11
 3404 0326 01040000 		.4byte	.LASF48
 3405 032a 01       		.byte	0x1
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 111


 3406 032b 6501     		.2byte	0x165
 3407 032d 81000000 		.4byte	0x81
 3408 0331 02       		.uleb128 0x2
 3409 0332 91       		.byte	0x91
 3410 0333 6C       		.sleb128 -20
 3411 0334 11       		.uleb128 0x11
 3412 0335 5A0A0000 		.4byte	.LASF49
 3413 0339 01       		.byte	0x1
 3414 033a 6601     		.2byte	0x166
 3415 033c 76000000 		.4byte	0x76
 3416 0340 02       		.uleb128 0x2
 3417 0341 91       		.byte	0x91
 3418 0342 6A       		.sleb128 -22
 3419 0343 11       		.uleb128 0x11
 3420 0344 2E040000 		.4byte	.LASF50
 3421 0348 01       		.byte	0x1
 3422 0349 6701     		.2byte	0x167
 3423 034b 76000000 		.4byte	0x76
 3424 034f 02       		.uleb128 0x2
 3425 0350 91       		.byte	0x91
 3426 0351 68       		.sleb128 -24
 3427 0352 11       		.uleb128 0x11
 3428 0353 22030000 		.4byte	.LASF51
 3429 0357 01       		.byte	0x1
 3430 0358 6801     		.2byte	0x168
 3431 035a 6B000000 		.4byte	0x6b
 3432 035e 02       		.uleb128 0x2
 3433 035f 91       		.byte	0x91
 3434 0360 67       		.sleb128 -25
 3435 0361 11       		.uleb128 0x11
 3436 0362 7B080000 		.4byte	.LASF52
 3437 0366 01       		.byte	0x1
 3438 0367 6901     		.2byte	0x169
 3439 0369 6B000000 		.4byte	0x6b
 3440 036d 02       		.uleb128 0x2
 3441 036e 91       		.byte	0x91
 3442 036f 66       		.sleb128 -26
 3443 0370 00       		.byte	0
 3444 0371 10       		.uleb128 0x10
 3445 0372 DB050000 		.4byte	.LASF53
 3446 0376 01       		.byte	0x1
 3447 0377 2102     		.2byte	0x221
 3448 0379 00000000 		.4byte	.LFB40
 3449 037d 1E000000 		.4byte	.LFE40-.LFB40
 3450 0381 01       		.uleb128 0x1
 3451 0382 9C       		.byte	0x9c
 3452 0383 97030000 		.4byte	0x397
 3453 0387 12       		.uleb128 0x12
 3454 0388 BA040000 		.4byte	.LASF42
 3455 038c 01       		.byte	0x1
 3456 038d 2102     		.2byte	0x221
 3457 038f 81000000 		.4byte	0x81
 3458 0393 02       		.uleb128 0x2
 3459 0394 91       		.byte	0x91
 3460 0395 74       		.sleb128 -12
 3461 0396 00       		.byte	0
 3462 0397 10       		.uleb128 0x10
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 112


 3463 0398 C7000000 		.4byte	.LASF54
 3464 039c 01       		.byte	0x1
 3465 039d 5702     		.2byte	0x257
 3466 039f 00000000 		.4byte	.LFB41
 3467 03a3 40000000 		.4byte	.LFE41-.LFB41
 3468 03a7 01       		.uleb128 0x1
 3469 03a8 9C       		.byte	0x9c
 3470 03a9 CA030000 		.4byte	0x3ca
 3471 03ad 0F       		.uleb128 0xf
 3472 03ae 6900     		.ascii	"i\000"
 3473 03b0 01       		.byte	0x1
 3474 03b1 5902     		.2byte	0x259
 3475 03b3 81000000 		.4byte	0x81
 3476 03b7 02       		.uleb128 0x2
 3477 03b8 91       		.byte	0x91
 3478 03b9 74       		.sleb128 -12
 3479 03ba 11       		.uleb128 0x11
 3480 03bb 00010000 		.4byte	.LASF45
 3481 03bf 01       		.byte	0x1
 3482 03c0 5A02     		.2byte	0x25a
 3483 03c2 81000000 		.4byte	0x81
 3484 03c6 02       		.uleb128 0x2
 3485 03c7 91       		.byte	0x91
 3486 03c8 70       		.sleb128 -16
 3487 03c9 00       		.byte	0
 3488 03ca 10       		.uleb128 0x10
 3489 03cb 74020000 		.4byte	.LASF55
 3490 03cf 01       		.byte	0x1
 3491 03d0 8402     		.2byte	0x284
 3492 03d2 00000000 		.4byte	.LFB42
 3493 03d6 58000000 		.4byte	.LFE42-.LFB42
 3494 03da 01       		.uleb128 0x1
 3495 03db 9C       		.byte	0x9c
 3496 03dc 39040000 		.4byte	0x439
 3497 03e0 12       		.uleb128 0x12
 3498 03e1 22030000 		.4byte	.LASF51
 3499 03e5 01       		.byte	0x1
 3500 03e6 8402     		.2byte	0x284
 3501 03e8 81000000 		.4byte	0x81
 3502 03ec 02       		.uleb128 0x2
 3503 03ed 91       		.byte	0x91
 3504 03ee 5C       		.sleb128 -36
 3505 03ef 11       		.uleb128 0x11
 3506 03f0 3E040000 		.4byte	.LASF56
 3507 03f4 01       		.byte	0x1
 3508 03f5 8602     		.2byte	0x286
 3509 03f7 81000000 		.4byte	0x81
 3510 03fb 02       		.uleb128 0x2
 3511 03fc 91       		.byte	0x91
 3512 03fd 70       		.sleb128 -16
 3513 03fe 11       		.uleb128 0x11
 3514 03ff BC070000 		.4byte	.LASF57
 3515 0403 01       		.byte	0x1
 3516 0404 8702     		.2byte	0x287
 3517 0406 81000000 		.4byte	0x81
 3518 040a 02       		.uleb128 0x2
 3519 040b 91       		.byte	0x91
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 113


 3520 040c 6C       		.sleb128 -20
 3521 040d 11       		.uleb128 0x11
 3522 040e 69070000 		.4byte	.LASF58
 3523 0412 01       		.byte	0x1
 3524 0413 8802     		.2byte	0x288
 3525 0415 81000000 		.4byte	0x81
 3526 0419 02       		.uleb128 0x2
 3527 041a 91       		.byte	0x91
 3528 041b 68       		.sleb128 -24
 3529 041c 0F       		.uleb128 0xf
 3530 041d 6900     		.ascii	"i\000"
 3531 041f 01       		.byte	0x1
 3532 0420 8902     		.2byte	0x289
 3533 0422 81000000 		.4byte	0x81
 3534 0426 02       		.uleb128 0x2
 3535 0427 91       		.byte	0x91
 3536 0428 74       		.sleb128 -12
 3537 0429 11       		.uleb128 0x11
 3538 042a 00010000 		.4byte	.LASF45
 3539 042e 01       		.byte	0x1
 3540 042f 8A02     		.2byte	0x28a
 3541 0431 81000000 		.4byte	0x81
 3542 0435 02       		.uleb128 0x2
 3543 0436 91       		.byte	0x91
 3544 0437 64       		.sleb128 -28
 3545 0438 00       		.byte	0
 3546 0439 13       		.uleb128 0x13
 3547 043a 73090000 		.4byte	.LASF61
 3548 043e 01       		.byte	0x1
 3549 043f B502     		.2byte	0x2b5
 3550 0441 76000000 		.4byte	0x76
 3551 0445 00000000 		.4byte	.LFB43
 3552 0449 1C000000 		.4byte	.LFE43-.LFB43
 3553 044d 01       		.uleb128 0x1
 3554 044e 9C       		.byte	0x9c
 3555 044f 63040000 		.4byte	0x463
 3556 0453 12       		.uleb128 0x12
 3557 0454 BA040000 		.4byte	.LASF42
 3558 0458 01       		.byte	0x1
 3559 0459 B502     		.2byte	0x2b5
 3560 045b 81000000 		.4byte	0x81
 3561 045f 02       		.uleb128 0x2
 3562 0460 91       		.byte	0x91
 3563 0461 74       		.sleb128 -12
 3564 0462 00       		.byte	0
 3565 0463 14       		.uleb128 0x14
 3566 0464 C0010000 		.4byte	.LASF59
 3567 0468 01       		.byte	0x1
 3568 0469 D002     		.2byte	0x2d0
 3569 046b 00000000 		.4byte	.LFB44
 3570 046f 24000000 		.4byte	.LFE44-.LFB44
 3571 0473 01       		.uleb128 0x1
 3572 0474 9C       		.byte	0x9c
 3573 0475 98040000 		.4byte	0x498
 3574 0479 12       		.uleb128 0x12
 3575 047a BA040000 		.4byte	.LASF42
 3576 047e 01       		.byte	0x1
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 114


 3577 047f D002     		.2byte	0x2d0
 3578 0481 81000000 		.4byte	0x81
 3579 0485 02       		.uleb128 0x2
 3580 0486 91       		.byte	0x91
 3581 0487 74       		.sleb128 -12
 3582 0488 12       		.uleb128 0x12
 3583 0489 16050000 		.4byte	.LASF60
 3584 048d 01       		.byte	0x1
 3585 048e D002     		.2byte	0x2d0
 3586 0490 76000000 		.4byte	0x76
 3587 0494 02       		.uleb128 0x2
 3588 0495 91       		.byte	0x91
 3589 0496 72       		.sleb128 -14
 3590 0497 00       		.byte	0
 3591 0498 13       		.uleb128 0x13
 3592 0499 E7030000 		.4byte	.LASF62
 3593 049d 01       		.byte	0x1
 3594 049e EB02     		.2byte	0x2eb
 3595 04a0 6B000000 		.4byte	0x6b
 3596 04a4 00000000 		.4byte	.LFB45
 3597 04a8 1C000000 		.4byte	.LFE45-.LFB45
 3598 04ac 01       		.uleb128 0x1
 3599 04ad 9C       		.byte	0x9c
 3600 04ae C2040000 		.4byte	0x4c2
 3601 04b2 12       		.uleb128 0x12
 3602 04b3 BA040000 		.4byte	.LASF42
 3603 04b7 01       		.byte	0x1
 3604 04b8 EB02     		.2byte	0x2eb
 3605 04ba 81000000 		.4byte	0x81
 3606 04be 02       		.uleb128 0x2
 3607 04bf 91       		.byte	0x91
 3608 04c0 74       		.sleb128 -12
 3609 04c1 00       		.byte	0
 3610 04c2 14       		.uleb128 0x14
 3611 04c3 F6010000 		.4byte	.LASF63
 3612 04c7 01       		.byte	0x1
 3613 04c8 0603     		.2byte	0x306
 3614 04ca 00000000 		.4byte	.LFB46
 3615 04ce 24000000 		.4byte	.LFE46-.LFB46
 3616 04d2 01       		.uleb128 0x1
 3617 04d3 9C       		.byte	0x9c
 3618 04d4 F7040000 		.4byte	0x4f7
 3619 04d8 12       		.uleb128 0x12
 3620 04d9 BA040000 		.4byte	.LASF42
 3621 04dd 01       		.byte	0x1
 3622 04de 0603     		.2byte	0x306
 3623 04e0 81000000 		.4byte	0x81
 3624 04e4 02       		.uleb128 0x2
 3625 04e5 91       		.byte	0x91
 3626 04e6 74       		.sleb128 -12
 3627 04e7 12       		.uleb128 0x12
 3628 04e8 C4030000 		.4byte	.LASF64
 3629 04ec 01       		.byte	0x1
 3630 04ed 0603     		.2byte	0x306
 3631 04ef 6B000000 		.4byte	0x6b
 3632 04f3 02       		.uleb128 0x2
 3633 04f4 91       		.byte	0x91
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 115


 3634 04f5 73       		.sleb128 -13
 3635 04f6 00       		.byte	0
 3636 04f7 13       		.uleb128 0x13
 3637 04f8 43070000 		.4byte	.LASF65
 3638 04fc 01       		.byte	0x1
 3639 04fd 2103     		.2byte	0x321
 3640 04ff 6B000000 		.4byte	0x6b
 3641 0503 00000000 		.4byte	.LFB47
 3642 0507 1C000000 		.4byte	.LFE47-.LFB47
 3643 050b 01       		.uleb128 0x1
 3644 050c 9C       		.byte	0x9c
 3645 050d 21050000 		.4byte	0x521
 3646 0511 12       		.uleb128 0x12
 3647 0512 22030000 		.4byte	.LASF51
 3648 0516 01       		.byte	0x1
 3649 0517 2103     		.2byte	0x321
 3650 0519 81000000 		.4byte	0x81
 3651 051d 02       		.uleb128 0x2
 3652 051e 91       		.byte	0x91
 3653 051f 74       		.sleb128 -12
 3654 0520 00       		.byte	0
 3655 0521 13       		.uleb128 0x13
 3656 0522 D6020000 		.4byte	.LASF66
 3657 0526 01       		.byte	0x1
 3658 0527 3C03     		.2byte	0x33c
 3659 0529 6B000000 		.4byte	0x6b
 3660 052d 00000000 		.4byte	.LFB48
 3661 0531 1C000000 		.4byte	.LFE48-.LFB48
 3662 0535 01       		.uleb128 0x1
 3663 0536 9C       		.byte	0x9c
 3664 0537 4B050000 		.4byte	0x54b
 3665 053b 12       		.uleb128 0x12
 3666 053c 22030000 		.4byte	.LASF51
 3667 0540 01       		.byte	0x1
 3668 0541 3C03     		.2byte	0x33c
 3669 0543 81000000 		.4byte	0x81
 3670 0547 02       		.uleb128 0x2
 3671 0548 91       		.byte	0x91
 3672 0549 74       		.sleb128 -12
 3673 054a 00       		.byte	0
 3674 054b 13       		.uleb128 0x13
 3675 054c CA030000 		.4byte	.LASF67
 3676 0550 01       		.byte	0x1
 3677 0551 5803     		.2byte	0x358
 3678 0553 6B000000 		.4byte	0x6b
 3679 0557 00000000 		.4byte	.LFB49
 3680 055b 1C000000 		.4byte	.LFE49-.LFB49
 3681 055f 01       		.uleb128 0x1
 3682 0560 9C       		.byte	0x9c
 3683 0561 75050000 		.4byte	0x575
 3684 0565 12       		.uleb128 0x12
 3685 0566 22030000 		.4byte	.LASF51
 3686 056a 01       		.byte	0x1
 3687 056b 5803     		.2byte	0x358
 3688 056d 81000000 		.4byte	0x81
 3689 0571 02       		.uleb128 0x2
 3690 0572 91       		.byte	0x91
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 116


 3691 0573 74       		.sleb128 -12
 3692 0574 00       		.byte	0
 3693 0575 13       		.uleb128 0x13
 3694 0576 EC040000 		.4byte	.LASF68
 3695 057a 01       		.byte	0x1
 3696 057b 7403     		.2byte	0x374
 3697 057d 6B000000 		.4byte	0x6b
 3698 0581 00000000 		.4byte	.LFB50
 3699 0585 1C000000 		.4byte	.LFE50-.LFB50
 3700 0589 01       		.uleb128 0x1
 3701 058a 9C       		.byte	0x9c
 3702 058b 9F050000 		.4byte	0x59f
 3703 058f 12       		.uleb128 0x12
 3704 0590 22030000 		.4byte	.LASF51
 3705 0594 01       		.byte	0x1
 3706 0595 7403     		.2byte	0x374
 3707 0597 81000000 		.4byte	0x81
 3708 059b 02       		.uleb128 0x2
 3709 059c 91       		.byte	0x91
 3710 059d 74       		.sleb128 -12
 3711 059e 00       		.byte	0
 3712 059f 14       		.uleb128 0x14
 3713 05a0 89030000 		.4byte	.LASF69
 3714 05a4 01       		.byte	0x1
 3715 05a5 9503     		.2byte	0x395
 3716 05a7 00000000 		.4byte	.LFB51
 3717 05ab 24000000 		.4byte	.LFE51-.LFB51
 3718 05af 01       		.uleb128 0x1
 3719 05b0 9C       		.byte	0x9c
 3720 05b1 D4050000 		.4byte	0x5d4
 3721 05b5 12       		.uleb128 0x12
 3722 05b6 22030000 		.4byte	.LASF51
 3723 05ba 01       		.byte	0x1
 3724 05bb 9503     		.2byte	0x395
 3725 05bd 81000000 		.4byte	0x81
 3726 05c1 02       		.uleb128 0x2
 3727 05c2 91       		.byte	0x91
 3728 05c3 74       		.sleb128 -12
 3729 05c4 12       		.uleb128 0x12
 3730 05c5 C4030000 		.4byte	.LASF64
 3731 05c9 01       		.byte	0x1
 3732 05ca 9503     		.2byte	0x395
 3733 05cc 6B000000 		.4byte	0x6b
 3734 05d0 02       		.uleb128 0x2
 3735 05d1 91       		.byte	0x91
 3736 05d2 73       		.sleb128 -13
 3737 05d3 00       		.byte	0
 3738 05d4 14       		.uleb128 0x14
 3739 05d5 59020000 		.4byte	.LASF70
 3740 05d9 01       		.byte	0x1
 3741 05da B103     		.2byte	0x3b1
 3742 05dc 00000000 		.4byte	.LFB52
 3743 05e0 24000000 		.4byte	.LFE52-.LFB52
 3744 05e4 01       		.uleb128 0x1
 3745 05e5 9C       		.byte	0x9c
 3746 05e6 09060000 		.4byte	0x609
 3747 05ea 12       		.uleb128 0x12
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 117


 3748 05eb 22030000 		.4byte	.LASF51
 3749 05ef 01       		.byte	0x1
 3750 05f0 B103     		.2byte	0x3b1
 3751 05f2 81000000 		.4byte	0x81
 3752 05f6 02       		.uleb128 0x2
 3753 05f7 91       		.byte	0x91
 3754 05f8 74       		.sleb128 -12
 3755 05f9 12       		.uleb128 0x12
 3756 05fa C4030000 		.4byte	.LASF64
 3757 05fe 01       		.byte	0x1
 3758 05ff B103     		.2byte	0x3b1
 3759 0601 6B000000 		.4byte	0x6b
 3760 0605 02       		.uleb128 0x2
 3761 0606 91       		.byte	0x91
 3762 0607 73       		.sleb128 -13
 3763 0608 00       		.byte	0
 3764 0609 14       		.uleb128 0x14
 3765 060a 26070000 		.4byte	.LASF71
 3766 060e 01       		.byte	0x1
 3767 060f CD03     		.2byte	0x3cd
 3768 0611 00000000 		.4byte	.LFB53
 3769 0615 24000000 		.4byte	.LFE53-.LFB53
 3770 0619 01       		.uleb128 0x1
 3771 061a 9C       		.byte	0x9c
 3772 061b 3E060000 		.4byte	0x63e
 3773 061f 12       		.uleb128 0x12
 3774 0620 22030000 		.4byte	.LASF51
 3775 0624 01       		.byte	0x1
 3776 0625 CD03     		.2byte	0x3cd
 3777 0627 81000000 		.4byte	0x81
 3778 062b 02       		.uleb128 0x2
 3779 062c 91       		.byte	0x91
 3780 062d 74       		.sleb128 -12
 3781 062e 12       		.uleb128 0x12
 3782 062f C4030000 		.4byte	.LASF64
 3783 0633 01       		.byte	0x1
 3784 0634 CD03     		.2byte	0x3cd
 3785 0636 6B000000 		.4byte	0x6b
 3786 063a 02       		.uleb128 0x2
 3787 063b 91       		.byte	0x91
 3788 063c 73       		.sleb128 -13
 3789 063d 00       		.byte	0
 3790 063e 14       		.uleb128 0x14
 3791 063f DF060000 		.4byte	.LASF72
 3792 0643 01       		.byte	0x1
 3793 0644 EA03     		.2byte	0x3ea
 3794 0646 00000000 		.4byte	.LFB54
 3795 064a 24000000 		.4byte	.LFE54-.LFB54
 3796 064e 01       		.uleb128 0x1
 3797 064f 9C       		.byte	0x9c
 3798 0650 73060000 		.4byte	0x673
 3799 0654 12       		.uleb128 0x12
 3800 0655 22030000 		.4byte	.LASF51
 3801 0659 01       		.byte	0x1
 3802 065a EA03     		.2byte	0x3ea
 3803 065c 81000000 		.4byte	0x81
 3804 0660 02       		.uleb128 0x2
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 118


 3805 0661 91       		.byte	0x91
 3806 0662 74       		.sleb128 -12
 3807 0663 12       		.uleb128 0x12
 3808 0664 C4030000 		.4byte	.LASF64
 3809 0668 01       		.byte	0x1
 3810 0669 EA03     		.2byte	0x3ea
 3811 066b 6B000000 		.4byte	0x6b
 3812 066f 02       		.uleb128 0x2
 3813 0670 91       		.byte	0x91
 3814 0671 73       		.sleb128 -13
 3815 0672 00       		.byte	0
 3816 0673 14       		.uleb128 0x14
 3817 0674 ED080000 		.4byte	.LASF73
 3818 0678 01       		.byte	0x1
 3819 0679 0604     		.2byte	0x406
 3820 067b 00000000 		.4byte	.LFB55
 3821 067f 24000000 		.4byte	.LFE55-.LFB55
 3822 0683 01       		.uleb128 0x1
 3823 0684 9C       		.byte	0x9c
 3824 0685 A8060000 		.4byte	0x6a8
 3825 0689 12       		.uleb128 0x12
 3826 068a 22030000 		.4byte	.LASF51
 3827 068e 01       		.byte	0x1
 3828 068f 0604     		.2byte	0x406
 3829 0691 81000000 		.4byte	0x81
 3830 0695 02       		.uleb128 0x2
 3831 0696 91       		.byte	0x91
 3832 0697 74       		.sleb128 -12
 3833 0698 12       		.uleb128 0x12
 3834 0699 C4030000 		.4byte	.LASF64
 3835 069d 01       		.byte	0x1
 3836 069e 0604     		.2byte	0x406
 3837 06a0 6B000000 		.4byte	0x6b
 3838 06a4 02       		.uleb128 0x2
 3839 06a5 91       		.byte	0x91
 3840 06a6 73       		.sleb128 -13
 3841 06a7 00       		.byte	0
 3842 06a8 14       		.uleb128 0x14
 3843 06a9 8C090000 		.4byte	.LASF74
 3844 06ad 01       		.byte	0x1
 3845 06ae 2204     		.2byte	0x422
 3846 06b0 00000000 		.4byte	.LFB56
 3847 06b4 24000000 		.4byte	.LFE56-.LFB56
 3848 06b8 01       		.uleb128 0x1
 3849 06b9 9C       		.byte	0x9c
 3850 06ba DD060000 		.4byte	0x6dd
 3851 06be 12       		.uleb128 0x12
 3852 06bf BA040000 		.4byte	.LASF42
 3853 06c3 01       		.byte	0x1
 3854 06c4 2204     		.2byte	0x422
 3855 06c6 81000000 		.4byte	0x81
 3856 06ca 02       		.uleb128 0x2
 3857 06cb 91       		.byte	0x91
 3858 06cc 74       		.sleb128 -12
 3859 06cd 12       		.uleb128 0x12
 3860 06ce C4030000 		.4byte	.LASF64
 3861 06d2 01       		.byte	0x1
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 119


 3862 06d3 2204     		.2byte	0x422
 3863 06d5 6B000000 		.4byte	0x6b
 3864 06d9 02       		.uleb128 0x2
 3865 06da 91       		.byte	0x91
 3866 06db 73       		.sleb128 -13
 3867 06dc 00       		.byte	0
 3868 06dd 15       		.uleb128 0x15
 3869 06de B4050000 		.4byte	.LASF75
 3870 06e2 01       		.byte	0x1
 3871 06e3 5004     		.2byte	0x450
 3872 06e5 81000000 		.4byte	0x81
 3873 06e9 00000000 		.4byte	.LFB57
 3874 06ed 3C010000 		.4byte	.LFE57-.LFB57
 3875 06f1 01       		.uleb128 0x1
 3876 06f2 9C       		.byte	0x9c
 3877 06f3 64070000 		.4byte	0x764
 3878 06f7 12       		.uleb128 0x12
 3879 06f8 BA040000 		.4byte	.LASF42
 3880 06fc 01       		.byte	0x1
 3881 06fd 5004     		.2byte	0x450
 3882 06ff 81000000 		.4byte	0x81
 3883 0703 02       		.uleb128 0x2
 3884 0704 91       		.byte	0x91
 3885 0705 6C       		.sleb128 -20
 3886 0706 11       		.uleb128 0x11
 3887 0707 22030000 		.4byte	.LASF51
 3888 070b 01       		.byte	0x1
 3889 070c 5204     		.2byte	0x452
 3890 070e 6B000000 		.4byte	0x6b
 3891 0712 02       		.uleb128 0x2
 3892 0713 91       		.byte	0x91
 3893 0714 77       		.sleb128 -9
 3894 0715 11       		.uleb128 0x11
 3895 0716 A0050000 		.4byte	.LASF76
 3896 071a 01       		.byte	0x1
 3897 071b 5304     		.2byte	0x453
 3898 071d 6B000000 		.4byte	0x6b
 3899 0721 02       		.uleb128 0x2
 3900 0722 91       		.byte	0x91
 3901 0723 74       		.sleb128 -12
 3902 0724 11       		.uleb128 0x11
 3903 0725 45090000 		.4byte	.LASF77
 3904 0729 01       		.byte	0x1
 3905 072a 5404     		.2byte	0x454
 3906 072c 6B000000 		.4byte	0x6b
 3907 0730 02       		.uleb128 0x2
 3908 0731 91       		.byte	0x91
 3909 0732 73       		.sleb128 -13
 3910 0733 11       		.uleb128 0x11
 3911 0734 02090000 		.4byte	.LASF78
 3912 0738 01       		.byte	0x1
 3913 0739 5604     		.2byte	0x456
 3914 073b 6B000000 		.4byte	0x6b
 3915 073f 02       		.uleb128 0x2
 3916 0740 91       		.byte	0x91
 3917 0741 76       		.sleb128 -10
 3918 0742 11       		.uleb128 0x11
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 120


 3919 0743 23040000 		.4byte	.LASF79
 3920 0747 01       		.byte	0x1
 3921 0748 5704     		.2byte	0x457
 3922 074a 6B000000 		.4byte	0x6b
 3923 074e 02       		.uleb128 0x2
 3924 074f 91       		.byte	0x91
 3925 0750 75       		.sleb128 -11
 3926 0751 11       		.uleb128 0x11
 3927 0752 2F000000 		.4byte	.LASF80
 3928 0756 01       		.byte	0x1
 3929 0757 5804     		.2byte	0x458
 3930 0759 64070000 		.4byte	0x764
 3931 075d 05       		.uleb128 0x5
 3932 075e 03       		.byte	0x3
 3933 075f 20000000 		.4byte	CapSense_debounceCounter.5379
 3934 0763 00       		.byte	0
 3935 0764 16       		.uleb128 0x16
 3936 0765 6B000000 		.4byte	0x6b
 3937 0769 74070000 		.4byte	0x774
 3938 076d 17       		.uleb128 0x17
 3939 076e B7000000 		.4byte	0xb7
 3940 0772 00       		.byte	0
 3941 0773 00       		.byte	0
 3942 0774 15       		.uleb128 0x15
 3943 0775 770A0000 		.4byte	.LASF81
 3944 0779 01       		.byte	0x1
 3945 077a A704     		.2byte	0x4a7
 3946 077c 81000000 		.4byte	0x81
 3947 0780 00000000 		.4byte	.LFB58
 3948 0784 42000000 		.4byte	.LFE58-.LFB58
 3949 0788 01       		.uleb128 0x1
 3950 0789 9C       		.byte	0x9c
 3951 078a CB070000 		.4byte	0x7cb
 3952 078e 12       		.uleb128 0x12
 3953 078f 22030000 		.4byte	.LASF51
 3954 0793 01       		.byte	0x1
 3955 0794 A704     		.2byte	0x4a7
 3956 0796 81000000 		.4byte	0x81
 3957 079a 02       		.uleb128 0x2
 3958 079b 91       		.byte	0x91
 3959 079c 64       		.sleb128 -28
 3960 079d 11       		.uleb128 0x11
 3961 079e 35050000 		.4byte	.LASF82
 3962 07a2 01       		.byte	0x1
 3963 07a3 A904     		.2byte	0x4a9
 3964 07a5 81000000 		.4byte	0x81
 3965 07a9 02       		.uleb128 0x2
 3966 07aa 91       		.byte	0x91
 3967 07ab 74       		.sleb128 -12
 3968 07ac 11       		.uleb128 0x11
 3969 07ad 10010000 		.4byte	.LASF83
 3970 07b1 01       		.byte	0x1
 3971 07b2 AA04     		.2byte	0x4aa
 3972 07b4 81000000 		.4byte	0x81
 3973 07b8 02       		.uleb128 0x2
 3974 07b9 91       		.byte	0x91
 3975 07ba 6C       		.sleb128 -20
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 121


 3976 07bb 11       		.uleb128 0x11
 3977 07bc CE090000 		.4byte	.LASF84
 3978 07c0 01       		.byte	0x1
 3979 07c1 AB04     		.2byte	0x4ab
 3980 07c3 81000000 		.4byte	0x81
 3981 07c7 02       		.uleb128 0x2
 3982 07c8 91       		.byte	0x91
 3983 07c9 70       		.sleb128 -16
 3984 07ca 00       		.byte	0
 3985 07cb 15       		.uleb128 0x15
 3986 07cc 4F040000 		.4byte	.LASF85
 3987 07d0 01       		.byte	0x1
 3988 07d1 D504     		.2byte	0x4d5
 3989 07d3 81000000 		.4byte	0x81
 3990 07d7 00000000 		.4byte	.LFB59
 3991 07db 36000000 		.4byte	.LFE59-.LFB59
 3992 07df 01       		.uleb128 0x1
 3993 07e0 9C       		.byte	0x9c
 3994 07e1 02080000 		.4byte	0x802
 3995 07e5 0F       		.uleb128 0xf
 3996 07e6 6900     		.ascii	"i\000"
 3997 07e8 01       		.byte	0x1
 3998 07e9 D804     		.2byte	0x4d8
 3999 07eb 81000000 		.4byte	0x81
 4000 07ef 02       		.uleb128 0x2
 4001 07f0 91       		.byte	0x91
 4002 07f1 74       		.sleb128 -12
 4003 07f2 11       		.uleb128 0x11
 4004 07f3 CE090000 		.4byte	.LASF84
 4005 07f7 01       		.byte	0x1
 4006 07f8 D904     		.2byte	0x4d9
 4007 07fa 81000000 		.4byte	0x81
 4008 07fe 02       		.uleb128 0x2
 4009 07ff 91       		.byte	0x91
 4010 0800 70       		.sleb128 -16
 4011 0801 00       		.byte	0
 4012 0802 10       		.uleb128 0x10
 4013 0803 D1040000 		.4byte	.LASF86
 4014 0807 01       		.byte	0x1
 4015 0808 0405     		.2byte	0x504
 4016 080a 00000000 		.4byte	.LFB60
 4017 080e 5C000000 		.4byte	.LFE60-.LFB60
 4018 0812 01       		.uleb128 0x1
 4019 0813 9C       		.byte	0x9c
 4020 0814 46080000 		.4byte	0x846
 4021 0818 12       		.uleb128 0x12
 4022 0819 22030000 		.4byte	.LASF51
 4023 081d 01       		.byte	0x1
 4024 081e 0405     		.2byte	0x504
 4025 0820 81000000 		.4byte	0x81
 4026 0824 02       		.uleb128 0x2
 4027 0825 91       		.byte	0x91
 4028 0826 6C       		.sleb128 -20
 4029 0827 11       		.uleb128 0x11
 4030 0828 35050000 		.4byte	.LASF82
 4031 082c 01       		.byte	0x1
 4032 082d 0705     		.2byte	0x507
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 122


 4033 082f 6B000000 		.4byte	0x6b
 4034 0833 02       		.uleb128 0x2
 4035 0834 91       		.byte	0x91
 4036 0835 77       		.sleb128 -9
 4037 0836 11       		.uleb128 0x11
 4038 0837 10010000 		.4byte	.LASF83
 4039 083b 01       		.byte	0x1
 4040 083c 0805     		.2byte	0x508
 4041 083e 6B000000 		.4byte	0x6b
 4042 0842 02       		.uleb128 0x2
 4043 0843 91       		.byte	0x91
 4044 0844 76       		.sleb128 -10
 4045 0845 00       		.byte	0
 4046 0846 10       		.uleb128 0x10
 4047 0847 A8000000 		.4byte	.LASF87
 4048 084b 01       		.byte	0x1
 4049 084c 2F05     		.2byte	0x52f
 4050 084e 00000000 		.4byte	.LFB61
 4051 0852 5C000000 		.4byte	.LFE61-.LFB61
 4052 0856 01       		.uleb128 0x1
 4053 0857 9C       		.byte	0x9c
 4054 0858 8A080000 		.4byte	0x88a
 4055 085c 12       		.uleb128 0x12
 4056 085d 22030000 		.4byte	.LASF51
 4057 0861 01       		.byte	0x1
 4058 0862 2F05     		.2byte	0x52f
 4059 0864 81000000 		.4byte	0x81
 4060 0868 02       		.uleb128 0x2
 4061 0869 91       		.byte	0x91
 4062 086a 6C       		.sleb128 -20
 4063 086b 11       		.uleb128 0x11
 4064 086c 35050000 		.4byte	.LASF82
 4065 0870 01       		.byte	0x1
 4066 0871 3105     		.2byte	0x531
 4067 0873 6B000000 		.4byte	0x6b
 4068 0877 02       		.uleb128 0x2
 4069 0878 91       		.byte	0x91
 4070 0879 77       		.sleb128 -9
 4071 087a 11       		.uleb128 0x11
 4072 087b 10010000 		.4byte	.LASF83
 4073 087f 01       		.byte	0x1
 4074 0880 3205     		.2byte	0x532
 4075 0882 6B000000 		.4byte	0x6b
 4076 0886 02       		.uleb128 0x2
 4077 0887 91       		.byte	0x91
 4078 0888 76       		.sleb128 -10
 4079 0889 00       		.byte	0
 4080 088a 13       		.uleb128 0x13
 4081 088b CD070000 		.4byte	.LASF88
 4082 088f 01       		.byte	0x1
 4083 0890 6105     		.2byte	0x561
 4084 0892 6B000000 		.4byte	0x6b
 4085 0896 00000000 		.4byte	.LFB62
 4086 089a B8000000 		.4byte	.LFE62-.LFB62
 4087 089e 01       		.uleb128 0x1
 4088 089f 9C       		.byte	0x9c
 4089 08a0 0C090000 		.4byte	0x90c
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 123


 4090 08a4 12       		.uleb128 0x12
 4091 08a5 06040000 		.4byte	.LASF89
 4092 08a9 01       		.byte	0x1
 4093 08aa 6105     		.2byte	0x561
 4094 08ac 6B000000 		.4byte	0x6b
 4095 08b0 02       		.uleb128 0x2
 4096 08b1 91       		.byte	0x91
 4097 08b2 67       		.sleb128 -25
 4098 08b3 12       		.uleb128 0x12
 4099 08b4 B2020000 		.4byte	.LASF90
 4100 08b8 01       		.byte	0x1
 4101 08b9 6105     		.2byte	0x561
 4102 08bb 6B000000 		.4byte	0x6b
 4103 08bf 02       		.uleb128 0x2
 4104 08c0 91       		.byte	0x91
 4105 08c1 66       		.sleb128 -26
 4106 08c2 12       		.uleb128 0x12
 4107 08c3 02090000 		.4byte	.LASF78
 4108 08c7 01       		.byte	0x1
 4109 08c8 6105     		.2byte	0x561
 4110 08ca 6B000000 		.4byte	0x6b
 4111 08ce 02       		.uleb128 0x2
 4112 08cf 91       		.byte	0x91
 4113 08d0 65       		.sleb128 -27
 4114 08d1 0F       		.uleb128 0xf
 4115 08d2 6900     		.ascii	"i\000"
 4116 08d4 01       		.byte	0x1
 4117 08d5 6405     		.2byte	0x564
 4118 08d7 6B000000 		.4byte	0x6b
 4119 08db 02       		.uleb128 0x2
 4120 08dc 91       		.byte	0x91
 4121 08dd 6F       		.sleb128 -17
 4122 08de 11       		.uleb128 0x11
 4123 08df 4F080000 		.4byte	.LASF91
 4124 08e3 01       		.byte	0x1
 4125 08e4 6E05     		.2byte	0x56e
 4126 08e6 6B000000 		.4byte	0x6b
 4127 08ea 02       		.uleb128 0x2
 4128 08eb 91       		.byte	0x91
 4129 08ec 6E       		.sleb128 -18
 4130 08ed 11       		.uleb128 0x11
 4131 08ee C8070000 		.4byte	.LASF92
 4132 08f2 01       		.byte	0x1
 4133 08f3 7005     		.2byte	0x570
 4134 08f5 6B000000 		.4byte	0x6b
 4135 08f9 02       		.uleb128 0x2
 4136 08fa 91       		.byte	0x91
 4137 08fb 6D       		.sleb128 -19
 4138 08fc 11       		.uleb128 0x11
 4139 08fd 18070000 		.4byte	.LASF93
 4140 0901 01       		.byte	0x1
 4141 0902 7105     		.2byte	0x571
 4142 0904 6F010000 		.4byte	0x16f
 4143 0908 02       		.uleb128 0x2
 4144 0909 91       		.byte	0x91
 4145 090a 68       		.sleb128 -24
 4146 090b 00       		.byte	0
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 124


 4147 090c 15       		.uleb128 0x15
 4148 090d 99060000 		.4byte	.LASF94
 4149 0911 01       		.byte	0x1
 4150 0912 0006     		.2byte	0x600
 4151 0914 6B000000 		.4byte	0x6b
 4152 0918 00000000 		.4byte	.LFB63
 4153 091c A0010000 		.4byte	.LFE63-.LFB63
 4154 0920 01       		.uleb128 0x1
 4155 0921 9C       		.byte	0x9c
 4156 0922 DE090000 		.4byte	0x9de
 4157 0926 12       		.uleb128 0x12
 4158 0927 4F080000 		.4byte	.LASF91
 4159 092b 01       		.byte	0x1
 4160 092c 0006     		.2byte	0x600
 4161 092e 6B000000 		.4byte	0x6b
 4162 0932 02       		.uleb128 0x2
 4163 0933 91       		.byte	0x91
 4164 0934 57       		.sleb128 -41
 4165 0935 12       		.uleb128 0x12
 4166 0936 06040000 		.4byte	.LASF89
 4167 093a 01       		.byte	0x1
 4168 093b 0006     		.2byte	0x600
 4169 093d 6B000000 		.4byte	0x6b
 4170 0941 02       		.uleb128 0x2
 4171 0942 91       		.byte	0x91
 4172 0943 56       		.sleb128 -42
 4173 0944 12       		.uleb128 0x12
 4174 0945 B2020000 		.4byte	.LASF90
 4175 0949 01       		.byte	0x1
 4176 094a 0106     		.2byte	0x601
 4177 094c 6B000000 		.4byte	0x6b
 4178 0950 02       		.uleb128 0x2
 4179 0951 91       		.byte	0x91
 4180 0952 55       		.sleb128 -43
 4181 0953 12       		.uleb128 0x12
 4182 0954 2A050000 		.4byte	.LASF95
 4183 0958 01       		.byte	0x1
 4184 0959 0106     		.2byte	0x601
 4185 095b 76000000 		.4byte	0x76
 4186 095f 02       		.uleb128 0x2
 4187 0960 91       		.byte	0x91
 4188 0961 52       		.sleb128 -46
 4189 0962 12       		.uleb128 0x12
 4190 0963 7B080000 		.4byte	.LASF52
 4191 0967 01       		.byte	0x1
 4192 0968 0106     		.2byte	0x601
 4193 096a 6B000000 		.4byte	0x6b
 4194 096e 02       		.uleb128 0x2
 4195 096f 91       		.byte	0x91
 4196 0970 00       		.sleb128 0
 4197 0971 11       		.uleb128 0x11
 4198 0972 B8010000 		.4byte	.LASF96
 4199 0976 01       		.byte	0x1
 4200 0977 0506     		.2byte	0x605
 4201 0979 6B000000 		.4byte	0x6b
 4202 097d 02       		.uleb128 0x2
 4203 097e 91       		.byte	0x91
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 125


 4204 097f 6F       		.sleb128 -17
 4205 0980 11       		.uleb128 0x11
 4206 0981 3A010000 		.4byte	.LASF97
 4207 0985 01       		.byte	0x1
 4208 0986 0606     		.2byte	0x606
 4209 0988 6B000000 		.4byte	0x6b
 4210 098c 02       		.uleb128 0x2
 4211 098d 91       		.byte	0x91
 4212 098e 67       		.sleb128 -25
 4213 098f 11       		.uleb128 0x11
 4214 0990 3E050000 		.4byte	.LASF98
 4215 0994 01       		.byte	0x1
 4216 0995 0B06     		.2byte	0x60b
 4217 0997 DE090000 		.4byte	0x9de
 4218 099b 05       		.uleb128 0x5
 4219 099c 03       		.byte	0x3
 4220 099d 24000000 		.4byte	CapSense_centroid.5431
 4221 09a1 11       		.uleb128 0x11
 4222 09a2 B90A0000 		.4byte	.LASF99
 4223 09a6 01       		.byte	0x1
 4224 09a7 1206     		.2byte	0x612
 4225 09a9 6B000000 		.4byte	0x6b
 4226 09ad 02       		.uleb128 0x2
 4227 09ae 91       		.byte	0x91
 4228 09af 5B       		.sleb128 -37
 4229 09b0 11       		.uleb128 0x11
 4230 09b1 5F070000 		.4byte	.LASF100
 4231 09b5 01       		.byte	0x1
 4232 09b6 1306     		.2byte	0x613
 4233 09b8 81000000 		.4byte	0x81
 4234 09bc 02       		.uleb128 0x2
 4235 09bd 91       		.byte	0x91
 4236 09be 60       		.sleb128 -32
 4237 09bf 11       		.uleb128 0x11
 4238 09c0 2B080000 		.4byte	.LASF101
 4239 09c4 01       		.byte	0x1
 4240 09c5 1406     		.2byte	0x614
 4241 09c7 97000000 		.4byte	0x97
 4242 09cb 02       		.uleb128 0x2
 4243 09cc 91       		.byte	0x91
 4244 09cd 5C       		.sleb128 -36
 4245 09ce 11       		.uleb128 0x11
 4246 09cf 18070000 		.4byte	.LASF93
 4247 09d3 01       		.byte	0x1
 4248 09d4 1606     		.2byte	0x616
 4249 09d6 6F010000 		.4byte	0x16f
 4250 09da 02       		.uleb128 0x2
 4251 09db 91       		.byte	0x91
 4252 09dc 68       		.sleb128 -24
 4253 09dd 00       		.byte	0
 4254 09de 16       		.uleb128 0x16
 4255 09df 6B000000 		.4byte	0x6b
 4256 09e3 EE090000 		.4byte	0x9ee
 4257 09e7 17       		.uleb128 0x17
 4258 09e8 B7000000 		.4byte	0xb7
 4259 09ec 02       		.byte	0x2
 4260 09ed 00       		.byte	0
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 126


 4261 09ee 15       		.uleb128 0x15
 4262 09ef 82070000 		.4byte	.LASF102
 4263 09f3 01       		.byte	0x1
 4264 09f4 D306     		.2byte	0x6d3
 4265 09f6 76000000 		.4byte	0x76
 4266 09fa 00000000 		.4byte	.LFB64
 4267 09fe B8010000 		.4byte	.LFE64-.LFB64
 4268 0a02 01       		.uleb128 0x1
 4269 0a03 9C       		.byte	0x9c
 4270 0a04 900A0000 		.4byte	0xa90
 4271 0a08 12       		.uleb128 0x12
 4272 0a09 22030000 		.4byte	.LASF51
 4273 0a0d 01       		.byte	0x1
 4274 0a0e D306     		.2byte	0x6d3
 4275 0a10 81000000 		.4byte	0x81
 4276 0a14 02       		.uleb128 0x2
 4277 0a15 91       		.byte	0x91
 4278 0a16 5C       		.sleb128 -36
 4279 0a17 11       		.uleb128 0x11
 4280 0a18 E7000000 		.4byte	.LASF103
 4281 0a1c 01       		.byte	0x1
 4282 0a1d DA06     		.2byte	0x6da
 4283 0a1f 6B000000 		.4byte	0x6b
 4284 0a23 02       		.uleb128 0x2
 4285 0a24 91       		.byte	0x91
 4286 0a25 68       		.sleb128 -24
 4287 0a26 11       		.uleb128 0x11
 4288 0a27 09070000 		.4byte	.LASF104
 4289 0a2b 01       		.byte	0x1
 4290 0a2c DB06     		.2byte	0x6db
 4291 0a2e 6B000000 		.4byte	0x6b
 4292 0a32 02       		.uleb128 0x2
 4293 0a33 91       		.byte	0x91
 4294 0a34 6D       		.sleb128 -19
 4295 0a35 11       		.uleb128 0x11
 4296 0a36 C7020000 		.4byte	.LASF105
 4297 0a3a 01       		.byte	0x1
 4298 0a3b DC06     		.2byte	0x6dc
 4299 0a3d 6B000000 		.4byte	0x6b
 4300 0a41 02       		.uleb128 0x2
 4301 0a42 91       		.byte	0x91
 4302 0a43 6C       		.sleb128 -20
 4303 0a44 11       		.uleb128 0x11
 4304 0a45 BF000000 		.4byte	.LASF106
 4305 0a49 01       		.byte	0x1
 4306 0a4a E106     		.2byte	0x6e1
 4307 0a4c 6B000000 		.4byte	0x6b
 4308 0a50 02       		.uleb128 0x2
 4309 0a51 91       		.byte	0x91
 4310 0a52 67       		.sleb128 -25
 4311 0a53 11       		.uleb128 0x11
 4312 0a54 4F080000 		.4byte	.LASF91
 4313 0a58 01       		.byte	0x1
 4314 0a59 E606     		.2byte	0x6e6
 4315 0a5b 6B000000 		.4byte	0x6b
 4316 0a5f 02       		.uleb128 0x2
 4317 0a60 91       		.byte	0x91
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 127


 4318 0a61 69       		.sleb128 -23
 4319 0a62 11       		.uleb128 0x11
 4320 0a63 B90A0000 		.4byte	.LASF99
 4321 0a67 01       		.byte	0x1
 4322 0a68 E706     		.2byte	0x6e7
 4323 0a6a 76000000 		.4byte	0x76
 4324 0a6e 02       		.uleb128 0x2
 4325 0a6f 91       		.byte	0x91
 4326 0a70 6E       		.sleb128 -18
 4327 0a71 11       		.uleb128 0x11
 4328 0a72 06040000 		.4byte	.LASF89
 4329 0a76 01       		.byte	0x1
 4330 0a77 E806     		.2byte	0x6e8
 4331 0a79 6B000000 		.4byte	0x6b
 4332 0a7d 02       		.uleb128 0x2
 4333 0a7e 91       		.byte	0x91
 4334 0a7f 6B       		.sleb128 -21
 4335 0a80 11       		.uleb128 0x11
 4336 0a81 B2020000 		.4byte	.LASF90
 4337 0a85 01       		.byte	0x1
 4338 0a86 E906     		.2byte	0x6e9
 4339 0a88 6B000000 		.4byte	0x6b
 4340 0a8c 02       		.uleb128 0x2
 4341 0a8d 91       		.byte	0x91
 4342 0a8e 6A       		.sleb128 -22
 4343 0a8f 00       		.byte	0
 4344 0a90 15       		.uleb128 0x15
 4345 0a91 170A0000 		.4byte	.LASF107
 4346 0a95 01       		.byte	0x1
 4347 0a96 9E07     		.2byte	0x79e
 4348 0a98 76000000 		.4byte	0x76
 4349 0a9c 00000000 		.4byte	.LFB65
 4350 0aa0 98000000 		.4byte	.LFE65-.LFB65
 4351 0aa4 01       		.uleb128 0x1
 4352 0aa5 9C       		.byte	0x9c
 4353 0aa6 F60A0000 		.4byte	0xaf6
 4354 0aaa 12       		.uleb128 0x12
 4355 0aab 22030000 		.4byte	.LASF51
 4356 0aaf 01       		.byte	0x1
 4357 0ab0 9E07     		.2byte	0x79e
 4358 0ab2 81000000 		.4byte	0x81
 4359 0ab6 02       		.uleb128 0x2
 4360 0ab7 91       		.byte	0x91
 4361 0ab8 64       		.sleb128 -28
 4362 0ab9 11       		.uleb128 0x11
 4363 0aba 4F080000 		.4byte	.LASF91
 4364 0abe 01       		.byte	0x1
 4365 0abf AD07     		.2byte	0x7ad
 4366 0ac1 6B000000 		.4byte	0x6b
 4367 0ac5 02       		.uleb128 0x2
 4368 0ac6 91       		.byte	0x91
 4369 0ac7 6B       		.sleb128 -21
 4370 0ac8 11       		.uleb128 0x11
 4371 0ac9 B90A0000 		.4byte	.LASF99
 4372 0acd 01       		.byte	0x1
 4373 0ace AE07     		.2byte	0x7ae
 4374 0ad0 76000000 		.4byte	0x76
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 128


 4375 0ad4 02       		.uleb128 0x2
 4376 0ad5 91       		.byte	0x91
 4377 0ad6 6E       		.sleb128 -18
 4378 0ad7 11       		.uleb128 0x11
 4379 0ad8 06040000 		.4byte	.LASF89
 4380 0adc 01       		.byte	0x1
 4381 0add AF07     		.2byte	0x7af
 4382 0adf 6B000000 		.4byte	0x6b
 4383 0ae3 02       		.uleb128 0x2
 4384 0ae4 91       		.byte	0x91
 4385 0ae5 6D       		.sleb128 -19
 4386 0ae6 11       		.uleb128 0x11
 4387 0ae7 B2020000 		.4byte	.LASF90
 4388 0aeb 01       		.byte	0x1
 4389 0aec B007     		.2byte	0x7b0
 4390 0aee 6B000000 		.4byte	0x6b
 4391 0af2 02       		.uleb128 0x2
 4392 0af3 91       		.byte	0x91
 4393 0af4 6C       		.sleb128 -20
 4394 0af5 00       		.byte	0
 4395 0af6 13       		.uleb128 0x13
 4396 0af7 440A0000 		.4byte	.LASF108
 4397 0afb 01       		.byte	0x1
 4398 0afc 4B09     		.2byte	0x94b
 4399 0afe 76000000 		.4byte	0x76
 4400 0b02 00000000 		.4byte	.LFB66
 4401 0b06 76000000 		.4byte	.LFE66-.LFB66
 4402 0b0a 01       		.uleb128 0x1
 4403 0b0b 9C       		.byte	0x9c
 4404 0b0c 4A0B0000 		.4byte	0xb4a
 4405 0b10 18       		.uleb128 0x18
 4406 0b11 783100   		.ascii	"x1\000"
 4407 0b14 01       		.byte	0x1
 4408 0b15 4B09     		.2byte	0x94b
 4409 0b17 76000000 		.4byte	0x76
 4410 0b1b 02       		.uleb128 0x2
 4411 0b1c 91       		.byte	0x91
 4412 0b1d 66       		.sleb128 -26
 4413 0b1e 18       		.uleb128 0x18
 4414 0b1f 783200   		.ascii	"x2\000"
 4415 0b22 01       		.byte	0x1
 4416 0b23 4B09     		.2byte	0x94b
 4417 0b25 76000000 		.4byte	0x76
 4418 0b29 02       		.uleb128 0x2
 4419 0b2a 91       		.byte	0x91
 4420 0b2b 64       		.sleb128 -28
 4421 0b2c 18       		.uleb128 0x18
 4422 0b2d 783300   		.ascii	"x3\000"
 4423 0b30 01       		.byte	0x1
 4424 0b31 4B09     		.2byte	0x94b
 4425 0b33 76000000 		.4byte	0x76
 4426 0b37 02       		.uleb128 0x2
 4427 0b38 91       		.byte	0x91
 4428 0b39 62       		.sleb128 -30
 4429 0b3a 0F       		.uleb128 0xf
 4430 0b3b 746D7000 		.ascii	"tmp\000"
 4431 0b3f 01       		.byte	0x1
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 129


 4432 0b40 4D09     		.2byte	0x94d
 4433 0b42 76000000 		.4byte	0x76
 4434 0b46 02       		.uleb128 0x2
 4435 0b47 91       		.byte	0x91
 4436 0b48 6E       		.sleb128 -18
 4437 0b49 00       		.byte	0
 4438 0b4a 15       		.uleb128 0x15
 4439 0b4b 5A030000 		.4byte	.LASF109
 4440 0b4f 01       		.byte	0x1
 4441 0b50 7C09     		.2byte	0x97c
 4442 0b52 76000000 		.4byte	0x76
 4443 0b56 00000000 		.4byte	.LFB67
 4444 0b5a 46000000 		.4byte	.LFE67-.LFB67
 4445 0b5e 01       		.uleb128 0x1
 4446 0b5f 9C       		.byte	0x9c
 4447 0b60 9E0B0000 		.4byte	0xb9e
 4448 0b64 18       		.uleb128 0x18
 4449 0b65 783100   		.ascii	"x1\000"
 4450 0b68 01       		.byte	0x1
 4451 0b69 7C09     		.2byte	0x97c
 4452 0b6b 76000000 		.4byte	0x76
 4453 0b6f 02       		.uleb128 0x2
 4454 0b70 91       		.byte	0x91
 4455 0b71 66       		.sleb128 -26
 4456 0b72 18       		.uleb128 0x18
 4457 0b73 783200   		.ascii	"x2\000"
 4458 0b76 01       		.byte	0x1
 4459 0b77 7C09     		.2byte	0x97c
 4460 0b79 76000000 		.4byte	0x76
 4461 0b7d 02       		.uleb128 0x2
 4462 0b7e 91       		.byte	0x91
 4463 0b7f 64       		.sleb128 -28
 4464 0b80 18       		.uleb128 0x18
 4465 0b81 783300   		.ascii	"x3\000"
 4466 0b84 01       		.byte	0x1
 4467 0b85 7C09     		.2byte	0x97c
 4468 0b87 76000000 		.4byte	0x76
 4469 0b8b 02       		.uleb128 0x2
 4470 0b8c 91       		.byte	0x91
 4471 0b8d 62       		.sleb128 -30
 4472 0b8e 0F       		.uleb128 0xf
 4473 0b8f 746D7000 		.ascii	"tmp\000"
 4474 0b93 01       		.byte	0x1
 4475 0b94 7E09     		.2byte	0x97e
 4476 0b96 81000000 		.4byte	0x81
 4477 0b9a 02       		.uleb128 0x2
 4478 0b9b 91       		.byte	0x91
 4479 0b9c 6C       		.sleb128 -20
 4480 0b9d 00       		.byte	0
 4481 0b9e 13       		.uleb128 0x13
 4482 0b9f 1B000000 		.4byte	.LASF110
 4483 0ba3 01       		.byte	0x1
 4484 0ba4 C309     		.2byte	0x9c3
 4485 0ba6 76000000 		.4byte	0x76
 4486 0baa 00000000 		.4byte	.LFB68
 4487 0bae 3C000000 		.4byte	.LFE68-.LFB68
 4488 0bb2 01       		.uleb128 0x1
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 130


 4489 0bb3 9C       		.byte	0x9c
 4490 0bb4 E40B0000 		.4byte	0xbe4
 4491 0bb8 18       		.uleb128 0x18
 4492 0bb9 783100   		.ascii	"x1\000"
 4493 0bbc 01       		.byte	0x1
 4494 0bbd C309     		.2byte	0x9c3
 4495 0bbf 76000000 		.4byte	0x76
 4496 0bc3 02       		.uleb128 0x2
 4497 0bc4 91       		.byte	0x91
 4498 0bc5 6E       		.sleb128 -18
 4499 0bc6 18       		.uleb128 0x18
 4500 0bc7 783200   		.ascii	"x2\000"
 4501 0bca 01       		.byte	0x1
 4502 0bcb C309     		.2byte	0x9c3
 4503 0bcd 76000000 		.4byte	0x76
 4504 0bd1 02       		.uleb128 0x2
 4505 0bd2 91       		.byte	0x91
 4506 0bd3 6C       		.sleb128 -20
 4507 0bd4 0F       		.uleb128 0xf
 4508 0bd5 746D7000 		.ascii	"tmp\000"
 4509 0bd9 01       		.byte	0x1
 4510 0bda C509     		.2byte	0x9c5
 4511 0bdc 81000000 		.4byte	0x81
 4512 0be0 02       		.uleb128 0x2
 4513 0be1 91       		.byte	0x91
 4514 0be2 74       		.sleb128 -12
 4515 0be3 00       		.byte	0
 4516 0be4 13       		.uleb128 0x13
 4517 0be5 87050000 		.4byte	.LASF111
 4518 0be9 01       		.byte	0x1
 4519 0bea AC0A     		.2byte	0xaac
 4520 0bec 81000000 		.4byte	0x81
 4521 0bf0 00000000 		.4byte	.LFB69
 4522 0bf4 1C000000 		.4byte	.LFE69-.LFB69
 4523 0bf8 01       		.uleb128 0x1
 4524 0bf9 9C       		.byte	0x9c
 4525 0bfa 0E0C0000 		.4byte	0xc0e
 4526 0bfe 12       		.uleb128 0x12
 4527 0bff BA040000 		.4byte	.LASF42
 4528 0c03 01       		.byte	0x1
 4529 0c04 AC0A     		.2byte	0xaac
 4530 0c06 81000000 		.4byte	0x81
 4531 0c0a 02       		.uleb128 0x2
 4532 0c0b 91       		.byte	0x91
 4533 0c0c 74       		.sleb128 -12
 4534 0c0d 00       		.byte	0
 4535 0c0e 13       		.uleb128 0x13
 4536 0c0f C2060000 		.4byte	.LASF112
 4537 0c13 01       		.byte	0x1
 4538 0c14 C60A     		.2byte	0xac6
 4539 0c16 6B000000 		.4byte	0x6b
 4540 0c1a 00000000 		.4byte	.LFB70
 4541 0c1e 1C000000 		.4byte	.LFE70-.LFB70
 4542 0c22 01       		.uleb128 0x1
 4543 0c23 9C       		.byte	0x9c
 4544 0c24 380C0000 		.4byte	0xc38
 4545 0c28 12       		.uleb128 0x12
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 131


 4546 0c29 BA040000 		.4byte	.LASF42
 4547 0c2d 01       		.byte	0x1
 4548 0c2e C60A     		.2byte	0xac6
 4549 0c30 81000000 		.4byte	0x81
 4550 0c34 02       		.uleb128 0x2
 4551 0c35 91       		.byte	0x91
 4552 0c36 74       		.sleb128 -12
 4553 0c37 00       		.byte	0
 4554 0c38 13       		.uleb128 0x13
 4555 0c39 620A0000 		.4byte	.LASF113
 4556 0c3d 01       		.byte	0x1
 4557 0c3e E00A     		.2byte	0xae0
 4558 0c40 6B000000 		.4byte	0x6b
 4559 0c44 00000000 		.4byte	.LFB71
 4560 0c48 1C000000 		.4byte	.LFE71-.LFB71
 4561 0c4c 01       		.uleb128 0x1
 4562 0c4d 9C       		.byte	0x9c
 4563 0c4e 620C0000 		.4byte	0xc62
 4564 0c52 12       		.uleb128 0x12
 4565 0c53 22030000 		.4byte	.LASF51
 4566 0c57 01       		.byte	0x1
 4567 0c58 E00A     		.2byte	0xae0
 4568 0c5a 81000000 		.4byte	0x81
 4569 0c5e 02       		.uleb128 0x2
 4570 0c5f 91       		.byte	0x91
 4571 0c60 74       		.sleb128 -12
 4572 0c61 00       		.byte	0
 4573 0c62 19       		.uleb128 0x19
 4574 0c63 F3070000 		.4byte	.LASF114
 4575 0c67 01       		.byte	0x1
 4576 0c68 FA0A     		.2byte	0xafa
 4577 0c6a 00000000 		.4byte	.LFB72
 4578 0c6e 14000000 		.4byte	.LFE72-.LFB72
 4579 0c72 01       		.uleb128 0x1
 4580 0c73 9C       		.byte	0x9c
 4581 0c74 19       		.uleb128 0x19
 4582 0c75 A5030000 		.4byte	.LASF115
 4583 0c79 01       		.byte	0x1
 4584 0c7a 130B     		.2byte	0xb13
 4585 0c7c 00000000 		.4byte	.LFB73
 4586 0c80 14000000 		.4byte	.LFE73-.LFB73
 4587 0c84 01       		.uleb128 0x1
 4588 0c85 9C       		.byte	0x9c
 4589 0c86 16       		.uleb128 0x16
 4590 0c87 76000000 		.4byte	0x76
 4591 0c8b 960C0000 		.4byte	0xc96
 4592 0c8f 17       		.uleb128 0x17
 4593 0c90 B7000000 		.4byte	0xb7
 4594 0c94 00       		.byte	0
 4595 0c95 00       		.byte	0
 4596 0c96 1A       		.uleb128 0x1a
 4597 0c97 B8090000 		.4byte	.LASF116
 4598 0c9b 01       		.byte	0x1
 4599 0c9c 5D       		.byte	0x5d
 4600 0c9d A70C0000 		.4byte	0xca7
 4601 0ca1 05       		.uleb128 0x5
 4602 0ca2 03       		.byte	0x3
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 132


 4603 0ca3 08000000 		.4byte	CapSense_centroidMult
 4604 0ca7 08       		.uleb128 0x8
 4605 0ca8 860C0000 		.4byte	0xc86
 4606 0cac 1A       		.uleb128 0x1a
 4607 0cad 29030000 		.4byte	.LASF117
 4608 0cb1 01       		.byte	0x1
 4609 0cb2 61       		.byte	0x61
 4610 0cb3 64070000 		.4byte	0x764
 4611 0cb7 05       		.uleb128 0x5
 4612 0cb8 03       		.byte	0x3
 4613 0cb9 0C000000 		.4byte	CapSense_posFiltersMask
 4614 0cbd 16       		.uleb128 0x16
 4615 0cbe 6B000000 		.4byte	0x6b
 4616 0cc2 CD0C0000 		.4byte	0xccd
 4617 0cc6 17       		.uleb128 0x17
 4618 0cc7 B7000000 		.4byte	0xb7
 4619 0ccb 03       		.byte	0x3
 4620 0ccc 00       		.byte	0
 4621 0ccd 1A       		.uleb128 0x1a
 4622 0cce 6C010000 		.4byte	.LASF118
 4623 0cd2 01       		.byte	0x1
 4624 0cd3 65       		.byte	0x65
 4625 0cd4 BD0C0000 		.4byte	0xcbd
 4626 0cd8 05       		.uleb128 0x5
 4627 0cd9 03       		.byte	0x3
 4628 0cda 10000000 		.4byte	CapSense_posFiltersData
 4629 0cde 16       		.uleb128 0x16
 4630 0cdf 76000000 		.4byte	0x76
 4631 0ce3 EE0C0000 		.4byte	0xcee
 4632 0ce7 17       		.uleb128 0x17
 4633 0ce8 B7000000 		.4byte	0xb7
 4634 0cec 04       		.byte	0x4
 4635 0ced 00       		.byte	0
 4636 0cee 1B       		.uleb128 0x1b
 4637 0cef AF060000 		.4byte	.LASF119
 4638 0cf3 01       		.byte	0x1
 4639 0cf4 2C       		.byte	0x2c
 4640 0cf5 DE0C0000 		.4byte	0xcde
 4641 0cf9 1B       		.uleb128 0x1b
 4642 0cfa 08030000 		.4byte	.LASF120
 4643 0cfe 01       		.byte	0x1
 4644 0cff 2D       		.byte	0x2d
 4645 0d00 64070000 		.4byte	0x764
 4646 0d04 16       		.uleb128 0x16
 4647 0d05 6B000000 		.4byte	0x6b
 4648 0d09 140D0000 		.4byte	0xd14
 4649 0d0d 17       		.uleb128 0x17
 4650 0d0e B7000000 		.4byte	0xb7
 4651 0d12 04       		.byte	0x4
 4652 0d13 00       		.byte	0
 4653 0d14 1B       		.uleb128 0x1b
 4654 0d15 73030000 		.4byte	.LASF121
 4655 0d19 01       		.byte	0x1
 4656 0d1a 2E       		.byte	0x2e
 4657 0d1b 1F0D0000 		.4byte	0xd1f
 4658 0d1f 08       		.uleb128 0x8
 4659 0d20 040D0000 		.4byte	0xd04
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 133


 4660 0d24 1C       		.uleb128 0x1c
 4661 0d25 37080000 		.4byte	.LASF122
 4662 0d29 01       		.byte	0x1
 4663 0d2a 34       		.byte	0x34
 4664 0d2b DE0C0000 		.4byte	0xcde
 4665 0d2f 05       		.uleb128 0x5
 4666 0d30 03       		.byte	0x3
 4667 0d31 00000000 		.4byte	CapSense_sensorBaseline
 4668 0d35 1C       		.uleb128 0x1c
 4669 0d36 00000000 		.4byte	.LASF123
 4670 0d3a 01       		.byte	0x1
 4671 0d3b 35       		.byte	0x35
 4672 0d3c 040D0000 		.4byte	0xd04
 4673 0d40 05       		.uleb128 0x5
 4674 0d41 03       		.byte	0x3
 4675 0d42 00000000 		.4byte	CapSense_sensorBaselineLow
 4676 0d46 1C       		.uleb128 0x1c
 4677 0d47 10020000 		.4byte	.LASF124
 4678 0d4b 01       		.byte	0x1
 4679 0d4c 36       		.byte	0x36
 4680 0d4d 040D0000 		.4byte	0xd04
 4681 0d51 05       		.uleb128 0x5
 4682 0d52 03       		.byte	0x3
 4683 0d53 00000000 		.4byte	CapSense_sensorSignal
 4684 0d57 1C       		.uleb128 0x1c
 4685 0d58 C20A0000 		.4byte	.LASF125
 4686 0d5c 01       		.byte	0x1
 4687 0d5d 37       		.byte	0x37
 4688 0d5e 64070000 		.4byte	0x764
 4689 0d62 05       		.uleb128 0x5
 4690 0d63 03       		.byte	0x3
 4691 0d64 00000000 		.4byte	CapSense_sensorOnMask
 4692 0d68 1C       		.uleb128 0x1c
 4693 0d69 26020000 		.4byte	.LASF126
 4694 0d6d 01       		.byte	0x1
 4695 0d6e 39       		.byte	0x39
 4696 0d6f 040D0000 		.4byte	0xd04
 4697 0d73 05       		.uleb128 0x5
 4698 0d74 03       		.byte	0x3
 4699 0d75 00000000 		.4byte	CapSense_lowBaselineResetCnt
 4700 0d79 1C       		.uleb128 0x1c
 4701 0d7a 11080000 		.4byte	.LASF127
 4702 0d7e 01       		.byte	0x1
 4703 0d7f 3A       		.byte	0x3a
 4704 0d80 040D0000 		.4byte	0xd04
 4705 0d84 05       		.uleb128 0x5
 4706 0d85 03       		.byte	0x3
 4707 0d86 00000000 		.4byte	CapSense_lowBaselineReset
 4708 0d8a 1C       		.uleb128 0x1c
 4709 0d8b 41030000 		.4byte	.LASF128
 4710 0d8f 01       		.byte	0x1
 4711 0d90 49       		.byte	0x49
 4712 0d91 64070000 		.4byte	0x764
 4713 0d95 05       		.uleb128 0x5
 4714 0d96 03       		.byte	0x3
 4715 0d97 00000000 		.4byte	CapSense_fingerThreshold
 4716 0d9b 1C       		.uleb128 0x1c
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 134


 4717 0d9c 2D090000 		.4byte	.LASF129
 4718 0da0 01       		.byte	0x1
 4719 0da1 4B       		.byte	0x4b
 4720 0da2 64070000 		.4byte	0x764
 4721 0da6 05       		.uleb128 0x5
 4722 0da7 03       		.byte	0x3
 4723 0da8 00000000 		.4byte	CapSense_noiseThreshold
 4724 0dac 1C       		.uleb128 0x1c
 4725 0dad 88040000 		.4byte	.LASF130
 4726 0db1 01       		.byte	0x1
 4727 0db2 4D       		.byte	0x4d
 4728 0db3 64070000 		.4byte	0x764
 4729 0db7 05       		.uleb128 0x5
 4730 0db8 03       		.byte	0x3
 4731 0db9 00000000 		.4byte	CapSense_negativeNoiseThreshold
 4732 0dbd 1C       		.uleb128 0x1c
 4733 0dbe 92020000 		.4byte	.LASF131
 4734 0dc2 01       		.byte	0x1
 4735 0dc3 4F       		.byte	0x4f
 4736 0dc4 64070000 		.4byte	0x764
 4737 0dc8 05       		.uleb128 0x5
 4738 0dc9 03       		.byte	0x3
 4739 0dca 00000000 		.4byte	CapSense_hysteresis
 4740 0dce 1C       		.uleb128 0x1c
 4741 0dcf 84010000 		.4byte	.LASF132
 4742 0dd3 01       		.byte	0x1
 4743 0dd4 51       		.byte	0x51
 4744 0dd5 64070000 		.4byte	0x764
 4745 0dd9 05       		.uleb128 0x5
 4746 0dda 03       		.byte	0x3
 4747 0ddb 00000000 		.4byte	CapSense_debounce
 4748 0ddf 1C       		.uleb128 0x1c
 4749 0de0 43020000 		.4byte	.LASF133
 4750 0de4 01       		.byte	0x1
 4751 0de5 55       		.byte	0x55
 4752 0de6 F00D0000 		.4byte	0xdf0
 4753 0dea 05       		.uleb128 0x5
 4754 0deb 03       		.byte	0x3
 4755 0dec 00000000 		.4byte	CapSense_rawDataIndex
 4756 0df0 08       		.uleb128 0x8
 4757 0df1 64070000 		.4byte	0x764
 4758 0df5 1C       		.uleb128 0x1c
 4759 0df6 6F040000 		.4byte	.LASF134
 4760 0dfa 01       		.byte	0x1
 4761 0dfb 59       		.byte	0x59
 4762 0dfc 060E0000 		.4byte	0xe06
 4763 0e00 05       		.uleb128 0x5
 4764 0e01 03       		.byte	0x3
 4765 0e02 00000000 		.4byte	CapSense_numberOfSensors
 4766 0e06 08       		.uleb128 0x8
 4767 0e07 64070000 		.4byte	0x764
 4768 0e0b 1C       		.uleb128 0x1c
 4769 0e0c A10A0000 		.4byte	.LASF135
 4770 0e10 01       		.byte	0x1
 4771 0e11 27       		.byte	0x27
 4772 0e12 DE0C0000 		.4byte	0xcde
 4773 0e16 05       		.uleb128 0x5
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 135


 4774 0e17 03       		.byte	0x3
 4775 0e18 00000000 		.4byte	CapSense_rawFilterData1
 4776 0e1c 1B       		.uleb128 0x1b
 4777 0e1d F0000000 		.4byte	.LASF136
 4778 0e21 01       		.byte	0x1
 4779 0e22 41       		.byte	0x41
 4780 0e23 48020000 		.4byte	0x248
 4781 0e27 1C       		.uleb128 0x1c
 4782 0e28 D4090000 		.4byte	.LASF137
 4783 0e2c 01       		.byte	0x1
 4784 0e2d 45       		.byte	0x45
 4785 0e2e 6B000000 		.4byte	0x6b
 4786 0e32 05       		.uleb128 0x5
 4787 0e33 03       		.byte	0x3
 4788 0e34 00000000 		.4byte	CapSense_enableRawFilters
 4789 0e38 00       		.byte	0
 4790              		.section	.debug_abbrev,"",%progbits
 4791              	.Ldebug_abbrev0:
 4792 0000 01       		.uleb128 0x1
 4793 0001 11       		.uleb128 0x11
 4794 0002 01       		.byte	0x1
 4795 0003 25       		.uleb128 0x25
 4796 0004 0E       		.uleb128 0xe
 4797 0005 13       		.uleb128 0x13
 4798 0006 0B       		.uleb128 0xb
 4799 0007 03       		.uleb128 0x3
 4800 0008 0E       		.uleb128 0xe
 4801 0009 1B       		.uleb128 0x1b
 4802 000a 0E       		.uleb128 0xe
 4803 000b 55       		.uleb128 0x55
 4804 000c 17       		.uleb128 0x17
 4805 000d 11       		.uleb128 0x11
 4806 000e 01       		.uleb128 0x1
 4807 000f 10       		.uleb128 0x10
 4808 0010 17       		.uleb128 0x17
 4809 0011 00       		.byte	0
 4810 0012 00       		.byte	0
 4811 0013 02       		.uleb128 0x2
 4812 0014 24       		.uleb128 0x24
 4813 0015 00       		.byte	0
 4814 0016 0B       		.uleb128 0xb
 4815 0017 0B       		.uleb128 0xb
 4816 0018 3E       		.uleb128 0x3e
 4817 0019 0B       		.uleb128 0xb
 4818 001a 03       		.uleb128 0x3
 4819 001b 0E       		.uleb128 0xe
 4820 001c 00       		.byte	0
 4821 001d 00       		.byte	0
 4822 001e 03       		.uleb128 0x3
 4823 001f 24       		.uleb128 0x24
 4824 0020 00       		.byte	0
 4825 0021 0B       		.uleb128 0xb
 4826 0022 0B       		.uleb128 0xb
 4827 0023 3E       		.uleb128 0x3e
 4828 0024 0B       		.uleb128 0xb
 4829 0025 03       		.uleb128 0x3
 4830 0026 08       		.uleb128 0x8
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 136


 4831 0027 00       		.byte	0
 4832 0028 00       		.byte	0
 4833 0029 04       		.uleb128 0x4
 4834 002a 16       		.uleb128 0x16
 4835 002b 00       		.byte	0
 4836 002c 03       		.uleb128 0x3
 4837 002d 0E       		.uleb128 0xe
 4838 002e 3A       		.uleb128 0x3a
 4839 002f 0B       		.uleb128 0xb
 4840 0030 3B       		.uleb128 0x3b
 4841 0031 0B       		.uleb128 0xb
 4842 0032 49       		.uleb128 0x49
 4843 0033 13       		.uleb128 0x13
 4844 0034 00       		.byte	0
 4845 0035 00       		.byte	0
 4846 0036 05       		.uleb128 0x5
 4847 0037 13       		.uleb128 0x13
 4848 0038 01       		.byte	0x1
 4849 0039 0B       		.uleb128 0xb
 4850 003a 0B       		.uleb128 0xb
 4851 003b 3A       		.uleb128 0x3a
 4852 003c 0B       		.uleb128 0xb
 4853 003d 3B       		.uleb128 0x3b
 4854 003e 0B       		.uleb128 0xb
 4855 003f 01       		.uleb128 0x1
 4856 0040 13       		.uleb128 0x13
 4857 0041 00       		.byte	0
 4858 0042 00       		.byte	0
 4859 0043 06       		.uleb128 0x6
 4860 0044 0D       		.uleb128 0xd
 4861 0045 00       		.byte	0
 4862 0046 03       		.uleb128 0x3
 4863 0047 0E       		.uleb128 0xe
 4864 0048 3A       		.uleb128 0x3a
 4865 0049 0B       		.uleb128 0xb
 4866 004a 3B       		.uleb128 0x3b
 4867 004b 0B       		.uleb128 0xb
 4868 004c 49       		.uleb128 0x49
 4869 004d 13       		.uleb128 0x13
 4870 004e 38       		.uleb128 0x38
 4871 004f 0B       		.uleb128 0xb
 4872 0050 00       		.byte	0
 4873 0051 00       		.byte	0
 4874 0052 07       		.uleb128 0x7
 4875 0053 0F       		.uleb128 0xf
 4876 0054 00       		.byte	0
 4877 0055 0B       		.uleb128 0xb
 4878 0056 0B       		.uleb128 0xb
 4879 0057 49       		.uleb128 0x49
 4880 0058 13       		.uleb128 0x13
 4881 0059 00       		.byte	0
 4882 005a 00       		.byte	0
 4883 005b 08       		.uleb128 0x8
 4884 005c 26       		.uleb128 0x26
 4885 005d 00       		.byte	0
 4886 005e 49       		.uleb128 0x49
 4887 005f 13       		.uleb128 0x13
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 137


 4888 0060 00       		.byte	0
 4889 0061 00       		.byte	0
 4890 0062 09       		.uleb128 0x9
 4891 0063 15       		.uleb128 0x15
 4892 0064 01       		.byte	0x1
 4893 0065 27       		.uleb128 0x27
 4894 0066 19       		.uleb128 0x19
 4895 0067 49       		.uleb128 0x49
 4896 0068 13       		.uleb128 0x13
 4897 0069 01       		.uleb128 0x1
 4898 006a 13       		.uleb128 0x13
 4899 006b 00       		.byte	0
 4900 006c 00       		.byte	0
 4901 006d 0A       		.uleb128 0xa
 4902 006e 05       		.uleb128 0x5
 4903 006f 00       		.byte	0
 4904 0070 49       		.uleb128 0x49
 4905 0071 13       		.uleb128 0x13
 4906 0072 00       		.byte	0
 4907 0073 00       		.byte	0
 4908 0074 0B       		.uleb128 0xb
 4909 0075 15       		.uleb128 0x15
 4910 0076 01       		.byte	0x1
 4911 0077 27       		.uleb128 0x27
 4912 0078 19       		.uleb128 0x19
 4913 0079 01       		.uleb128 0x1
 4914 007a 13       		.uleb128 0x13
 4915 007b 00       		.byte	0
 4916 007c 00       		.byte	0
 4917 007d 0C       		.uleb128 0xc
 4918 007e 2E       		.uleb128 0x2e
 4919 007f 01       		.byte	0x1
 4920 0080 3F       		.uleb128 0x3f
 4921 0081 19       		.uleb128 0x19
 4922 0082 03       		.uleb128 0x3
 4923 0083 0E       		.uleb128 0xe
 4924 0084 3A       		.uleb128 0x3a
 4925 0085 0B       		.uleb128 0xb
 4926 0086 3B       		.uleb128 0x3b
 4927 0087 0B       		.uleb128 0xb
 4928 0088 27       		.uleb128 0x27
 4929 0089 19       		.uleb128 0x19
 4930 008a 11       		.uleb128 0x11
 4931 008b 01       		.uleb128 0x1
 4932 008c 12       		.uleb128 0x12
 4933 008d 06       		.uleb128 0x6
 4934 008e 40       		.uleb128 0x40
 4935 008f 18       		.uleb128 0x18
 4936 0090 9742     		.uleb128 0x2117
 4937 0092 19       		.uleb128 0x19
 4938 0093 01       		.uleb128 0x1
 4939 0094 13       		.uleb128 0x13
 4940 0095 00       		.byte	0
 4941 0096 00       		.byte	0
 4942 0097 0D       		.uleb128 0xd
 4943 0098 05       		.uleb128 0x5
 4944 0099 00       		.byte	0
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 138


 4945 009a 03       		.uleb128 0x3
 4946 009b 0E       		.uleb128 0xe
 4947 009c 3A       		.uleb128 0x3a
 4948 009d 0B       		.uleb128 0xb
 4949 009e 3B       		.uleb128 0x3b
 4950 009f 0B       		.uleb128 0xb
 4951 00a0 49       		.uleb128 0x49
 4952 00a1 13       		.uleb128 0x13
 4953 00a2 02       		.uleb128 0x2
 4954 00a3 18       		.uleb128 0x18
 4955 00a4 00       		.byte	0
 4956 00a5 00       		.byte	0
 4957 00a6 0E       		.uleb128 0xe
 4958 00a7 2E       		.uleb128 0x2e
 4959 00a8 01       		.byte	0x1
 4960 00a9 3F       		.uleb128 0x3f
 4961 00aa 19       		.uleb128 0x19
 4962 00ab 03       		.uleb128 0x3
 4963 00ac 0E       		.uleb128 0xe
 4964 00ad 3A       		.uleb128 0x3a
 4965 00ae 0B       		.uleb128 0xb
 4966 00af 3B       		.uleb128 0x3b
 4967 00b0 0B       		.uleb128 0xb
 4968 00b1 27       		.uleb128 0x27
 4969 00b2 19       		.uleb128 0x19
 4970 00b3 11       		.uleb128 0x11
 4971 00b4 01       		.uleb128 0x1
 4972 00b5 12       		.uleb128 0x12
 4973 00b6 06       		.uleb128 0x6
 4974 00b7 40       		.uleb128 0x40
 4975 00b8 18       		.uleb128 0x18
 4976 00b9 9642     		.uleb128 0x2116
 4977 00bb 19       		.uleb128 0x19
 4978 00bc 01       		.uleb128 0x1
 4979 00bd 13       		.uleb128 0x13
 4980 00be 00       		.byte	0
 4981 00bf 00       		.byte	0
 4982 00c0 0F       		.uleb128 0xf
 4983 00c1 34       		.uleb128 0x34
 4984 00c2 00       		.byte	0
 4985 00c3 03       		.uleb128 0x3
 4986 00c4 08       		.uleb128 0x8
 4987 00c5 3A       		.uleb128 0x3a
 4988 00c6 0B       		.uleb128 0xb
 4989 00c7 3B       		.uleb128 0x3b
 4990 00c8 05       		.uleb128 0x5
 4991 00c9 49       		.uleb128 0x49
 4992 00ca 13       		.uleb128 0x13
 4993 00cb 02       		.uleb128 0x2
 4994 00cc 18       		.uleb128 0x18
 4995 00cd 00       		.byte	0
 4996 00ce 00       		.byte	0
 4997 00cf 10       		.uleb128 0x10
 4998 00d0 2E       		.uleb128 0x2e
 4999 00d1 01       		.byte	0x1
 5000 00d2 3F       		.uleb128 0x3f
 5001 00d3 19       		.uleb128 0x19
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 139


 5002 00d4 03       		.uleb128 0x3
 5003 00d5 0E       		.uleb128 0xe
 5004 00d6 3A       		.uleb128 0x3a
 5005 00d7 0B       		.uleb128 0xb
 5006 00d8 3B       		.uleb128 0x3b
 5007 00d9 05       		.uleb128 0x5
 5008 00da 27       		.uleb128 0x27
 5009 00db 19       		.uleb128 0x19
 5010 00dc 11       		.uleb128 0x11
 5011 00dd 01       		.uleb128 0x1
 5012 00de 12       		.uleb128 0x12
 5013 00df 06       		.uleb128 0x6
 5014 00e0 40       		.uleb128 0x40
 5015 00e1 18       		.uleb128 0x18
 5016 00e2 9642     		.uleb128 0x2116
 5017 00e4 19       		.uleb128 0x19
 5018 00e5 01       		.uleb128 0x1
 5019 00e6 13       		.uleb128 0x13
 5020 00e7 00       		.byte	0
 5021 00e8 00       		.byte	0
 5022 00e9 11       		.uleb128 0x11
 5023 00ea 34       		.uleb128 0x34
 5024 00eb 00       		.byte	0
 5025 00ec 03       		.uleb128 0x3
 5026 00ed 0E       		.uleb128 0xe
 5027 00ee 3A       		.uleb128 0x3a
 5028 00ef 0B       		.uleb128 0xb
 5029 00f0 3B       		.uleb128 0x3b
 5030 00f1 05       		.uleb128 0x5
 5031 00f2 49       		.uleb128 0x49
 5032 00f3 13       		.uleb128 0x13
 5033 00f4 02       		.uleb128 0x2
 5034 00f5 18       		.uleb128 0x18
 5035 00f6 00       		.byte	0
 5036 00f7 00       		.byte	0
 5037 00f8 12       		.uleb128 0x12
 5038 00f9 05       		.uleb128 0x5
 5039 00fa 00       		.byte	0
 5040 00fb 03       		.uleb128 0x3
 5041 00fc 0E       		.uleb128 0xe
 5042 00fd 3A       		.uleb128 0x3a
 5043 00fe 0B       		.uleb128 0xb
 5044 00ff 3B       		.uleb128 0x3b
 5045 0100 05       		.uleb128 0x5
 5046 0101 49       		.uleb128 0x49
 5047 0102 13       		.uleb128 0x13
 5048 0103 02       		.uleb128 0x2
 5049 0104 18       		.uleb128 0x18
 5050 0105 00       		.byte	0
 5051 0106 00       		.byte	0
 5052 0107 13       		.uleb128 0x13
 5053 0108 2E       		.uleb128 0x2e
 5054 0109 01       		.byte	0x1
 5055 010a 3F       		.uleb128 0x3f
 5056 010b 19       		.uleb128 0x19
 5057 010c 03       		.uleb128 0x3
 5058 010d 0E       		.uleb128 0xe
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 140


 5059 010e 3A       		.uleb128 0x3a
 5060 010f 0B       		.uleb128 0xb
 5061 0110 3B       		.uleb128 0x3b
 5062 0111 05       		.uleb128 0x5
 5063 0112 27       		.uleb128 0x27
 5064 0113 19       		.uleb128 0x19
 5065 0114 49       		.uleb128 0x49
 5066 0115 13       		.uleb128 0x13
 5067 0116 11       		.uleb128 0x11
 5068 0117 01       		.uleb128 0x1
 5069 0118 12       		.uleb128 0x12
 5070 0119 06       		.uleb128 0x6
 5071 011a 40       		.uleb128 0x40
 5072 011b 18       		.uleb128 0x18
 5073 011c 9742     		.uleb128 0x2117
 5074 011e 19       		.uleb128 0x19
 5075 011f 01       		.uleb128 0x1
 5076 0120 13       		.uleb128 0x13
 5077 0121 00       		.byte	0
 5078 0122 00       		.byte	0
 5079 0123 14       		.uleb128 0x14
 5080 0124 2E       		.uleb128 0x2e
 5081 0125 01       		.byte	0x1
 5082 0126 3F       		.uleb128 0x3f
 5083 0127 19       		.uleb128 0x19
 5084 0128 03       		.uleb128 0x3
 5085 0129 0E       		.uleb128 0xe
 5086 012a 3A       		.uleb128 0x3a
 5087 012b 0B       		.uleb128 0xb
 5088 012c 3B       		.uleb128 0x3b
 5089 012d 05       		.uleb128 0x5
 5090 012e 27       		.uleb128 0x27
 5091 012f 19       		.uleb128 0x19
 5092 0130 11       		.uleb128 0x11
 5093 0131 01       		.uleb128 0x1
 5094 0132 12       		.uleb128 0x12
 5095 0133 06       		.uleb128 0x6
 5096 0134 40       		.uleb128 0x40
 5097 0135 18       		.uleb128 0x18
 5098 0136 9742     		.uleb128 0x2117
 5099 0138 19       		.uleb128 0x19
 5100 0139 01       		.uleb128 0x1
 5101 013a 13       		.uleb128 0x13
 5102 013b 00       		.byte	0
 5103 013c 00       		.byte	0
 5104 013d 15       		.uleb128 0x15
 5105 013e 2E       		.uleb128 0x2e
 5106 013f 01       		.byte	0x1
 5107 0140 3F       		.uleb128 0x3f
 5108 0141 19       		.uleb128 0x19
 5109 0142 03       		.uleb128 0x3
 5110 0143 0E       		.uleb128 0xe
 5111 0144 3A       		.uleb128 0x3a
 5112 0145 0B       		.uleb128 0xb
 5113 0146 3B       		.uleb128 0x3b
 5114 0147 05       		.uleb128 0x5
 5115 0148 27       		.uleb128 0x27
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 141


 5116 0149 19       		.uleb128 0x19
 5117 014a 49       		.uleb128 0x49
 5118 014b 13       		.uleb128 0x13
 5119 014c 11       		.uleb128 0x11
 5120 014d 01       		.uleb128 0x1
 5121 014e 12       		.uleb128 0x12
 5122 014f 06       		.uleb128 0x6
 5123 0150 40       		.uleb128 0x40
 5124 0151 18       		.uleb128 0x18
 5125 0152 9642     		.uleb128 0x2116
 5126 0154 19       		.uleb128 0x19
 5127 0155 01       		.uleb128 0x1
 5128 0156 13       		.uleb128 0x13
 5129 0157 00       		.byte	0
 5130 0158 00       		.byte	0
 5131 0159 16       		.uleb128 0x16
 5132 015a 01       		.uleb128 0x1
 5133 015b 01       		.byte	0x1
 5134 015c 49       		.uleb128 0x49
 5135 015d 13       		.uleb128 0x13
 5136 015e 01       		.uleb128 0x1
 5137 015f 13       		.uleb128 0x13
 5138 0160 00       		.byte	0
 5139 0161 00       		.byte	0
 5140 0162 17       		.uleb128 0x17
 5141 0163 21       		.uleb128 0x21
 5142 0164 00       		.byte	0
 5143 0165 49       		.uleb128 0x49
 5144 0166 13       		.uleb128 0x13
 5145 0167 2F       		.uleb128 0x2f
 5146 0168 0B       		.uleb128 0xb
 5147 0169 00       		.byte	0
 5148 016a 00       		.byte	0
 5149 016b 18       		.uleb128 0x18
 5150 016c 05       		.uleb128 0x5
 5151 016d 00       		.byte	0
 5152 016e 03       		.uleb128 0x3
 5153 016f 08       		.uleb128 0x8
 5154 0170 3A       		.uleb128 0x3a
 5155 0171 0B       		.uleb128 0xb
 5156 0172 3B       		.uleb128 0x3b
 5157 0173 05       		.uleb128 0x5
 5158 0174 49       		.uleb128 0x49
 5159 0175 13       		.uleb128 0x13
 5160 0176 02       		.uleb128 0x2
 5161 0177 18       		.uleb128 0x18
 5162 0178 00       		.byte	0
 5163 0179 00       		.byte	0
 5164 017a 19       		.uleb128 0x19
 5165 017b 2E       		.uleb128 0x2e
 5166 017c 00       		.byte	0
 5167 017d 3F       		.uleb128 0x3f
 5168 017e 19       		.uleb128 0x19
 5169 017f 03       		.uleb128 0x3
 5170 0180 0E       		.uleb128 0xe
 5171 0181 3A       		.uleb128 0x3a
 5172 0182 0B       		.uleb128 0xb
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 142


 5173 0183 3B       		.uleb128 0x3b
 5174 0184 05       		.uleb128 0x5
 5175 0185 27       		.uleb128 0x27
 5176 0186 19       		.uleb128 0x19
 5177 0187 11       		.uleb128 0x11
 5178 0188 01       		.uleb128 0x1
 5179 0189 12       		.uleb128 0x12
 5180 018a 06       		.uleb128 0x6
 5181 018b 40       		.uleb128 0x40
 5182 018c 18       		.uleb128 0x18
 5183 018d 9742     		.uleb128 0x2117
 5184 018f 19       		.uleb128 0x19
 5185 0190 00       		.byte	0
 5186 0191 00       		.byte	0
 5187 0192 1A       		.uleb128 0x1a
 5188 0193 34       		.uleb128 0x34
 5189 0194 00       		.byte	0
 5190 0195 03       		.uleb128 0x3
 5191 0196 0E       		.uleb128 0xe
 5192 0197 3A       		.uleb128 0x3a
 5193 0198 0B       		.uleb128 0xb
 5194 0199 3B       		.uleb128 0x3b
 5195 019a 0B       		.uleb128 0xb
 5196 019b 49       		.uleb128 0x49
 5197 019c 13       		.uleb128 0x13
 5198 019d 02       		.uleb128 0x2
 5199 019e 18       		.uleb128 0x18
 5200 019f 00       		.byte	0
 5201 01a0 00       		.byte	0
 5202 01a1 1B       		.uleb128 0x1b
 5203 01a2 34       		.uleb128 0x34
 5204 01a3 00       		.byte	0
 5205 01a4 03       		.uleb128 0x3
 5206 01a5 0E       		.uleb128 0xe
 5207 01a6 3A       		.uleb128 0x3a
 5208 01a7 0B       		.uleb128 0xb
 5209 01a8 3B       		.uleb128 0x3b
 5210 01a9 0B       		.uleb128 0xb
 5211 01aa 49       		.uleb128 0x49
 5212 01ab 13       		.uleb128 0x13
 5213 01ac 3F       		.uleb128 0x3f
 5214 01ad 19       		.uleb128 0x19
 5215 01ae 3C       		.uleb128 0x3c
 5216 01af 19       		.uleb128 0x19
 5217 01b0 00       		.byte	0
 5218 01b1 00       		.byte	0
 5219 01b2 1C       		.uleb128 0x1c
 5220 01b3 34       		.uleb128 0x34
 5221 01b4 00       		.byte	0
 5222 01b5 03       		.uleb128 0x3
 5223 01b6 0E       		.uleb128 0xe
 5224 01b7 3A       		.uleb128 0x3a
 5225 01b8 0B       		.uleb128 0xb
 5226 01b9 3B       		.uleb128 0x3b
 5227 01ba 0B       		.uleb128 0xb
 5228 01bb 49       		.uleb128 0x49
 5229 01bc 13       		.uleb128 0x13
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 143


 5230 01bd 3F       		.uleb128 0x3f
 5231 01be 19       		.uleb128 0x19
 5232 01bf 02       		.uleb128 0x2
 5233 01c0 18       		.uleb128 0x18
 5234 01c1 00       		.byte	0
 5235 01c2 00       		.byte	0
 5236 01c3 00       		.byte	0
 5237              		.section	.debug_aranges,"",%progbits
 5238 0000 4C010000 		.4byte	0x14c
 5239 0004 0200     		.2byte	0x2
 5240 0006 00000000 		.4byte	.Ldebug_info0
 5241 000a 04       		.byte	0x4
 5242 000b 00       		.byte	0
 5243 000c 0000     		.2byte	0
 5244 000e 0000     		.2byte	0
 5245 0010 00000000 		.4byte	.LFB35
 5246 0014 58000000 		.4byte	.LFE35-.LFB35
 5247 0018 00000000 		.4byte	.LFB36
 5248 001c 28000000 		.4byte	.LFE36-.LFB36
 5249 0020 00000000 		.4byte	.LFB37
 5250 0024 26000000 		.4byte	.LFE37-.LFB37
 5251 0028 00000000 		.4byte	.LFB38
 5252 002c 50000000 		.4byte	.LFE38-.LFB38
 5253 0030 00000000 		.4byte	.LFB39
 5254 0034 38020000 		.4byte	.LFE39-.LFB39
 5255 0038 00000000 		.4byte	.LFB40
 5256 003c 1E000000 		.4byte	.LFE40-.LFB40
 5257 0040 00000000 		.4byte	.LFB41
 5258 0044 40000000 		.4byte	.LFE41-.LFB41
 5259 0048 00000000 		.4byte	.LFB42
 5260 004c 58000000 		.4byte	.LFE42-.LFB42
 5261 0050 00000000 		.4byte	.LFB43
 5262 0054 1C000000 		.4byte	.LFE43-.LFB43
 5263 0058 00000000 		.4byte	.LFB44
 5264 005c 24000000 		.4byte	.LFE44-.LFB44
 5265 0060 00000000 		.4byte	.LFB45
 5266 0064 1C000000 		.4byte	.LFE45-.LFB45
 5267 0068 00000000 		.4byte	.LFB46
 5268 006c 24000000 		.4byte	.LFE46-.LFB46
 5269 0070 00000000 		.4byte	.LFB47
 5270 0074 1C000000 		.4byte	.LFE47-.LFB47
 5271 0078 00000000 		.4byte	.LFB48
 5272 007c 1C000000 		.4byte	.LFE48-.LFB48
 5273 0080 00000000 		.4byte	.LFB49
 5274 0084 1C000000 		.4byte	.LFE49-.LFB49
 5275 0088 00000000 		.4byte	.LFB50
 5276 008c 1C000000 		.4byte	.LFE50-.LFB50
 5277 0090 00000000 		.4byte	.LFB51
 5278 0094 24000000 		.4byte	.LFE51-.LFB51
 5279 0098 00000000 		.4byte	.LFB52
 5280 009c 24000000 		.4byte	.LFE52-.LFB52
 5281 00a0 00000000 		.4byte	.LFB53
 5282 00a4 24000000 		.4byte	.LFE53-.LFB53
 5283 00a8 00000000 		.4byte	.LFB54
 5284 00ac 24000000 		.4byte	.LFE54-.LFB54
 5285 00b0 00000000 		.4byte	.LFB55
 5286 00b4 24000000 		.4byte	.LFE55-.LFB55
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 144


 5287 00b8 00000000 		.4byte	.LFB56
 5288 00bc 24000000 		.4byte	.LFE56-.LFB56
 5289 00c0 00000000 		.4byte	.LFB57
 5290 00c4 3C010000 		.4byte	.LFE57-.LFB57
 5291 00c8 00000000 		.4byte	.LFB58
 5292 00cc 42000000 		.4byte	.LFE58-.LFB58
 5293 00d0 00000000 		.4byte	.LFB59
 5294 00d4 36000000 		.4byte	.LFE59-.LFB59
 5295 00d8 00000000 		.4byte	.LFB60
 5296 00dc 5C000000 		.4byte	.LFE60-.LFB60
 5297 00e0 00000000 		.4byte	.LFB61
 5298 00e4 5C000000 		.4byte	.LFE61-.LFB61
 5299 00e8 00000000 		.4byte	.LFB62
 5300 00ec B8000000 		.4byte	.LFE62-.LFB62
 5301 00f0 00000000 		.4byte	.LFB63
 5302 00f4 A0010000 		.4byte	.LFE63-.LFB63
 5303 00f8 00000000 		.4byte	.LFB64
 5304 00fc B8010000 		.4byte	.LFE64-.LFB64
 5305 0100 00000000 		.4byte	.LFB65
 5306 0104 98000000 		.4byte	.LFE65-.LFB65
 5307 0108 00000000 		.4byte	.LFB66
 5308 010c 76000000 		.4byte	.LFE66-.LFB66
 5309 0110 00000000 		.4byte	.LFB67
 5310 0114 46000000 		.4byte	.LFE67-.LFB67
 5311 0118 00000000 		.4byte	.LFB68
 5312 011c 3C000000 		.4byte	.LFE68-.LFB68
 5313 0120 00000000 		.4byte	.LFB69
 5314 0124 1C000000 		.4byte	.LFE69-.LFB69
 5315 0128 00000000 		.4byte	.LFB70
 5316 012c 1C000000 		.4byte	.LFE70-.LFB70
 5317 0130 00000000 		.4byte	.LFB71
 5318 0134 1C000000 		.4byte	.LFE71-.LFB71
 5319 0138 00000000 		.4byte	.LFB72
 5320 013c 14000000 		.4byte	.LFE72-.LFB72
 5321 0140 00000000 		.4byte	.LFB73
 5322 0144 14000000 		.4byte	.LFE73-.LFB73
 5323 0148 00000000 		.4byte	0
 5324 014c 00000000 		.4byte	0
 5325              		.section	.debug_ranges,"",%progbits
 5326              	.Ldebug_ranges0:
 5327 0000 00000000 		.4byte	.LFB35
 5328 0004 58000000 		.4byte	.LFE35
 5329 0008 00000000 		.4byte	.LFB36
 5330 000c 28000000 		.4byte	.LFE36
 5331 0010 00000000 		.4byte	.LFB37
 5332 0014 26000000 		.4byte	.LFE37
 5333 0018 00000000 		.4byte	.LFB38
 5334 001c 50000000 		.4byte	.LFE38
 5335 0020 00000000 		.4byte	.LFB39
 5336 0024 38020000 		.4byte	.LFE39
 5337 0028 00000000 		.4byte	.LFB40
 5338 002c 1E000000 		.4byte	.LFE40
 5339 0030 00000000 		.4byte	.LFB41
 5340 0034 40000000 		.4byte	.LFE41
 5341 0038 00000000 		.4byte	.LFB42
 5342 003c 58000000 		.4byte	.LFE42
 5343 0040 00000000 		.4byte	.LFB43
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 145


 5344 0044 1C000000 		.4byte	.LFE43
 5345 0048 00000000 		.4byte	.LFB44
 5346 004c 24000000 		.4byte	.LFE44
 5347 0050 00000000 		.4byte	.LFB45
 5348 0054 1C000000 		.4byte	.LFE45
 5349 0058 00000000 		.4byte	.LFB46
 5350 005c 24000000 		.4byte	.LFE46
 5351 0060 00000000 		.4byte	.LFB47
 5352 0064 1C000000 		.4byte	.LFE47
 5353 0068 00000000 		.4byte	.LFB48
 5354 006c 1C000000 		.4byte	.LFE48
 5355 0070 00000000 		.4byte	.LFB49
 5356 0074 1C000000 		.4byte	.LFE49
 5357 0078 00000000 		.4byte	.LFB50
 5358 007c 1C000000 		.4byte	.LFE50
 5359 0080 00000000 		.4byte	.LFB51
 5360 0084 24000000 		.4byte	.LFE51
 5361 0088 00000000 		.4byte	.LFB52
 5362 008c 24000000 		.4byte	.LFE52
 5363 0090 00000000 		.4byte	.LFB53
 5364 0094 24000000 		.4byte	.LFE53
 5365 0098 00000000 		.4byte	.LFB54
 5366 009c 24000000 		.4byte	.LFE54
 5367 00a0 00000000 		.4byte	.LFB55
 5368 00a4 24000000 		.4byte	.LFE55
 5369 00a8 00000000 		.4byte	.LFB56
 5370 00ac 24000000 		.4byte	.LFE56
 5371 00b0 00000000 		.4byte	.LFB57
 5372 00b4 3C010000 		.4byte	.LFE57
 5373 00b8 00000000 		.4byte	.LFB58
 5374 00bc 42000000 		.4byte	.LFE58
 5375 00c0 00000000 		.4byte	.LFB59
 5376 00c4 36000000 		.4byte	.LFE59
 5377 00c8 00000000 		.4byte	.LFB60
 5378 00cc 5C000000 		.4byte	.LFE60
 5379 00d0 00000000 		.4byte	.LFB61
 5380 00d4 5C000000 		.4byte	.LFE61
 5381 00d8 00000000 		.4byte	.LFB62
 5382 00dc B8000000 		.4byte	.LFE62
 5383 00e0 00000000 		.4byte	.LFB63
 5384 00e4 A0010000 		.4byte	.LFE63
 5385 00e8 00000000 		.4byte	.LFB64
 5386 00ec B8010000 		.4byte	.LFE64
 5387 00f0 00000000 		.4byte	.LFB65
 5388 00f4 98000000 		.4byte	.LFE65
 5389 00f8 00000000 		.4byte	.LFB66
 5390 00fc 76000000 		.4byte	.LFE66
 5391 0100 00000000 		.4byte	.LFB67
 5392 0104 46000000 		.4byte	.LFE67
 5393 0108 00000000 		.4byte	.LFB68
 5394 010c 3C000000 		.4byte	.LFE68
 5395 0110 00000000 		.4byte	.LFB69
 5396 0114 1C000000 		.4byte	.LFE69
 5397 0118 00000000 		.4byte	.LFB70
 5398 011c 1C000000 		.4byte	.LFE70
 5399 0120 00000000 		.4byte	.LFB71
 5400 0124 1C000000 		.4byte	.LFE71
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 146


 5401 0128 00000000 		.4byte	.LFB72
 5402 012c 14000000 		.4byte	.LFE72
 5403 0130 00000000 		.4byte	.LFB73
 5404 0134 14000000 		.4byte	.LFE73
 5405 0138 00000000 		.4byte	0
 5406 013c 00000000 		.4byte	0
 5407              		.section	.debug_line,"",%progbits
 5408              	.Ldebug_line0:
 5409 0000 BC040000 		.section	.debug_str,"MS",%progbits,1
 5409      02005E00 
 5409      00000201 
 5409      FB0E0D00 
 5409      01010101 
 5410              	.LASF123:
 5411 0000 43617053 		.ascii	"CapSense_sensorBaselineLow\000"
 5411      656E7365 
 5411      5F73656E 
 5411      736F7242 
 5411      6173656C 
 5412              	.LASF110:
 5413 001b 43617053 		.ascii	"CapSense_IIR4Filter\000"
 5413      656E7365 
 5413      5F494952 
 5413      3446696C 
 5413      74657200 
 5414              	.LASF80:
 5415 002f 43617053 		.ascii	"CapSense_debounceCounter\000"
 5415      656E7365 
 5415      5F646562 
 5415      6F756E63 
 5415      65436F75 
 5416              	.LASF39:
 5417 0048 43617053 		.ascii	"CapSense_CONFIG_TYPE_P4_v2_20\000"
 5417      656E7365 
 5417      5F434F4E 
 5417      4649475F 
 5417      54595045 
 5418              	.LASF46:
 5419 0066 43617053 		.ascii	"CapSense_UpdateBaselineNoThreshold\000"
 5419      656E7365 
 5419      5F557064 
 5419      61746542 
 5419      6173656C 
 5420              	.LASF26:
 5421 0089 6E756D62 		.ascii	"numberOfSensors\000"
 5421      65724F66 
 5421      53656E73 
 5421      6F727300 
 5422              	.LASF30:
 5423 0099 70747247 		.ascii	"ptrGetBitValue\000"
 5423      65744269 
 5423      7456616C 
 5423      756500
 5424              	.LASF87:
 5425 00a8 43617053 		.ascii	"CapSense_DisableWidget\000"
 5425      656E7365 
 5425      5F446973 
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 147


 5425      61626C65 
 5425      57696467 
 5426              	.LASF106:
 5427 00bf 74656D70 		.ascii	"tempPos\000"
 5427      506F7300 
 5428              	.LASF54:
 5429 00c7 43617053 		.ascii	"CapSense_UpdateEnabledBaselines\000"
 5429      656E7365 
 5429      5F557064 
 5429      61746545 
 5429      6E61626C 
 5430              	.LASF103:
 5431 00e7 706F7349 		.ascii	"posIndex\000"
 5431      6E646578 
 5431      00
 5432              	.LASF136:
 5433 00f0 43617053 		.ascii	"CapSense_config\000"
 5433      656E7365 
 5433      5F636F6E 
 5433      66696700 
 5434              	.LASF45:
 5435 0100 69735365 		.ascii	"isSensorEnabled\000"
 5435      6E736F72 
 5435      456E6162 
 5435      6C656400 
 5436              	.LASF83:
 5437 0110 6E756D4F 		.ascii	"numOfSensors\000"
 5437      6653656E 
 5437      736F7273 
 5437      00
 5438              	.LASF8:
 5439 011d 756E7369 		.ascii	"unsigned int\000"
 5439      676E6564 
 5439      20696E74 
 5439      00
 5440              	.LASF35:
 5441 012a 746F7461 		.ascii	"totalSensorsNum\000"
 5441      6C53656E 
 5441      736F7273 
 5441      4E756D00 
 5442              	.LASF97:
 5443 013a 706F734E 		.ascii	"posNext\000"
 5443      65787400 
 5444              	.LASF12:
 5445 0142 696E7431 		.ascii	"int16\000"
 5445      3600
 5446              	.LASF44:
 5447 0148 43617053 		.ascii	"CapSense_InitializeEnabledBaselines\000"
 5447      656E7365 
 5447      5F496E69 
 5447      7469616C 
 5447      697A6545 
 5448              	.LASF118:
 5449 016c 43617053 		.ascii	"CapSense_posFiltersData\000"
 5449      656E7365 
 5449      5F706F73 
 5449      46696C74 
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 148


 5449      65727344 
 5450              	.LASF132:
 5451 0184 43617053 		.ascii	"CapSense_debounce\000"
 5451      656E7365 
 5451      5F646562 
 5451      6F756E63 
 5451      6500
 5452              	.LASF41:
 5453 0196 43617053 		.ascii	"CapSense_InitializeSensorBaseline\000"
 5453      656E7365 
 5453      5F496E69 
 5453      7469616C 
 5453      697A6553 
 5454              	.LASF96:
 5455 01b8 706F7350 		.ascii	"posPrev\000"
 5455      72657600 
 5456              	.LASF59:
 5457 01c0 43617053 		.ascii	"CapSense_SetBaselineData\000"
 5457      656E7365 
 5457      5F536574 
 5457      42617365 
 5457      6C696E65 
 5458              	.LASF25:
 5459 01d9 72617744 		.ascii	"rawDataIndex\000"
 5459      61746149 
 5459      6E646578 
 5459      00
 5460              	.LASF34:
 5461 01e6 746F7461 		.ascii	"totalWidgetsNum\000"
 5461      6C576964 
 5461      67657473 
 5461      4E756D00 
 5462              	.LASF63:
 5463 01f6 43617053 		.ascii	"CapSense_SetDiffCountData\000"
 5463      656E7365 
 5463      5F536574 
 5463      44696666 
 5463      436F756E 
 5464              	.LASF124:
 5465 0210 43617053 		.ascii	"CapSense_sensorSignal\000"
 5465      656E7365 
 5465      5F73656E 
 5465      736F7253 
 5465      69676E61 
 5466              	.LASF126:
 5467 0226 43617053 		.ascii	"CapSense_lowBaselineResetCnt\000"
 5467      656E7365 
 5467      5F6C6F77 
 5467      42617365 
 5467      6C696E65 
 5468              	.LASF133:
 5469 0243 43617053 		.ascii	"CapSense_rawDataIndex\000"
 5469      656E7365 
 5469      5F726177 
 5469      44617461 
 5469      496E6465 
 5470              	.LASF70:
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 149


 5471 0259 43617053 		.ascii	"CapSense_SetNoiseThreshold\000"
 5471      656E7365 
 5471      5F536574 
 5471      4E6F6973 
 5471      65546872 
 5472              	.LASF55:
 5473 0274 43617053 		.ascii	"CapSense_UpdateWidgetBaseline\000"
 5473      656E7365 
 5473      5F557064 
 5473      61746557 
 5473      69646765 
 5474              	.LASF131:
 5475 0292 43617053 		.ascii	"CapSense_hysteresis\000"
 5475      656E7365 
 5475      5F687973 
 5475      74657265 
 5475      73697300 
 5476              	.LASF14:
 5477 02a6 666C6F61 		.ascii	"float\000"
 5477      7400
 5478              	.LASF13:
 5479 02ac 696E7433 		.ascii	"int32\000"
 5479      3200
 5480              	.LASF90:
 5481 02b2 636F756E 		.ascii	"count\000"
 5481      7400
 5482              	.LASF24:
 5483 02b8 7265736F 		.ascii	"resolutionsTbl\000"
 5483      6C757469 
 5483      6F6E7354 
 5483      626C00
 5484              	.LASF105:
 5485 02c7 706F7346 		.ascii	"posFiltersMask\000"
 5485      696C7465 
 5485      72734D61 
 5485      736B00
 5486              	.LASF66:
 5487 02d6 43617053 		.ascii	"CapSense_GetNoiseThreshold\000"
 5487      656E7365 
 5487      5F476574 
 5487      4E6F6973 
 5487      65546872 
 5488              	.LASF7:
 5489 02f1 6C6F6E67 		.ascii	"long long unsigned int\000"
 5489      206C6F6E 
 5489      6720756E 
 5489      7369676E 
 5489      65642069 
 5490              	.LASF120:
 5491 0308 43617053 		.ascii	"CapSense_sensorEnableMask\000"
 5491      656E7365 
 5491      5F73656E 
 5491      736F7245 
 5491      6E61626C 
 5492              	.LASF51:
 5493 0322 77696467 		.ascii	"widget\000"
 5493      657400
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 150


 5494              	.LASF117:
 5495 0329 43617053 		.ascii	"CapSense_posFiltersMask\000"
 5495      656E7365 
 5495      5F706F73 
 5495      46696C74 
 5495      6572734D 
 5496              	.LASF128:
 5497 0341 43617053 		.ascii	"CapSense_fingerThreshold\000"
 5497      656E7365 
 5497      5F66696E 
 5497      67657254 
 5497      68726573 
 5498              	.LASF109:
 5499 035a 43617053 		.ascii	"CapSense_AveragingFilter\000"
 5499      656E7365 
 5499      5F417665 
 5499      72616769 
 5499      6E674669 
 5500              	.LASF121:
 5501 0373 43617053 		.ascii	"CapSense_widgetNumber\000"
 5501      656E7365 
 5501      5F776964 
 5501      6765744E 
 5501      756D6265 
 5502              	.LASF69:
 5503 0389 43617053 		.ascii	"CapSense_SetFingerThreshold\000"
 5503      656E7365 
 5503      5F536574 
 5503      46696E67 
 5503      65725468 
 5504              	.LASF115:
 5505 03a5 43617053 		.ascii	"CapSense_DisableRawDataFilters\000"
 5505      656E7365 
 5505      5F446973 
 5505      61626C65 
 5505      52617744 
 5506              	.LASF64:
 5507 03c4 76616C75 		.ascii	"value\000"
 5507      6500
 5508              	.LASF67:
 5509 03ca 43617053 		.ascii	"CapSense_GetFingerHysteresis\000"
 5509      656E7365 
 5509      5F476574 
 5509      46696E67 
 5509      65724879 
 5510              	.LASF62:
 5511 03e7 43617053 		.ascii	"CapSense_GetDiffCountData\000"
 5511      656E7365 
 5511      5F476574 
 5511      44696666 
 5511      436F756E 
 5512              	.LASF48:
 5513 0401 7369676E 		.ascii	"sign\000"
 5513      00
 5514              	.LASF89:
 5515 0406 6F666673 		.ascii	"offset\000"
 5515      657400
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 151


 5516              	.LASF47:
 5517 040d 63616C63 		.ascii	"calc\000"
 5517      00
 5518              	.LASF29:
 5519 0412 70747252 		.ascii	"ptrReadSensorRaw\000"
 5519      65616453 
 5519      656E736F 
 5519      72526177 
 5519      00
 5520              	.LASF79:
 5521 0423 68797374 		.ascii	"hysteresis\000"
 5521      65726573 
 5521      697300
 5522              	.LASF50:
 5523 042e 66696C74 		.ascii	"filteredRawData\000"
 5523      65726564 
 5523      52617744 
 5523      61746100 
 5524              	.LASF56:
 5525 043e 73656E73 		.ascii	"sensorsPerWidget\000"
 5525      6F727350 
 5525      65725769 
 5525      64676574 
 5525      00
 5526              	.LASF85:
 5527 044f 43617053 		.ascii	"CapSense_CheckIsAnyWidgetActive\000"
 5527      656E7365 
 5527      5F436865 
 5527      636B4973 
 5527      416E7957 
 5528              	.LASF134:
 5529 046f 43617053 		.ascii	"CapSense_numberOfSensors\000"
 5529      656E7365 
 5529      5F6E756D 
 5529      6265724F 
 5529      6653656E 
 5530              	.LASF130:
 5531 0488 43617053 		.ascii	"CapSense_negativeNoiseThreshold\000"
 5531      656E7365 
 5531      5F6E6567 
 5531      61746976 
 5531      654E6F69 
 5532              	.LASF33:
 5533 04a8 746F7461 		.ascii	"totalScanslotsNum\000"
 5533      6C536361 
 5533      6E736C6F 
 5533      74734E75 
 5533      6D00
 5534              	.LASF42:
 5535 04ba 73656E73 		.ascii	"sensor\000"
 5535      6F7200
 5536              	.LASF36:
 5537 04c1 73656E73 		.ascii	"sensetivitySeed\000"
 5537      65746976 
 5537      69747953 
 5537      65656400 
 5538              	.LASF86:
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 152


 5539 04d1 43617053 		.ascii	"CapSense_EnableWidget\000"
 5539      656E7365 
 5539      5F456E61 
 5539      626C6557 
 5539      69646765 
 5540              	.LASF16:
 5541 04e7 63686172 		.ascii	"char\000"
 5541      00
 5542              	.LASF68:
 5543 04ec 43617053 		.ascii	"CapSense_GetNegativeNoiseThreshold\000"
 5543      656E7365 
 5543      5F476574 
 5543      4E656761 
 5543      74697665 
 5544              	.LASF10:
 5545 050f 75696E74 		.ascii	"uint16\000"
 5545      313600
 5546              	.LASF60:
 5547 0516 64617461 		.ascii	"data\000"
 5547      00
 5548              	.LASF18:
 5549 051b 69646163 		.ascii	"idac1LevelsTbl\000"
 5549      314C6576 
 5549      656C7354 
 5549      626C00
 5550              	.LASF95:
 5551 052a 7265736F 		.ascii	"resolution\000"
 5551      6C757469 
 5551      6F6E00
 5552              	.LASF82:
 5553 0535 72617749 		.ascii	"rawIndex\000"
 5553      6E646578 
 5553      00
 5554              	.LASF98:
 5555 053e 43617053 		.ascii	"CapSense_centroid\000"
 5555      656E7365 
 5555      5F63656E 
 5555      74726F69 
 5555      6400
 5556              	.LASF139:
 5557 0550 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\CapSense_CSHL.c\000"
 5557      6E657261 
 5557      7465645F 
 5557      536F7572 
 5557      63655C50 
 5558              	.LASF6:
 5559 0579 6C6F6E67 		.ascii	"long long int\000"
 5559      206C6F6E 
 5559      6720696E 
 5559      7400
 5560              	.LASF111:
 5561 0587 43617053 		.ascii	"CapSense_GetWidgetNumber\000"
 5561      656E7365 
 5561      5F476574 
 5561      57696467 
 5561      65744E75 
 5562              	.LASF76:
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 153


 5563 05a0 6465626F 		.ascii	"debounce\000"
 5563      756E6365 
 5563      00
 5564              	.LASF28:
 5565 05a9 70747250 		.ascii	"ptrPreScan\000"
 5565      72655363 
 5565      616E00
 5566              	.LASF75:
 5567 05b4 43617053 		.ascii	"CapSense_CheckIsSensorActive\000"
 5567      656E7365 
 5567      5F436865 
 5567      636B4973 
 5567      53656E73 
 5568              	.LASF27:
 5569 05d1 70747247 		.ascii	"ptrGetRaw\000"
 5569      65745261 
 5569      7700
 5570              	.LASF53:
 5571 05db 43617053 		.ascii	"CapSense_UpdateSensorBaseline\000"
 5571      656E7365 
 5571      5F557064 
 5571      61746553 
 5571      656E736F 
 5572              	.LASF138:
 5573 05f9 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 5573      4320342E 
 5573      392E3320 
 5573      32303135 
 5573      30333033 
 5574 062c 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 5574      20726576 
 5574      6973696F 
 5574      6E203232 
 5574      31323230 
 5575 065f 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 5575      66756E63 
 5575      74696F6E 
 5575      2D736563 
 5575      74696F6E 
 5576              	.LASF40:
 5577 0687 43617053 		.ascii	"CapSense_BaseInit\000"
 5577      656E7365 
 5577      5F426173 
 5577      65496E69 
 5577      7400
 5578              	.LASF94:
 5579 0699 43617053 		.ascii	"CapSense_CalcCentroid\000"
 5579      656E7365 
 5579      5F43616C 
 5579      6343656E 
 5579      74726F69 
 5580              	.LASF119:
 5581 06af 43617053 		.ascii	"CapSense_sensorRaw\000"
 5581      656E7365 
 5581      5F73656E 
 5581      736F7252 
 5581      617700
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 154


 5582              	.LASF112:
 5583 06c2 43617053 		.ascii	"CapSense_GetLowBaselineReset\000"
 5583      656E7365 
 5583      5F476574 
 5583      4C6F7742 
 5583      6173656C 
 5584              	.LASF72:
 5585 06df 43617053 		.ascii	"CapSense_SetNegativeNoiseThreshold\000"
 5585      656E7365 
 5585      5F536574 
 5585      4E656761 
 5585      74697665 
 5586              	.LASF11:
 5587 0702 75696E74 		.ascii	"uint32\000"
 5587      333200
 5588              	.LASF104:
 5589 0709 66697273 		.ascii	"firstTimeIndex\000"
 5589      7454696D 
 5589      65496E64 
 5589      657800
 5590              	.LASF93:
 5591 0718 73746172 		.ascii	"startOfSlider\000"
 5591      744F6653 
 5591      6C696465 
 5591      7200
 5592              	.LASF71:
 5593 0726 43617053 		.ascii	"CapSense_SetFingerHysteresis\000"
 5593      656E7365 
 5593      5F536574 
 5593      46696E67 
 5593      65724879 
 5594              	.LASF65:
 5595 0743 43617053 		.ascii	"CapSense_GetFingerThreshold\000"
 5595      656E7365 
 5595      5F476574 
 5595      46696E67 
 5595      65725468 
 5596              	.LASF100:
 5597 075f 6E756D65 		.ascii	"numerator\000"
 5597      7261746F 
 5597      7200
 5598              	.LASF58:
 5599 0769 6C617374 		.ascii	"lastSensor\000"
 5599      53656E73 
 5599      6F7200
 5600              	.LASF37:
 5601 0774 6866636C 		.ascii	"hfclkFreq_MHz\000"
 5601      6B467265 
 5601      715F4D48 
 5601      7A00
 5602              	.LASF102:
 5603 0782 43617053 		.ascii	"CapSense_GetCentroidPos\000"
 5603      656E7365 
 5603      5F476574 
 5603      43656E74 
 5603      726F6964 
 5604              	.LASF19:
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 155


 5605 079a 69646163 		.ascii	"idac2LevelsTbl\000"
 5605      324C6576 
 5605      656C7354 
 5605      626C00
 5606              	.LASF2:
 5607 07a9 73686F72 		.ascii	"short int\000"
 5607      7420696E 
 5607      7400
 5608              	.LASF4:
 5609 07b3 6C6F6E67 		.ascii	"long int\000"
 5609      20696E74 
 5609      00
 5610              	.LASF57:
 5611 07bc 66697273 		.ascii	"firstSensor\000"
 5611      7453656E 
 5611      736F7200 
 5612              	.LASF92:
 5613 07c8 74656D70 		.ascii	"temp\000"
 5613      00
 5614              	.LASF88:
 5615 07cd 43617053 		.ascii	"CapSense_FindMaximum\000"
 5615      656E7365 
 5615      5F46696E 
 5615      644D6178 
 5615      696D756D 
 5616              	.LASF23:
 5617 07e2 77696467 		.ascii	"widgetNubmersTbl\000"
 5617      65744E75 
 5617      626D6572 
 5617      7354626C 
 5617      00
 5618              	.LASF114:
 5619 07f3 43617053 		.ascii	"CapSense_EnableRawDataFilters\000"
 5619      656E7365 
 5619      5F456E61 
 5619      626C6552 
 5619      61774461 
 5620              	.LASF127:
 5621 0811 43617053 		.ascii	"CapSense_lowBaselineReset\000"
 5621      656E7365 
 5621      5F6C6F77 
 5621      42617365 
 5621      6C696E65 
 5622              	.LASF101:
 5623 082b 64656E6F 		.ascii	"denominator\000"
 5623      6D696E61 
 5623      746F7200 
 5624              	.LASF122:
 5625 0837 43617053 		.ascii	"CapSense_sensorBaseline\000"
 5625      656E7365 
 5625      5F73656E 
 5625      736F7242 
 5625      6173656C 
 5626              	.LASF91:
 5627 084f 6D617869 		.ascii	"maximum\000"
 5627      6D756D00 
 5628              	.LASF17:
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 156


 5629 0857 73697A65 		.ascii	"sizetype\000"
 5629      74797065 
 5629      00
 5630              	.LASF5:
 5631 0860 6C6F6E67 		.ascii	"long unsigned int\000"
 5631      20756E73 
 5631      69676E65 
 5631      6420696E 
 5631      7400
 5632              	.LASF38:
 5633 0872 706F696E 		.ascii	"pointers\000"
 5633      74657273 
 5633      00
 5634              	.LASF52:
 5635 087b 6E6F6973 		.ascii	"noiseThreshold\000"
 5635      65546872 
 5635      6573686F 
 5635      6C6400
 5636              	.LASF140:
 5637 088a 433A5C55 		.ascii	"C:\\Users\\sunyi\\Desktop\\Yushen-Yang-BLE-Lab4\\BL"
 5637      73657273 
 5637      5C73756E 
 5637      79695C44 
 5637      65736B74 
 5638 08b8 45204C61 		.ascii	"E Lab 4.cydsn\000"
 5638      6220342E 
 5638      63796473 
 5638      6E00
 5639              	.LASF32:
 5640 08c6 43617053 		.ascii	"CapSense_CONFIG_TYPE_POINTERS_P4_v2_20\000"
 5640      656E7365 
 5640      5F434F4E 
 5640      4649475F 
 5640      54595045 
 5641              	.LASF73:
 5642 08ed 43617053 		.ascii	"CapSense_SetDebounce\000"
 5642      656E7365 
 5642      5F536574 
 5642      4465626F 
 5642      756E6365 
 5643              	.LASF78:
 5644 0902 66696E67 		.ascii	"fingerThreshold\000"
 5644      65725468 
 5644      72657368 
 5644      6F6C6400 
 5645              	.LASF21:
 5646 0912 63686172 		.ascii	"chargeDivTbl\000"
 5646      67654469 
 5646      7654626C 
 5646      00
 5647              	.LASF1:
 5648 091f 756E7369 		.ascii	"unsigned char\000"
 5648      676E6564 
 5648      20636861 
 5648      7200
 5649              	.LASF129:
 5650 092d 43617053 		.ascii	"CapSense_noiseThreshold\000"
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 157


 5650      656E7365 
 5650      5F6E6F69 
 5650      73655468 
 5650      72657368 
 5651              	.LASF77:
 5652 0945 6465626F 		.ascii	"debounceIndex\000"
 5652      756E6365 
 5652      496E6465 
 5652      7800
 5653              	.LASF43:
 5654 0953 43617053 		.ascii	"CapSense_InitializeAllBaselines\000"
 5654      656E7365 
 5654      5F496E69 
 5654      7469616C 
 5654      697A6541 
 5655              	.LASF61:
 5656 0973 43617053 		.ascii	"CapSense_GetBaselineData\000"
 5656      656E7365 
 5656      5F476574 
 5656      42617365 
 5656      6C696E65 
 5657              	.LASF74:
 5658 098c 43617053 		.ascii	"CapSense_SetLowBaselineReset\000"
 5658      656E7365 
 5658      5F536574 
 5658      4C6F7742 
 5658      6173656C 
 5659              	.LASF20:
 5660 09a9 73656E73 		.ascii	"sensetivityTbl\000"
 5660      65746976 
 5660      69747954 
 5660      626C00
 5661              	.LASF116:
 5662 09b8 43617053 		.ascii	"CapSense_centroidMult\000"
 5662      656E7365 
 5662      5F63656E 
 5662      74726F69 
 5662      644D756C 
 5663              	.LASF84:
 5664 09ce 73746174 		.ascii	"state\000"
 5664      6500
 5665              	.LASF137:
 5666 09d4 43617053 		.ascii	"CapSense_enableRawFilters\000"
 5666      656E7365 
 5666      5F656E61 
 5666      626C6552 
 5666      61774669 
 5667              	.LASF22:
 5668 09ee 6D6F6444 		.ascii	"modDivTbl\000"
 5668      69765462 
 5668      6C00
 5669              	.LASF0:
 5670 09f8 7369676E 		.ascii	"signed char\000"
 5670      65642063 
 5670      68617200 
 5671              	.LASF3:
 5672 0a04 73686F72 		.ascii	"short unsigned int\000"
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 158


 5672      7420756E 
 5672      7369676E 
 5672      65642069 
 5672      6E7400
 5673              	.LASF107:
 5674 0a17 43617053 		.ascii	"CapSense_GetRadialCentroidPos\000"
 5674      656E7365 
 5674      5F476574 
 5674      52616469 
 5674      616C4365 
 5675              	.LASF31:
 5676 0a35 70747253 		.ascii	"ptrSetBitValue\000"
 5676      65744269 
 5676      7456616C 
 5676      756500
 5677              	.LASF108:
 5678 0a44 43617053 		.ascii	"CapSense_MedianFilter\000"
 5678      656E7365 
 5678      5F4D6564 
 5678      69616E46 
 5678      696C7465 
 5679              	.LASF49:
 5680 0a5a 74656D70 		.ascii	"tempRaw\000"
 5680      52617700 
 5681              	.LASF113:
 5682 0a62 43617053 		.ascii	"CapSense_GetDebounce\000"
 5682      656E7365 
 5682      5F476574 
 5682      4465626F 
 5682      756E6365 
 5683              	.LASF81:
 5684 0a77 43617053 		.ascii	"CapSense_CheckIsWidgetActive\000"
 5684      656E7365 
 5684      5F436865 
 5684      636B4973 
 5684      57696467 
 5685              	.LASF9:
 5686 0a94 75696E74 		.ascii	"uint8\000"
 5686      3800
 5687              	.LASF15:
 5688 0a9a 646F7562 		.ascii	"double\000"
 5688      6C6500
 5689              	.LASF135:
 5690 0aa1 43617053 		.ascii	"CapSense_rawFilterData1\000"
 5690      656E7365 
 5690      5F726177 
 5690      46696C74 
 5690      65724461 
 5691              	.LASF99:
 5692 0ab9 706F7369 		.ascii	"position\000"
 5692      74696F6E 
 5692      00
 5693              	.LASF125:
 5694 0ac2 43617053 		.ascii	"CapSense_sensorOnMask\000"
 5694      656E7365 
 5694      5F73656E 
 5694      736F724F 
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccDxWxH0.s 			page 159


 5694      6E4D6173 
 5695              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
